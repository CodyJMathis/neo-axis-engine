// Made with NeoAxis Engine 2024.2.

.component NeoAxis.Scene
{
	RenderingPipeline
	{
		GetByReference = "root:$Rendering Pipeline"
	}
	CameraEditor
	{
		GetByReference = "this:$Camera Editor"
	}
	CameraEditor2D
	{
		GetByReference = "this:$Camera Editor 2D"
	}
	.component NeoAxis.Camera
	{
		Name = Camera Editor
		Visible = False
		Transform = "-15.1030045828922 -2.57192941440334 26.2870089214857; -0.206706251680412 0.325463008339332 0.494673872031856 0.7788736200745; 1 1 1"
	}
	.component NeoAxis.Camera
	{
		Name = Camera Editor 2D
		Visible = False
		Transform = "2.64918580053222 3.02745193504869 10; -0.502493739596367 0.497493760429674 0.497493760429674 0.502493739596367; 1 1 1"
		Projection = Orthographic
		Height = 16.8586419336498
		FixedUp = 0 1 0
		FarClipPlane = 100
	}
	.component NeoAxis.Light
	{
		Name = Ambient Light
		Transform = "18.5822734231225 -5.39737456891382 0.8606866051066; 0.177025544047126 0 0 0.98420625722194; 1 1 1"
		Type = Ambient
		Brightness = 80000
	}
	.component NeoAxis.Light
	{
		Name = Directional Light
		Transform = "23.4737008768449 -15.0814890020227 22.8055842838911; -0.48553441582008 -0.67324283509012 0.472744885192886 -0.295825437679109; 1 1 1"
		Type = Directional
		Brightness = 400000
		AttenuationFar = 100
		AttenuationPower = 1.5
		SpotlightInnerAngle = 80
		SpotlightOuterAngle = 91.429
	}
	.component NeoAxis.RenderingPipeline_Basic
	{
		Name = Rendering Pipeline
		ShadowIntensity = 0.5
		ShadowDirectionalDistance = 200
		ShadowPointSpotlightDistance = 200
		.component NeoAxis.Component
		{
			Name = Background Effects
		}
		.component NeoAxis.Component
		{
			Name = Scene Effects
			.component NeoAxis.RenderingEffect_AmbientOcclusion
			{
				Name = Ambient Occlusion
			}
			.component NeoAxis.RenderingEffect_LensEffects
			{
				Name = Lens Effects
			}
			.component NeoAxis.RenderingEffect_ToneMapping
			{
				Name = Tone Mapping
				Intensity = 0.5
			}
			.component NeoAxis.RenderingEffect_ToLDR
			{
				Name = To LDR
			}
			.component NeoAxis.RenderingEffect_Antialiasing
			{
				Name = Antialiasing
			}
			.component NeoAxis.RenderingEffect_ResolutionUpscale
			{
				Name = Resolution Upscale
			}
			.component NeoAxis.RenderingEffect_Sharpen
			{
				Name = Sharpen
			}
			.component NeoAxis.RenderingEffect_MotionBlur
			{
				Name = Motion Blur
			}
			.component NeoAxis.RenderingEffect_Precipitation
			{
				Name = Precipitation
			}
		}
		.component NeoAxis.Component
		{
			Name = Final Image Effects
		}
	}
	.component NeoAxis.GameMode
	{
		Name = Game Mode
		UseBuiltInCamera = ThirdPerson
		ThirdPersonCameraHorizontalAngle = 89.99999999999993
		InventoryWidget = True
		CutsceneStarted = False
		CutsceneGuiFadingFactor = 0
		CutsceneGuiFadingSpeed = 0
		ScreenFadingCurrentColor = 0 0 0 0
		ScreenFadingTargetColor = 0 0 0 0
		ScreenFadingSpeed = 0
		ObjectControlledByPlayer
		{
			GetByReference = "this:..\\$Character"
		}
	}
	.component NeoAxis.NetworkLogic
	{
		Name = Network Logic
	}
	.component NeoAxis.SpawnPoint
	{
		Name = Spawn Point
		Transform = "4.49515912893015 -1.55471130674913 1.15; 0 0 0.707106781186548 0.707106781186548; 1 1 1"
	}
	.component NeoAxis.GroupOfObjects
	{
		Name = Group Of Objects
		Objects = "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"
		ObjectsZip = True
		ObjectsVersion = 2
		BaseObjects
		{
			Count = 1
			0 "NeoAxis.Reference<NeoAxis.Component>"
			{
				GetByReference = "root:$Terrain"
			}
		}
		.component NeoAxis.GroupOfObjectsElement_Surface
		{
			Name = Surface Doronicum grandiflorum
			Surface
			{
				GetByReference = "Content\\Vegetation\\Models\\Flowering plant\\Doronicum grandiflorum\\Doronicum grandiflorum.surface"
			}
		}
		.component NeoAxis.GroupOfObjectsElement_Surface
		{
			Name = Surface Matricaria chamomilla
			Index = 1
			Surface
			{
				GetByReference = "Content\\Vegetation\\Models\\Flowering plant\\Matricaria chamomilla\\Matricaria chamomilla.surface"
			}
		}
		.component NeoAxis.GroupOfObjectsElement_Surface
		{
			Name = Surface Poa annua
			Index = 2
			Surface
			{
				GetByReference = "Content\\Vegetation\\Models\\Flowering plant\\Poa annua\\Poa annua.surface"
			}
		}
	}
	.component NeoAxis.Character
	{
		Name = Character
		Transform = "2.53405386498995 -3.13162400158375 0; 0 0 0.707106781186547 0.707106781186548; 1 1 1"
		Collision = True
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.MeshInSpaceAnimationController
		{
			Name = Animation Controller
		}
		.component NeoAxis.CharacterInputProcessing
		{
			Name = Character Input Processing
		}
		.component NeoAxis.CharacterAI
		{
			Name = Character AI
			NetworkMode = False
			LookingForFoodModeIdleTime = 10
		}
	}
	.component NeoAxis.Weapon
	{
		Name = Weapon
		Transform = "4.82441706724031 -0.373372663541152 0.0401555721846707; -0.707106781186548 0 0 0.707106781186548; 1 1 1"
		Collision = True
		Mesh
		{
			GetByReference = "Content\\Weapons\\Default\\scene.gltf|$Mesh"
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
	}
	.component NeoAxis.Terrain
	{
		Name = Terrain
		MaterialUV0 = 0.5 0.5
		HeightmapBuffer = "UEsDBBQAAAAIAKOaFFnB8yayABIAAAQQEAAEAAAAZmlsZe3QgQAAAADDoPlTH+EChVBhwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGPgDA1BLAQIUABQAAAAIAKOaFFnB8yayABIAAAQQEAAEAAAAAAAAAAAAAAAAAAAAAABmaWxlUEsFBgAAAAABAAEAMgAAACISAAAAAA=="
		HeightmapBufferZip = True
		Holes
		{
			Count = 0
		}
		Material
		{
			GetByReference = "Content\\Materials\\Basic Library\\Ground\\Grass 01.material"
		}
		.component NeoAxis.PaintLayer
		{
			Name = Paint Layer
			BlendMode = Transparent
			Mask
			{
				Value
				{
					Length = 1048576
					.elements = "UEsDBBQAAAAIAKOaFFlhUIQVaRQAAAAAEAAEAAAAZmlsZe3cT2gUVxwH8MRospo1JoF1sxY0rdYcVJBosKg1h0oRbSntqabioZUYyrriH2z9U9eIoSKS1nppaSW00oNeaqX0oAVRoQfRQwsihdKTHrwUC0oVDyNpSZwIWZllD2/gs5e8yeT33vd9ht/uLMumrs6DAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAIGUCkzJZKY3TWtIaXqxCRCoSqBhZlt7Z/drm4v7jhw9Pljq631pdke+UHghn8vlCh2FjvYZU6uaVxEBAqELtA3s2fXZhYfR+OPfG6c/eb+/uPtAefjk8SMfF99Z07OwMCP0bchHgEAVAh/dGu/8p4O/fvv9z/v/H96/de5o/4alsxvqq5hcCQECIQtk3vv1adtPNrr3c3ldZ2ZKyPuQjQCBKgTW356s6+O/v/f9pvmeAKrgVUIgaIF3421eYXy+b05j0BsRjgCBxAJbK/R8/NSjr3tn+XAwMa8CAiELZHbGm7zS+GZpnhuAkC+lbASSCwxV6vn4uYcnlmV9BpAcWAWBgAVG4j1ecXxmbav+D/hKikYgucC3FXs+fvLCxhfb2zLJV1BBgECoAl/EW7zy+MrWoRunekLdiFwECCQWKFfu+QlnH0dRdKgp8RIKCBAIVODwhA5//sFJ7wACvZJiEUgsMOer57f8hL/Ylk28hgICBMIU6P4p9tW/CY0+ycGnuTA3IhUBAskFVg1sH7k71usPxgb/PBobPfuz1Jp8DRUECAQqkGlumftq30Dxg9KH28pf/vDL1Us/flP+fOTs+YuXr9+880z7XxtuC3QbYhEgULVAY7alubVz8YrX33z7jdXLX+l9a1P/jn179+/df/DYiWOD/Wu6z0VRdLBnZb7qFRQSIBC2QOPMlpZMXd3UaU3Z3NyFixYvWdTV1bWgMKuxvmkwiqKhsNNLR4BATQXqx/7px/LRNwKbazq3yQgQSIlAabT/u1ISVkwCBGoqsGq0/xfUdEqTESCQEoH/7v+bUxJWTAIEaiqwZfT133d/ampqMgJpETgQRdHfxbSklZMAgVoKvPxHFH23tpYzmosAgdQIZPP5jtSEFZQAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIAAAQJBCzwBUEsBAhQAFAAAAAgAo5oUWWFQhBVpFAAAAAAQAAQAAAAAAAAAAAAAAAAAAAAAAGZpbGVQSwUGAAAAAAEAAQAyAAAAixQAAAAA"
					.elementsZip = True
				}
			}
			Material
			{
				GetByReference = "Content\\Materials\\Basic Library\\Concrete\\Concrete Floor 01.material"
			}
		}
	}
	.component NeoAxis.Road
	{
		Name = Road
		Transform = "-64 9.5 0.1; 0 0 0 1; 1 1 1"
		.component NeoAxis.RoadPoint
		{
			Name = Road Point
			Transform = "81 9.5 0.1; 0 0 0 1; 1 1 1"
		}
		.component NeoAxis.RoadPoint
		{
			Name = Road Point 2
			Transform = "122.429117686929 14.4462209606537 0.1; 0 0 0 1; 1 1 1"
		}
		.component NeoAxis.RoadPoint
		{
			Name = Road Point 3
			Transform = "141.220172889572 36.7292083761047 0.1; 0 0 0 1; 1 1 1"
		}
		.component NeoAxis.RoadPoint
		{
			Name = Road Point 4
			Transform = "129.720172889572 72.7292083761047 0.1; 0 0 0 1; 1 1 1"
		}
		.component NeoAxis.RoadModifier
		{
			Name = Road Modifier
			PredefinedModifiers = SidewalkLeft, SidewalkRight
		}
	}
	.component NeoAxis.Road
	{
		Name = Road 2
		Transform = "-65 77.5 0.1; 0 0 0 1; 1 1 1"
		.component NeoAxis.RoadPoint
		{
			Name = Road Point
			Transform = "119.5 77.5 0.1; 0 0 0 1; 1 1 1"
		}
		.component NeoAxis.RoadModifier
		{
			Name = Road Modifier
			PredefinedModifiers = SidewalkLeft, SidewalkRight
		}
	}
	.component NeoAxis.Road
	{
		Name = Road 4
		Transform = "128 78 0.1; 0 0 0 1; 1 1 1"
		.component NeoAxis.RoadPoint
		{
			Name = Road Point
			Transform = "171.5 153 0.1; 0 0 0 1; 1 1 1"
		}
		.component NeoAxis.RoadModifier
		{
			Name = Road Modifier
			PredefinedModifiers = SidewalkLeft, SidewalkRight
		}
	}
	.component NeoAxis.Road
	{
		Name = Road 3
		Transform = "8.50000000000001 11 0.1; 0 0 0.707106781186548 0.707106781186548; 1 1 1"
		.component NeoAxis.RoadPoint
		{
			Name = Road Point
			Transform = "8.49999999999999 75 0.1; 0 0 0.707106781186548 0.707106781186548; 1 1 1"
		}
		.component NeoAxis.RoadModifier
		{
			Name = Road Modifier
			PredefinedModifiers = SidewalkLeft, SidewalkRight
		}
	}
	.component NeoAxis.Crossroad
	{
		Name = Crossroad
		Transform = "8.5 9.5 0.1; 0 0 0 1; 18 18 2"
		CurvatureRadius = 3
		CrossingMarkings = True
	}
	.component NeoAxis.Crossroad
	{
		Name = Crossroad 2
		Transform = "8.5 77.5 0.1; 0 0 0 1; 18 18 2"
		CurvatureRadius = 3
		CrossingMarkings = True
	}
	.component NeoAxis.Crossroad
	{
		Name = Crossroad 3
		Transform = "126.5 77.5 0.1; 0 0 0 1; 18 18 2"
		CrossingMarkings = True
	}
	.component NeoAxis.SurfaceArea
	{
		Name = Surface Area
		Transform = "12.8060975596524 105.665513522601 -0.0843787461425478; 0 0 0 1; 1 1 1"
		Surface
		{
			GetByReference = "Content\\Vegetation\\Models\\Woody plant\\Quercus robur\\Quercus robur.surface"
		}
		.component NeoAxis.GroupOfObjects
		{
			Name = Group Of Objects
			ObjectsSerialize = False
			ObjectsNetworkMode = False
			BaseObjects
			{
				Count = 1
				0 "NeoAxis.Reference<NeoAxis.Component>"
				{
					GetByReference = "root:$Terrain"
				}
			}
			.component NeoAxis.GroupOfObjectsElement_Surface
			{
				Name = Surface
				AutoAlign = False
				Surface
				{
					GetByReference = "this:..\\..\\Surface"
				}
			}
		}
		.component NeoAxis.AreaPoint
		{
			Name = Point 1
			Transform = "-60.5111317884869 152.151905590077 -0.0375009223649272; 0 0 0 1; 1 1 1"
		}
		.component NeoAxis.AreaPoint
		{
			Name = Point 2
			Transform = "91.7029331187567 154.605507418771 -0.100014960034201; 0 0 0 1; 1 1 1"
		}
		.component NeoAxis.AreaPoint
		{
			Name = Point 3
			Transform = "88.7087473822426 93.9022206477733 -0.099997064229342; 0 0 0 1; 1 1 1"
		}
		.component NeoAxis.AreaPoint
		{
			Name = Point 4
			Transform = "-61.6761584739026 93.002420433783 -0.100002037941721; 0 0 0 1; 1 1 1"
		}
	}
	.component NeoAxis.Fence
	{
		Name = Brown 1
		Transform = "-6.96499329890233 17.5 0; 0 0 0 1; 1 1 1"
		.component NeoAxis.FencePoint
		{
			Name = Fence Point
			Transform = "0.5 17.5 0; 0 0 0 1; 1 1 1"
		}
		.component NeoAxis.FencePoint
		{
			Name = Fence Point 2
			Transform = "0.5 44.5 0; 0 0 0 1; 1 1 1"
		}
	}
	.component NeoAxis.Fence
	{
		Name = Brown 2
		Transform = "-8.96499329890233 17.5 0; 0 0 0 1; 1 1 1"
		.component NeoAxis.FencePoint
		{
			Name = Fence Point
			Transform = "-36 17.5 0; 0 0 0 1; 1 1 1"
		}
		.component NeoAxis.FencePoint
		{
			Name = Fence Point 2
			Transform = "-36 44.5 0; 0 0 0 1; 1 1 1"
		}
	}
	.component NeoAxis.MeshInSpace
	{
		Name = Mesh In Space
		Transform = "48.4689468024041 21.5078817176329 0.157327246714974; 0 0 0 1; 1 1 1"
		Mesh
		{
			GetByReference = "Content\\Vegetation\\Models\\Woody plant\\Quercus robur\\Quercus robur 1 Individual 1 Very young.mesh"
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
	}
	.component NeoAxis.MeshInSpace
	{
		Name = Mesh In Space 2
		Transform = "46.068087629515 33.5790820465892 0.157327246714974; 0 0 0 1; 1 1 1"
		Mesh
		{
			GetByReference = "Content\\Vegetation\\Models\\Woody plant\\Quercus robur\\Quercus robur 1 Individual 1 Very young.mesh"
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
	}
	.component NeoAxis.Vehicle
	{
		Name = Vehicle
		Transform = "-5.33076772509179 7.31914167474528 0.424092927668612; 0 0 0 1; 1 1 1"
		Collision = True
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		ObjectsOnSeats
		{
			Count = 0
		}
	}
	.component NeoAxis.Road
	{
		Name = Road 5
		Transform = "-64.0174908595852 14.2967071186438 0.351989230682467; 0 0 0 1; 1 1 1"
		DisplayLaneCurvesInEditor = True
		RoadType
		{
			GetByReference = "Content\\Constructors\\Roads\\Walking Path\\Walking Path.roadtype"
		}
		.component NeoAxis.RoadPoint
		{
			Name = Road Point
			Transform = "1.94015439826742 13.9994813773914 0.351989230682467; 0 0 0 1; 1 1 1"
		}
		.component NeoAxis.RoadPoint
		{
			Name = Road Point 2
			Transform = "38.0653951516105 13.9664290382865 0.351989230682467; 0 0 0 1; 1 1 1"
		}
		.component NeoAxis.RoadPoint
		{
			Name = Road Point 3
			Transform = "77.7681168499387 14.1552624865622 0.351989230682467; 0 0 0 1; 1 1 1"
		}
	}
	.component NeoAxis.Road
	{
		Name = Road 6
		Transform = "3.6573883261524 70.6971780880633 0.351989230682467; 0 0 0 1; 1 1 1"
		DisplayLaneCurvesInEditor = True
		RoadType
		{
			GetByReference = "Content\\Constructors\\Roads\\Walking Path\\Walking Path.roadtype"
		}
		.component NeoAxis.RoadPoint
		{
			Name = Road Point
			Transform = "3.68098985929688 4.3346909114578 0.351989230682467; 0 0 0 1; 1 1 1"
		}
	}
	.component NeoAxis.Crossroad
	{
		Name = Crossroad 4
		Transform = "3.63361859882954 13.9890653966191 0.476570247806084; 0 0 0 1; 3 3 0.4"
		WayToUse = Walking
	}
	.component NeoAxis.TrafficSystem
	{
		Name = Traffic System
		ParkedVehicles = 10
		WalkingPedestrians = 10
		.component NeoAxis.TrafficSystemElement
		{
			Name = Traffic System Element
			ObjectType
			{
				GetByReference = "Content\\Vehicles\\Default\\Default Vehicle.vehicletype"
			}
		}
		.component NeoAxis.TrafficSystemElement
		{
			Name = Traffic System Element 2
			ObjectType
			{
				GetByReference = "Content\\Characters\\Default\\Default.charactertype"
			}
		}
	}
	.component NeoAxis.Building
	{
		Name = Building
		Transform = "-16.5 27.5 0; 0 0 0 1; 1 1 1"
		Size = 4 2 2
		.component NeoAxis.BuildingElement
		{
			Name = Element Side 1 Floor Window
			Levels = 0 0
			Sides = MinusY, PlusY
			Mesh
			{
				GetByReference = "Content\\Constructors\\Buildings\\Modern building\\Data\\Window level 1.obj|$Mesh"
			}
		}
		.component NeoAxis.BuildingElement
		{
			Name = Element Side 1 Floor Wall
			Sides = MinusX, PlusX
			Mesh
			{
				GetByReference = "Content\\Constructors\\Buildings\\Modern building\\Data\\Wall.obj|$Mesh"
			}
		}
		.component NeoAxis.BuildingElement
		{
			Name = Element Side 2+ Floor Window
			Levels = 1 10000
			Sides = MinusY, PlusY
			Mesh
			{
				GetByReference = "Content\\Constructors\\Buildings\\Modern building\\Data\\Window level 2+.obj|$Mesh"
			}
		}
		.component NeoAxis.BuildingElement
		{
			Name = Element Roof
			ElementType = Roof
			Mesh
			{
				GetByReference = "Content\\Constructors\\Buildings\\Modern building\\Data\\Roof.obj|$Mesh"
			}
		}
		.component NeoAxis.BuildingElement
		{
			Name = Element Roof Edge
			ElementType = RoofEdge
			Mesh
			{
				GetByReference = "Content\\Constructors\\Buildings\\Modern building\\Data\\Roof side.obj|$Mesh"
			}
		}
		.component NeoAxis.BuildingElement
		{
			Name = Element Roof Corner
			ElementType = RoofCorner
			Mesh
			{
				GetByReference = "Content\\Constructors\\Buildings\\Modern building\\Data\\Roof corner.obj|$Mesh"
			}
		}
		.component NeoAxis.BuildingElement
		{
			Name = Element Cell Level 1 1
			ElementType = Cell
			Levels = 0 0
			Sides = MinusY, PlusY
			Mesh
			{
				GetByReference = "Content\\Constructors\\Buildings\\Modern building\\Data\\Room 2.obj|$Mesh"
			}
		}
		.component NeoAxis.BuildingElement
		{
			Name = Element Cell Level 1 2
			ElementType = Cell
			Levels = 0 0
			Sides = MinusY, PlusY
			Mesh
			{
				GetByReference = "Content\\Constructors\\Buildings\\Modern building\\Data\\Room 3.obj|$Mesh"
			}
		}
		.component NeoAxis.BuildingElement
		{
			Name = Element Cell Level 1 3
			ElementType = Cell
			Levels = 0 0
			Sides = PlusXMinusY, MinusXPlusY
			RotationOffset = 0 0 -0.707106781186547 0.707106781186547
			Mesh
			{
				GetByReference = "Content\\Constructors\\Buildings\\Modern building\\Data\\Room 2.obj|$Mesh"
			}
		}
		.component NeoAxis.BuildingElement
		{
			Name = Element Cell Level 2+ 1
			ElementType = Cell
			Levels = 1 10000
			Sides = MinusY, PlusY
			Mesh
			{
				GetByReference = "Content\\Constructors\\Buildings\\Modern building\\Data\\Room 4.obj|$Mesh"
			}
		}
		.component NeoAxis.BuildingElement
		{
			Name = Element Cell Level 2+ 2
			ElementType = Cell
			Levels = 1 10000
			Sides = MinusY, PlusY
			PositionOffset = 0 0 0.4
			Mesh
			{
				GetByReference = "Content\\Constructors\\Buildings\\Modern building\\Data\\Room 2.obj|$Mesh"
			}
		}
		.component NeoAxis.BuildingElement
		{
			Name = Element Cell Level 2+ 3
			ElementType = Cell
			Levels = 1 10000
			Sides = MinusY, PlusY
			PositionOffset = 0 0 0.4
			Mesh
			{
				GetByReference = "Content\\Constructors\\Buildings\\Modern building\\Data\\Room 3.obj|$Mesh"
			}
		}
		.component NeoAxis.BuildingElement
		{
			Name = Element Cell Level 2+ 4
			ElementType = Cell
			Levels = 1 10000
			Sides = PlusXMinusY, MinusXPlusY
			PositionOffset = 0 0 0.4
			RotationOffset = 0 0 -0.707106781186547 0.707106781186547
			Mesh
			{
				GetByReference = "Content\\Constructors\\Buildings\\Modern building\\Data\\Room 3.obj|$Mesh"
			}
		}
	}
	.component NeoAxis.Building
	{
		Name = Building 2
		Transform = "39.5 49.5 0; 0 0 0 1; 1 1 1"
		Size = 4 2 8
		BuildingType
		{
			GetByReference = "Content\\Constructors\\Buildings\\Modern building\\Modern building.buildingtype"
		}
	}
	.component "Content\\Environments\\Basic Library\\Outdoor\\Kloofendal.skybox"
	{
		Name = Sky Kloofendal
		CubemapStretch = 1.1
		CubemapMultiplier = "1 1 0.7450196; 2"
		AffectLighting = 0.75
	}
	.component NeoAxis.Gate
	{
		Name = Brown
		Transform = "-8.92823484138002 17.5 0; 0 0 0 1; 1 1 1"
		Collision = True
		AllowInteract = True
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		GateType
		{
			GetByReference = "Content\\Fences\\NeoAxis\\Woodfence\\Brown.gatetype"
		}
	}
}
