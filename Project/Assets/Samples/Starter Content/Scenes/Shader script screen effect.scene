// Made with NeoAxis Engine 2022.1.

.component NeoAxis.Scene
{
	EditorDocumentConfiguration = "\xfeff<?xml version=\"1.0\" encoding=\"utf-16\"?><KD V=\"1\"><DGD /><DM N=\"DockingManager\" C=\"2\"><DW N=\"DockingWorkspace\" O=\"0\" S=\"1143, 842\"><KW V=\"1\" A=\"4F5B11A47160402907B369EE0DC1691B\"><CGD /><WS UN=\"4A87E34386084E14BC81ED10FBED4D99\" S=\"T,0,50:T,0,50\" D=\"Horizontal\"><WS UN=\"42CA4A84922549A3E8B8BEF98505E5A0\" S=\"T,0,50:T,0,50\" D=\"Vertical\"><WC UN=\"8A564A7ACA74467143B61C0C36CE3DE1\" S=\"T,0,50:T,0,503\" NM=\"BarTabGroup\" AR=\"True\" SP=\"4F5B11A47160402907B369EE0DC1691B\"><KP UN=\"4F5B11A47160402907B369EE0DC1691B\" S=\"False\"><CPD ObjPath=\"\" /></KP></WC><WS UN=\"AB526B3FAA724EC5FDBD04DD1C07DE70\" S=\"T,0,50:T,0,334\" D=\"Horizontal\"><WC UN=\"869FEC1F20C241C795BF34BC1E16E522\" S=\"T,0,478:T,0,50\" NM=\"BarTabGroup\" AR=\"True\" SP=\"EDB2BCE14E7A4AD1CAA6312ADEEC398C\"><KP UN=\"EDB2BCE14E7A4AD1CAA6312ADEEC398C\" S=\"False\"><CPD ObjPath=\"$Rendering Pipeline\\$Scene Effects\\$Code Generated\\$Shader graph\" /></KP></WC><WC UN=\"98E47F278F96490A98806130ADA5BC5C\" S=\"T,0,691:T,0,50\" NM=\"BarTabGroup\" AR=\"True\" SP=\"8D494E1A9886456F77B34CB02E499BCA\"><KP UN=\"8D494E1A9886456F77B34CB02E499BCA\" S=\"False\"><CPD ObjPath=\"$Rendering Pipeline\\$Scene Effects\\$Code Generated\\$Shader graph\\$Node Shader 1\\$Shader\" /></KP></WC></WS></WS></WS></KW></DW><DF N=\"DockingFloating\" C=\"0\"></DF></DM></KD>"
	RenderingPipeline
	{
		GetByReference = "root:$Rendering Pipeline"
	}
	CameraEditor
	{
		GetByReference = "this:$Camera Editor"
	}
	.component NeoAxis.Camera
	{
		Name = Camera Editor
		Visible = False
		Transform = "2.56250311603928 -4.41225870968923 4.28704778599825; -0.207144894961892 0.190576265955526 0.706171174410122 0.649687580132101; 1 1 1"
	}
	.component NeoAxis.Light
	{
		Name = Ambient Light
		Transform = "18.5822734231225 -5.39737456891382 0.8606866051066; 0.177025544047126 0 0 0.98420625722194; 1 1 1"
		Type = Ambient
		Brightness = 20000
	}
	.component NeoAxis.Light
	{
		Name = Light 1
		Transform = "23.4737008768449 -15.0814890020227 22.8055842838911; -0.48553441582008 -0.67324283509012 0.472744885192886 -0.295825437679109; 1 1 1"
		Type = Directional
		Brightness = 140000
		AttenuationFar = 100
		AttenuationPower = 1.5
		SpotlightInnerAngle = 80
		SpotlightOuterAngle = 91.429
	}
	.component NeoAxis.RenderingPipeline_Basic
	{
		Name = Rendering Pipeline
		ShadowFarDistance = 40
		.component NeoAxis.Component
		{
			Name = Background Effects
		}
		.component NeoAxis.Component
		{
			Name = Scene Effects
			.component NeoAxis.RenderingEffect_AmbientOcclusion
			{
				Name = Ambient Occlusion
			}
			.component NeoAxis.RenderingEffect_Bloom
			{
				Enabled = False
				Name = Bloom
			}
			.component NeoAxis.RenderingEffect_LensEffects
			{
				Name = Lens Effects
			}
			.component NeoAxis.RenderingEffect_ToneMapping
			{
				Name = Tone Mapping
				Intensity = 0.5
			}
			.component NeoAxis.RenderingEffect_ToLDR
			{
				Name = To LDR
			}
			.component NeoAxis.RenderingEffect_Antialiasing
			{
				Name = Antialiasing
			}
			.component NeoAxis.RenderingEffect_ResolutionUpscale
			{
				Name = Resolution Upscale
			}
			.component NeoAxis.RenderingEffect_Sharpen
			{
				Name = Sharpen
			}
			.component NeoAxis.RenderingEffect_Script
			{
				Name = Code Generated
				Color
				{
					GetByReference = "this:$Shader graph\\$Node Shader 1\\$Shader\\__parameter_ReturnValue"
				}
				.component NeoAxis.FlowGraph
				{
					Name = Shader graph
					EditorScrollPosition = -3.61367877901598 -2.98109296460166
					EditorZoomIndex = 4
					Specialization
					{
						GetByReference = NeoAxis.FlowGraphSpecialization_Shader|Instance
					}
					.component NeoAxis.FlowGraphNode
					{
						Name = Node Code Generated
						Position = 6 -6
						ControlledObject
						{
							GetByReference = "this:..\\.."
						}
					}
					.component NeoAxis.FlowGraphNode
					{
						Name = Node Shader 1
						Position = -9 -8
						ControlledObject
						{
							GetByReference = "this:$Shader"
						}
						.component NeoAxis.ShaderScript
						{
							Name = Shader
							Code = "public vec4 MyMethod(vec4 sourceColor, vec2 texCoord, float time)\r\n{\r\n\tfloat x = texCoord.x + time * 0.03;\r\n\tfloat offsetX = x - trunc(x);\r\n\tvec2 texCoord2 = vec2(offsetX, texCoord.y);\t\r\n\tvec4 color = texture2D(s_sourceTexture, texCoord2);\r\n\tcolor.b = saturate(cos(time));\r\n\treturn color;\r\n}\r\n"
							__parameter_SourceColor
							{
								GetByReference = "this:..\\..\\$Node Invoke Member 3\\$Invoke Member\\__value_Value"
							}
							__parameter_TexCoord
							{
								GetByReference = "this:..\\..\\$Node Invoke Member 1\\$Invoke Member\\__value_Value"
							}
							__parameter_Time
							{
								GetByReference = "this:..\\..\\$Node Shader Parameter 1\\$Shader Parameter\\Output"
							}
						}
					}
					.component NeoAxis.FlowGraphNode
					{
						Name = Node Invoke Member 1
						Position = -24 -7
						ControlledObject
						{
							GetByReference = "this:$Invoke Member"
						}
						.component NeoAxis.InvokeMember
						{
							Name = Invoke Member
							Member
							{
								GetByReference = "NeoAxis.ShaderConstants|property:TexCoord0"
							}
							Exit
							{
							}
						}
					}
					.component NeoAxis.FlowGraphNode
					{
						Name = Node Invoke Member 3
						Position = -24 -11
						ControlledObject
						{
							GetByReference = "this:$Invoke Member"
						}
						.component NeoAxis.InvokeMember
						{
							Name = Invoke Member
							Member
							{
								GetByReference = "NeoAxis.ShaderConstants|property:Color0"
							}
							Exit
							{
							}
						}
					}
					.component NeoAxis.FlowGraphNode
					{
						Name = Node Shader Parameter 1
						Position = -24 -3
						ControlledObject
						{
							GetByReference = "this:$Shader Parameter"
						}
						.component NeoAxis.ShaderParameter
						{
							Name = Shader Parameter
							Source
							{
								GetByReference = NeoAxis.EngineApp|EngineTime
							}
						}
					}
				}
			}
		}
		.component NeoAxis.Component
		{
			Name = Final Image Effects
		}
	}
	.component NeoAxis.GameMode
	{
		Name = Game Mode
		CutsceneStarted = False
		CutsceneGuiFadingFactor = 0
		CutsceneGuiFadingSpeed = 0
		ScreenFadingCurrentColor = 0 0 0 0
		ScreenFadingTargetColor = 0 0 0 0
		ScreenFadingSpeed = 0
	}
	.component NeoAxis.Light
	{
		Name = Light 2
		Transform = "-16.276133519817 -13.7764744895929 22.8055842838911; -0.800753779408636 -0.218616030310482 0.553641801455134 0.066941554624803; 1 1 1"
		Type = Spotlight
		Brightness = 175962.87801
		AttenuationFar = 100
		AttenuationPower = 1.5
		SpotlightInnerAngle = 80
		SpotlightOuterAngle = 91.429
	}
	.component NeoAxis.MeshInSpace
	{
		Name = Ground
		CanBeSelected = False
		Transform = "0 0 0; 0 0 0 1; 1 1 1"
		Mesh
		{
			GetByReference = "this:$Mesh"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.Mesh
		{
			Name = Mesh
			.component NeoAxis.MeshGeometry_Plane
			{
				Name = Mesh Geometry
				Dimensions = 100 100
				UVTilesPerUnit = 0.25 0.25
			}
		}
		.component NeoAxis.RigidBody
		{
			Name = Collision Body
			Transform
			{
				GetByReference = "this:..\\Transform"
			}
			.component NeoAxis.CollisionShape_Mesh
			{
				Mesh
				{
					GetByReference = "this:..\\..\\Mesh"
				}
				Vertices
				{
				}
				Indices
				{
				}
			}
		}
	}
	.component NeoAxis.MeshInSpace
	{
		Name = Sphere
		Transform = "0 0 0.5; 0 0 0 1; 1 1 1"
		Mesh
		{
			GetByReference = "this:$Mesh"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.Mesh
		{
			Name = Mesh
			.component NeoAxis.MeshGeometry_Sphere
			{
				Name = Mesh Geometry
			}
		}
	}
	.component NeoAxis.MeshInSpace
	{
		Name = Box
		Transform = "4.70197196338417 5.77635926158248 0.500000000000008; 0 0 0 1; 1 1 1"
		Mesh
		{
			GetByReference = "this:$Mesh"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.Mesh
		{
			Name = Mesh
			.component NeoAxis.MeshGeometry_Box
			{
				Name = Mesh Geometry
			}
		}
	}
	.component NeoAxis.MeshInSpace
	{
		Name = Cylinder
		Transform = "5.83784400973029 1.75981764467444 0.499999999999976; 0 0 0 1; 1 1 1"
		Mesh
		{
			GetByReference = "this:$Mesh"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.Mesh
		{
			Name = Mesh
			.component NeoAxis.MeshGeometry_Cylinder
			{
				Name = Mesh Geometry
			}
		}
	}
}
