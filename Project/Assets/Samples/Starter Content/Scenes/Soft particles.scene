// Made with NeoAxis Engine 2024.1.

.component NeoAxis.Scene
{
	EditorDocumentConfiguration = "\xfeff<?xml version=\"1.0\" encoding=\"utf-16\"?><KD V=\"1\"><DGD /><DM N=\"DockingManager\" C=\"2\"><DW N=\"DockingWorkspace\" O=\"0\" S=\"1144, 842\"><KW V=\"1\" A=\"09B9F737C77747D4689DBDEEE90DE55A\"><CGD /><WS UN=\"4A87E34386084E14BC81ED10FBED4D99\" S=\"T,0,50:T,0,50\" D=\"Horizontal\"><WC UN=\"84992BA1B8484F28D6A0ECCE328F25E1\" S=\"T,0,50:T,0,50\" NM=\"BarTabGroup\" AR=\"True\" SP=\"09B9F737C77747D4689DBDEEE90DE55A\"><KP UN=\"09B9F737C77747D4689DBDEEE90DE55A\" S=\"False\"><CPD ObjPath=\"\" /></KP><KP UN=\"17BCD176A3E347186FB1CBC2A6E31C4E\" S=\"False\"><CPD ObjPath=\"$Material soft particles\\$Shader graph\" /></KP><KP UN=\"E8C911C92D044AFD0E91AD73FA5CE7AC\" S=\"False\"><CPD ObjPath=\"$Material no soft particles\\$Shader graph\" /></KP></WC></WS></KW></DW><DF N=\"DockingFloating\" C=\"0\"></DF></DM></KD>"
	RenderingPipeline
	{
		GetByReference = "root:$Rendering Pipeline"
	}
	CameraEditor
	{
		GetByReference = "this:$Camera Editor"
	}
	CameraEditor2D
	{
		GetByReference = "this:$Camera Editor 2D"
	}
	.component NeoAxis.Camera
	{
		Name = Camera Editor
		Visible = False
		Transform = "2.58620333549504 -4.52892392874804 1.02040394718276; 0.0161018116876601 -0.0161257177396904 0.706398571832139 0.707447348289093; 1 1 1"
	}
	.component NeoAxis.Camera
	{
		Name = Camera Editor 2D
		Visible = False
		Transform = "2.64918580053222 3.02745193504869 10; -0.502493739596367 0.497493760429674 0.497493760429674 0.502493739596367; 1 1 1"
		Projection = Orthographic
		Height = 16.8586419336498
		FixedUp = 0 1 0
		FarClipPlane = 100
	}
	.component NeoAxis.Light
	{
		Name = Ambient Light
		Transform = "18.5822734231225 -5.39737456891382 0.8606866051066; 0.177025544047126 0 0 0.98420625722194; 1 1 1"
		Type = Ambient
		Brightness = 60000
	}
	.component NeoAxis.Light
	{
		Name = Directional Light
		Transform = "23.4737008768449 -15.0814890020227 22.8055842838911; -0.48553441582008 -0.67324283509012 0.472744885192886 -0.295825437679109; 1 1 1"
		Type = Directional
		Brightness = 150000
		AttenuationFar = 100
		AttenuationPower = 1.5
		SpotlightInnerAngle = 80
		SpotlightOuterAngle = 91.429
	}
	.component NeoAxis.RenderingPipeline_Basic
	{
		Name = Rendering Pipeline
		Shadows = False
		.component NeoAxis.Component
		{
			Name = Background Effects
		}
		.component NeoAxis.Component
		{
			Name = Scene Effects
			.component NeoAxis.RenderingEffect_AmbientOcclusion
			{
				Name = Ambient Occlusion
			}
			.component NeoAxis.RenderingEffect_Bloom
			{
				Enabled = False
				Name = Bloom
			}
			.component NeoAxis.RenderingEffect_LensEffects
			{
				Name = Lens Effects
			}
			.component NeoAxis.RenderingEffect_ToneMapping
			{
				Name = Tone Mapping
				Intensity = 0.5
			}
			.component NeoAxis.RenderingEffect_ToLDR
			{
				Name = To LDR
			}
			.component NeoAxis.RenderingEffect_Antialiasing
			{
				Name = Antialiasing
			}
			.component NeoAxis.RenderingEffect_ResolutionUpscale
			{
				Name = Resolution Upscale
			}
			.component NeoAxis.RenderingEffect_Sharpen
			{
				Name = Sharpen
			}
			.component NeoAxis.RenderingEffect_MotionBlur
			{
				Name = Motion Blur
			}
		}
		.component NeoAxis.Component
		{
			Name = Final Image Effects
		}
	}
	.component NeoAxis.GameMode
	{
		Name = Game Mode
		CutsceneStarted = False
		CutsceneGuiFadingFactor = 0
		CutsceneGuiFadingSpeed = 0
		ScreenFadingCurrentColor = 0 0 0 0
		ScreenFadingTargetColor = 0 0 0 0
		ScreenFadingSpeed = 0
	}
	.component NeoAxis.MeshInSpace
	{
		Name = Ground
		CanBeSelected = False
		Transform = "0 0 0; 0 0 0 1; 1 1 1"
		Mesh
		{
			GetByReference = "this:$Mesh"
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.Mesh
		{
			Name = Mesh
			.component NeoAxis.MeshGeometry_Plane
			{
				Name = Mesh Geometry
				Dimensions = 100 100
				UVTilesPerUnit = 0.25 0.25
			}
		}
		.component NeoAxis.RigidBody
		{
			Name = Collision Body
			Transform
			{
				GetByReference = "this:..\\Transform"
			}
			.component NeoAxis.CollisionShape_Mesh
			{
				Mesh
				{
					GetByReference = "this:..\\..\\Mesh"
				}
				Vertices
				{
				}
				Indices
				{
				}
			}
		}
	}
	.component NeoAxis.MeshInSpace
	{
		Name = Box
		Transform = "-2.1470042689859 3.22413096119813 1.59364299835124; 0 0 0 1; 3.44999994523823 8.33364586110376 3.44999994523823"
		Mesh
		{
			GetByReference = "this:$Mesh"
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.Mesh
		{
			Name = Mesh
			.component NeoAxis.MeshGeometry_Box
			{
				Name = Mesh Geometry
			}
		}
	}
	.component NeoAxis.MeshInSpace
	{
		Name = Box 2
		Transform = "7.11839244316322 3.22413096119813 1.59364299835124; 0 0 0 1; 3.44999994523823 8.33364586110376 3.44999994523823"
		Mesh
		{
			GetByReference = "this:$Mesh"
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.Mesh
		{
			Name = Mesh
			.component NeoAxis.MeshGeometry_Box
			{
				Name = Mesh Geometry
			}
		}
	}
	.component NeoAxis.GroupOfObjects
	{
		Name = Group Of Objects
		BaseObjects
		{
			Count = 1
			0 "NeoAxis.Reference<NeoAxis.Component>"
			{
				GetByReference = "root:$Ground"
			}
		}
	}
	.component NeoAxis.Material
	{
		Name = Material soft particles
		BlendMode = Transparent
		SoftParticles = True
		SoftParticlesDistance = 2
		BaseColor
		{
			GetByReference = "this:$Shader graph\\$Node Texture Sample 1\\$Texture Sample\\RGBA"
		}
		Emissive
		{
			GetByReference = "this:$Shader graph\\$Node Invoke Member 1\\$Invoke Member\\__parameter_ReturnValue"
		}
		Opacity
		{
			GetByReference = "this:$Shader graph\\$Node Texture Sample 1\\$Texture Sample\\A"
		}
		.component NeoAxis.FlowGraph
		{
			Name = Shader graph
			EditorScrollPosition = 0 0
			Specialization
			{
				GetByReference = NeoAxis.FlowGraphSpecialization_Shader|Instance
			}
			.component NeoAxis.FlowGraphNode
			{
				Name = "Node "
				Position = 10 -7
				ControlledObject
				{
					GetByReference = "this:..\\.."
				}
			}
			.component NeoAxis.FlowGraphNode
			{
				Name = Node Texture Sample 1
				Position = -20 -7
				ControlledObject
				{
					GetByReference = "this:$Texture Sample"
				}
				.component NeoAxis.ShaderTextureSample
				{
					Name = Texture Sample
					Location2 = 0 0
					Location3 = 0 0 0
					Texture
					{
						GetByReference = "Base\\Images\\Star.png"
					}
				}
			}
			.component NeoAxis.FlowGraphNode
			{
				Name = Node Invoke Member 1
				Position = -5 3
				ControlledObject
				{
					GetByReference = "this:$Invoke Member"
				}
				.component NeoAxis.InvokeMember
				{
					Name = Invoke Member
					__parameter_S = 0.5
					Member
					{
						GetByReference = "NeoAxis.ColorValue|method:op_Multiply(NeoAxis.ColorValue,System.Single)"
					}
					Exit
					{
					}
					__parameter_V
					{
						GetByReference = "this:..\\..\\$Node Texture Sample 1\\$Texture Sample\\RGBA"
					}
				}
			}
		}
	}
	.component NeoAxis.Material
	{
		Name = Material no soft particles
		BlendMode = Transparent
		BaseColor
		{
			GetByReference = "this:$Shader graph\\$Node Texture Sample 1\\$Texture Sample\\RGBA"
		}
		Emissive
		{
			GetByReference = "this:$Shader graph\\$Node Invoke Member 1\\$Invoke Member\\__parameter_ReturnValue"
		}
		Opacity
		{
			GetByReference = "this:$Shader graph\\$Node Texture Sample 1\\$Texture Sample\\A"
		}
		.component NeoAxis.FlowGraph
		{
			Name = Shader graph
			EditorScrollPosition = 0 0
			Specialization
			{
				GetByReference = NeoAxis.FlowGraphSpecialization_Shader|Instance
			}
			.component NeoAxis.FlowGraphNode
			{
				Name = "Node "
				Position = 10 -7
				ControlledObject
				{
					GetByReference = "this:..\\.."
				}
			}
			.component NeoAxis.FlowGraphNode
			{
				Name = Node Texture Sample 1
				Position = -20 -7
				ControlledObject
				{
					GetByReference = "this:$Texture Sample"
				}
				.component NeoAxis.ShaderTextureSample
				{
					Name = Texture Sample
					Location2 = 0 0
					Location3 = 0 0 0
					Texture
					{
						GetByReference = "Base\\Images\\Star.png"
					}
				}
			}
			.component NeoAxis.FlowGraphNode
			{
				Name = Node Invoke Member 1
				Position = -5 3
				ControlledObject
				{
					GetByReference = "this:$Invoke Member"
				}
				.component NeoAxis.InvokeMember
				{
					Name = Invoke Member
					__parameter_S = 0.5
					Member
					{
						GetByReference = "NeoAxis.ColorValue|method:op_Multiply(NeoAxis.ColorValue,System.Single)"
					}
					Exit
					{
					}
					__parameter_V
					{
						GetByReference = "this:..\\..\\$Node Texture Sample 1\\$Texture Sample\\RGBA"
					}
				}
			}
		}
	}
	.component NeoAxis.Billboard
	{
		Name = Billboard 2
		Transform = "0.74576849064116 0.367392088104037 0.89260071931389; 0 0 0 1; 3 3 3"
		CastShadows = False
		Material
		{
			GetByReference = "root:$Material soft particles"
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
	}
	.component NeoAxis.Billboard
	{
		Name = Billboard 3
		Transform = "4.29393137290981 0.367392088104037 0.88683356419027; 0 0 0 1; 3 3 3"
		CastShadows = False
		Material
		{
			GetByReference = "root:$Material no soft particles"
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
	}
}
