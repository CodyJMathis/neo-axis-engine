// Made with NeoAxis Engine 2023.1.

.component NeoAxis.Scene
{
	EditorDocumentConfiguration = "\xfeff<?xml version=\"1.0\" encoding=\"utf-16\"?><KD V=\"1\"><DGD /><DM N=\"DockingManager\" C=\"2\"><DW N=\"DockingWorkspace\" O=\"0\" S=\"1145, 842\"><KW V=\"1\" A=\"3244B697912B4A67A3AFD2E8C65ACA4B\"><CGD /><WS UN=\"4A87E34386084E14BC81ED10FBED4D99\" S=\"T,0,50:T,0,50\" D=\"Horizontal\"><WC UN=\"71B9C3F8BDE14F61EE9848B66281689B\" S=\"T,0,50:T,0,50\" NM=\"BarTabGroup\" AR=\"True\" SP=\"3244B697912B4A67A3AFD2E8C65ACA4B\"><KP UN=\"3244B697912B4A67A3AFD2E8C65ACA4B\" S=\"False\"><CPD ObjPath=\"\" /></KP><KP UN=\"351B6169041A419B389DB6474863B7D6\" S=\"False\"><CPD ObjPath=\"$Button\\$Flow Graph\" /></KP></WC></WS></KW></DW><DF N=\"DockingFloating\" C=\"0\"></DF></DM></KD>"
	RenderingPipeline
	{
		GetByReference = "root:$Rendering Pipeline"
	}
	CameraEditor
	{
		GetByReference = "this:$Camera Editor"
	}
	CameraEditor2D
	{
		GetByReference = "this:$Camera Editor 2D"
	}
	.component NeoAxis.Camera
	{
		Name = Camera Editor
		Visible = False
		Transform = "0.512119375051599 -3.49742687553448 5.61511849769467; -0.221179647032406 0.277512636691757 0.582701810505131 0.731112098278405; 1 1 1"
	}
	.component NeoAxis.Camera
	{
		Name = Camera Editor 2D
		Visible = False
		Transform = "2.64918580053222 3.02745193504869 10; -0.502493739596367 0.497493760429674 0.497493760429674 0.502493739596367; 1 1 1"
		Projection = Orthographic
		Height = 16.8586419336498
		FixedUp = 0 1 0
		FarClipPlane = 100
	}
	.component NeoAxis.Light
	{
		Name = Ambient Light
		Transform = "18.5822734231225 -5.39737456891382 0.8606866051066; 0.177025544047126 0 0 0.98420625722194; 1 1 1"
		Type = Ambient
		Brightness = 50000
	}
	.component NeoAxis.Light
	{
		Name = Directional Light
		Transform = "23.4737008768449 -15.0814890020227 22.8055842838911; -0.48553441582008 -0.67324283509012 0.472744885192886 -0.295825437679109; 1 1 1"
		Type = Directional
		AttenuationFar = 100
		AttenuationPower = 1.5
		SpotlightInnerAngle = 80
		SpotlightOuterAngle = 91.429
	}
	.component NeoAxis.RenderingPipeline_Basic
	{
		Name = Rendering Pipeline
		ShadowFarDistance = 30
		ShadowIntensity = 0.5
		.component NeoAxis.Component
		{
			Name = Background Effects
		}
		.component NeoAxis.Component
		{
			Name = Scene Effects
			.component NeoAxis.RenderingEffect_AmbientOcclusion
			{
				Name = Ambient Occlusion
			}
			.component NeoAxis.RenderingEffect_Bloom
			{
				Enabled = False
				Name = Bloom
			}
			.component NeoAxis.RenderingEffect_LensEffects
			{
				Name = Lens Effects
			}
			.component NeoAxis.RenderingEffect_ToneMapping
			{
				Name = Tone Mapping
				Intensity = 0.5
			}
			.component NeoAxis.RenderingEffect_ToLDR
			{
				Name = To LDR
			}
			.component NeoAxis.RenderingEffect_Antialiasing
			{
				Name = Antialiasing
			}
			.component NeoAxis.RenderingEffect_ResolutionUpscale
			{
				Name = Resolution Upscale
			}
			.component NeoAxis.RenderingEffect_Sharpen
			{
				Name = Sharpen
			}
			.component NeoAxis.RenderingEffect_MotionBlur
			{
				Name = Motion Blur
			}
		}
		.component NeoAxis.Component
		{
			Name = Final Image Effects
		}
	}
	.component NeoAxis.GameMode
	{
		Name = Game Mode
		UseBuiltInCamera = ThirdPerson
		ThirdPersonCameraHorizontalAngle = 89.99999803884887
		CutsceneStarted = False
		CutsceneGuiFadingFactor = 0
		CutsceneGuiFadingSpeed = 0
		ScreenFadingCurrentColor = 0 0 0 0
		ScreenFadingTargetColor = 0 0 0 0
		ScreenFadingSpeed = 0
		ObjectControlledByPlayer
		{
			GetByReference = "this:..\\$Character"
		}
	}
	.component NeoAxis.MeshInSpace
	{
		Name = Ground
		CanBeSelected = False
		Transform = "0 0 0; 0 0 0 1; 1 1 1"
		Mesh
		{
			GetByReference = "this:$Mesh"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.Mesh
		{
			Name = Mesh
			.component NeoAxis.MeshGeometry_Plane
			{
				Name = Mesh Geometry
				Dimensions = 100 100
				UVTilesPerUnit = 0.25 0.25
			}
		}
		.component NeoAxis.RigidBody
		{
			Name = Collision Body
			Transform
			{
				GetByReference = "this:..\\Transform"
			}
			.component NeoAxis.CollisionShape_Mesh
			{
				Mesh
				{
					GetByReference = "this:..\\..\\Mesh"
				}
				Vertices
				{
				}
				Indices
				{
				}
			}
		}
	}
	.component NeoAxis.MeshInSpace
	{
		Name = Box
		Transform
		{
			GetByReference = "this:$Collision Body\\Transform"
		}
		Mesh
		{
			GetByReference = "this:$Mesh"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.Mesh
		{
			Name = Mesh
			.component NeoAxis.MeshGeometry_Box
			{
				Name = Mesh Geometry
			}
		}
		.component NeoAxis.RigidBody
		{
			Name = Collision Body
			Transform = "4.25059557334482 6.3313291759922 0.500000000000008; 0 0 0 1; 1 1 1"
			MotionType = Dynamic
			.component NeoAxis.CollisionShape_Box
			{
			}
		}
	}
	.component NeoAxis.MeshInSpace
	{
		Name = Cylinder
		Transform
		{
			GetByReference = "this:$Collision Body\\Transform"
		}
		Mesh
		{
			GetByReference = "this:$Mesh"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.Mesh
		{
			Name = Mesh
			.component NeoAxis.MeshGeometry_Cylinder
			{
				Name = Mesh Geometry
			}
		}
		.component NeoAxis.RigidBody
		{
			Name = Collision Body
			Transform = "7.30225997937545 3.05590018493863 0.494849522064233; 0.00000370818543161 0.00000148991193782 0.0000029507536965 1; 1 1 1"
			MotionType = Dynamic
			.component NeoAxis.CollisionShape_Cylinder
			{
			}
		}
	}
	.component NeoAxis.GroupOfObjects
	{
		Name = Group Of Objects
		BaseObjects
		{
			Count = 1
			0 "NeoAxis.Reference<NeoAxis.Component>"
			{
				GetByReference = "root:$Ground"
			}
		}
	}
	.component NeoAxis.MeshInSpace
	{
		Name = Box 2
		CanBeSelected = False
		Transform
		{
			GetByReference = "this:$Collision Body\\Transform"
		}
		Mesh
		{
			GetByReference = "this:$Mesh"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.Mesh
		{
			Name = Mesh
			.component NeoAxis.MeshGeometry_Box
			{
				Name = Mesh Geometry
			}
		}
		.component NeoAxis.RigidBody
		{
			Name = Collision Body
			Transform = "-1.24451692055514 4.85612266989406 1.00549997886235; 0 0 0.283193019671898 0.959062935165942; 2 1 2"
			.component NeoAxis.CollisionShape_Box
			{
			}
		}
	}
	.component NeoAxis.Button
	{
		Name = Button
		Transform = "-1.0009537689691 4.38739450818632 1.32489341333328; 0 0 -0.478282120422081 0.878206247577731; 1 1 1"
		Mesh
		{
			GetByReference = "Content\\Buttons\\Default\\Base.mesh"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.FlowGraph
		{
			Name = Flow Graph
			EditorScrollPosition = 8.52941176470588 5.64705882352941
			.component NeoAxis.FlowGraphNode
			{
				Name = Flow Graph Node
				Position = -20 -10
				ControlledObject
				{
					GetByReference = "this:$Event Handler Click"
				}
				.component NeoAxis.EventHandlerComponent
				{
					Name = Event Handler Click
					Event
					{
						GetByReference = "this:..\\..\\..\\event:Click"
					}
					HandlerFlow
					{
						GetByReference = "this:..\\..\\$Node Invoke Member 1\\$Invoke Member\\Entry"
					}
				}
			}
			.component NeoAxis.FlowGraphNode
			{
				Name = Node Invoke Member 1
				Position = -5 -10
				Comment = Start cutscene
				ControlledObject
				{
					GetByReference = "this:$Invoke Member"
				}
				.component NeoAxis.InvokeMember
				{
					Name = Invoke Member
					FlowSupport = True
					__parameter_GuiFadingSpeed = 1
					Member
					{
						GetByReference = "root:$Game Mode\\method:CutsceneStart(System.Double)"
					}
					Exit
					{
						GetByReference = "this:..\\..\\$Node Invoke Member 3\\$Invoke Member\\Entry"
					}
					__this_This
					{
						GetByReference = "root:$Game Mode"
					}
				}
			}
			.component NeoAxis.FlowGraphNode
			{
				Name = Node Invoke Member 7
				Position = 10 19
				Comment = End cutscene
				ControlledObject
				{
					GetByReference = "this:$Invoke Member"
				}
				.component NeoAxis.InvokeMember
				{
					Name = Invoke Member
					FlowSupport = True
					__parameter_GuiFadingSpeed = 1
					Member
					{
						GetByReference = "root:$Game Mode\\method:CutsceneEnd(System.Double)"
					}
					Exit
					{
					}
					__this_This
					{
						GetByReference = "root:$Game Mode"
					}
				}
			}
			.component NeoAxis.FlowGraphNode
			{
				Name = Node Invoke Member 2
				Position = 10 -1
				Comment = Change camera
				ControlledObject
				{
					GetByReference = "this:$Invoke Member"
				}
				.component NeoAxis.InvokeMember
				{
					Name = Invoke Member
					FlowSupport = True
					Member
					{
						GetByReference = "root:$Game Mode\\property:ReplaceCamera"
					}
					Exit
					{
						GetByReference = "this:..\\..\\$Node Invoke Member 6\\$Invoke Member\\Entry"
					}
					__this_This
					{
						GetByReference = "root:$Game Mode"
					}
					__value_Value
					{
						GetByReference = "root:$Camera 2"
					}
				}
			}
			.component NeoAxis.FlowGraphNode
			{
				Name = Node Invoke Member 4
				Position = 25 9
				Comment = Reset camera
				ControlledObject
				{
					GetByReference = "this:$Invoke Member"
				}
				.component NeoAxis.InvokeMember
				{
					Name = Invoke Member
					FlowSupport = True
					Member
					{
						GetByReference = "root:$Game Mode\\property:ReplaceCamera"
					}
					Exit
					{
						GetByReference = "this:..\\..\\$Node Sleep 5\\$Sleep\\Entry"
					}
					__this_This
					{
						GetByReference = "root:$Game Mode"
					}
				}
			}
			.component NeoAxis.FlowGraphNode
			{
				Name = Node Invoke Member 5
				Position = -20 -1
				Comment = Fading
				ControlledObject
				{
					GetByReference = "this:$Invoke Member"
				}
				.component NeoAxis.InvokeMember
				{
					Name = Invoke Member
					FlowSupport = True
					__parameter_Color = 0 0 0
					__parameter_Speed = 1
					Member
					{
						GetByReference = "root:$Game Mode\\method:DoScreenFading(NeoAxis.ColorValue,System.Double)"
					}
					Exit
					{
						GetByReference = "this:..\\..\\$Node Sleep 2\\$Sleep\\Entry"
					}
					__this_This
					{
						GetByReference = "root:$Game Mode"
					}
				}
			}
			.component NeoAxis.FlowGraphNode
			{
				Name = Node Invoke Member 8
				Position = -5 9
				Comment = Fading
				ControlledObject
				{
					GetByReference = "this:$Invoke Member"
				}
				.component NeoAxis.InvokeMember
				{
					Name = Invoke Member
					FlowSupport = True
					__parameter_Color = 0 0 0
					__parameter_Speed = 1
					Member
					{
						GetByReference = "root:$Game Mode\\method:DoScreenFading(NeoAxis.ColorValue,System.Double)"
					}
					Exit
					{
						GetByReference = "this:..\\..\\$Node Sleep 4\\$Sleep\\Entry"
					}
					__this_This
					{
						GetByReference = "root:$Game Mode"
					}
				}
			}
			.component NeoAxis.FlowGraphNode
			{
				Name = Node Invoke Member 9
				Position = -5 19
				Comment = Fading
				ControlledObject
				{
					GetByReference = "this:$Invoke Member"
				}
				.component NeoAxis.InvokeMember
				{
					Name = Invoke Member
					FlowSupport = True
					__parameter_Color = 0 0 0 0
					__parameter_Speed = 1
					Member
					{
						GetByReference = "root:$Game Mode\\method:DoScreenFading(NeoAxis.ColorValue,System.Double)"
					}
					Exit
					{
						GetByReference = "this:..\\..\\$Node Invoke Member 7\\$Invoke Member\\Entry"
					}
					__this_This
					{
						GetByReference = "root:$Game Mode"
					}
				}
			}
			.component NeoAxis.FlowGraphNode
			{
				Name = Node Invoke Member 6
				Position = 25 -1
				Comment = Fading
				ControlledObject
				{
					GetByReference = "this:$Invoke Member"
				}
				.component NeoAxis.InvokeMember
				{
					Name = Invoke Member
					FlowSupport = True
					__parameter_Color = 0 0 0 0
					__parameter_Speed = 1
					Member
					{
						GetByReference = "root:$Game Mode\\method:DoScreenFading(NeoAxis.ColorValue,System.Double)"
					}
					Exit
					{
						GetByReference = "this:..\\..\\$Node Sleep 3\\$Sleep\\Entry"
					}
					__this_This
					{
						GetByReference = "root:$Game Mode"
					}
				}
			}
			.component NeoAxis.FlowGraphNode
			{
				Name = Node Invoke Member 3
				Position = 10 -10
				Comment = Set text
				ControlledObject
				{
					GetByReference = "this:$Invoke Member"
				}
				.component NeoAxis.InvokeMember
				{
					Name = Invoke Member
					FlowSupport = True
					__value_Value = Cutscene launched
					Member
					{
						GetByReference = "root:$Game Mode\\property:CutsceneText"
					}
					Exit
					{
						GetByReference = "this:..\\..\\$Node Sleep 1\\$Sleep\\Entry"
					}
					__this_This
					{
						GetByReference = "root:$Game Mode"
					}
				}
			}
			.component NeoAxis.FlowGraphNode
			{
				Name = Node Sleep 1
				Position = 25 -10
				ControlledObject
				{
					GetByReference = "this:$Sleep"
				}
				.component NeoAxis.FlowSleep
				{
					Name = Sleep
					Seconds = 4
					Exit
					{
						GetByReference = "this:..\\..\\$Node Invoke Member 5\\$Invoke Member\\Entry"
					}
				}
			}
			.component NeoAxis.FlowGraphNode
			{
				Name = Node Sleep 2
				Position = -5 -1
				ControlledObject
				{
					GetByReference = "this:$Sleep"
				}
				.component NeoAxis.FlowSleep
				{
					Name = Sleep
					Exit
					{
						GetByReference = "this:..\\..\\$Node Invoke Member 2\\$Invoke Member\\Entry"
					}
				}
			}
			.component NeoAxis.FlowGraphNode
			{
				Name = Node Sleep 4
				Position = 10 9
				ControlledObject
				{
					GetByReference = "this:$Sleep"
				}
				.component NeoAxis.FlowSleep
				{
					Name = Sleep
					Exit
					{
						GetByReference = "this:..\\..\\$Node Invoke Member 4\\$Invoke Member\\Entry"
					}
				}
			}
			.component NeoAxis.FlowGraphNode
			{
				Name = Node Sleep 5
				Position = -20 19
				ControlledObject
				{
					GetByReference = "this:$Sleep"
				}
				.component NeoAxis.FlowSleep
				{
					Name = Sleep
					Exit
					{
						GetByReference = "this:..\\..\\$Node Invoke Member 9\\$Invoke Member\\Entry"
					}
				}
			}
			.component NeoAxis.FlowGraphNode
			{
				Name = Node Sleep 3
				Position = -20 9
				ControlledObject
				{
					GetByReference = "this:$Sleep"
				}
				.component NeoAxis.FlowSleep
				{
					Name = Sleep
					Seconds = 5
					Exit
					{
						GetByReference = "this:..\\..\\$Node Invoke Member 8\\$Invoke Member\\Entry"
					}
				}
			}
		}
	}
	.component NeoAxis.Camera
	{
		Name = Camera 2
		Transform = "2.00746789620617 0.310427908432751 1.77694084970682; 0 0 0.392462384670882 0.919768055880636; 1 1 1"
	}
	.component NeoAxis.ParticleSystemInSpace
	{
		Name = Particle System In Space
		Transform = "6.29936463309798 4.8532580891663 0.0032797823766435; 0 0 0 1; 1 1 1"
		ParticleSystem
		{
			GetByReference = "this:$Particle System"
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.ParticleSystem
		{
			Name = Particle System
			.component NeoAxis.ParticleEmitter
			{
				Name = Emitter
				StartTime
				{
					Value
					{
						Constant = 0
						Range = 0 1
						Curve
						{
							Count = 0
						}
					}
				}
				Duration
				{
					Value
					{
						Constant = 3
						Range = 0 1
						Curve
						{
							Count = 0
						}
					}
				}
				SpawnRate
				{
					Value
					{
						Constant = 10
						Range = 0 1
						Curve
						{
							Count = 0
						}
					}
				}
				SpawnCount
				{
					Value
					{
						Constant = 1
						Range = 1 1
						Curve
						{
							Count = 0
						}
					}
				}
				DispersionAngle
				{
					Value
					{
						Constant = 10
						Range = 0 1
						Curve
						{
							Count = 0
						}
					}
				}
				Speed
				{
					Value
					{
						Constant = 1
						Range = 0 1
						Curve
						{
							Count = 0
						}
					}
				}
				Rotation
				{
					Value
					{
						Constant = 0 0 0
						Range = 0 0 0 0 0 0
						CurveX
						{
							Count = 0
						}
						CurveY
						{
							Count = 0
						}
						CurveZ
						{
							Count = 0
						}
					}
				}
				AngularVelocity
				{
					Value
					{
						Constant = 0 0 0
						Range = 0 0 0 0 0 0
						CurveX
						{
							Count = 0
						}
						CurveY
						{
							Count = 0
						}
						CurveZ
						{
							Count = 0
						}
					}
				}
				Lifetime
				{
					Value
					{
						Constant = 3
						Range = 0 1
						Curve
						{
							Count = 0
						}
					}
				}
				Size
				{
					Value
					{
						Constant = 1
						Range = 0 1
						Curve
						{
							Count = 0
						}
					}
				}
				GravityMultiplier
				{
					Value
					{
						Constant = 0
						Range = 0 1
						Curve
						{
							Count = 0
						}
					}
				}
				Material
				{
					GetByReference = "Base\\Components\\Particle system default.material"
				}
				Color
				{
					Value
					{
						Constant = 1 1 1
						Range = 1 1 1 1 1 1 1 1
					}
				}
				.component NeoAxis.ParticleEmitterShape_Point
				{
					Name = Point Shape
					Transform = "0 0 0; 0 -0.707106781186548 0 0.707106781186548; 1 1 1"
				}
				.component NeoAxis.ParticleColorMultiplierByTime
				{
					Name = Color Multiplier By Time
					Channels = Alpha
					Type = Curve
					Curve
					{
						Count = 4
						0
						{
							Value
							{
								Point = 0
								Value = 0
							}
						}
						1
						{
							Value
							{
								Point = 1
								Value = 1
							}
						}
						2
						{
							Value
							{
								Point = 2
								Value = 1
							}
						}
						3
						{
							Value
							{
								Point = 3
								Value = 0
							}
						}
					}
				}
			}
		}
	}
	.component NeoAxis.Character
	{
		Name = Character
		Transform = "-0.381045892163406 -0.262341141474449 0.00000029909694621; 0 0 0.70710676908493 0.70710676908493; 1 1 1"
		Collision = True
		Mesh
		{
			GetByReference = "Content\\Characters\\Default\\Human.fbx|$Mesh"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.MeshInSpaceAnimationController
		{
			Name = Animation Controller
		}
		.component NeoAxis.CharacterInputProcessing
		{
			Name = Character Input Processing
		}
	}
}
