// Made with NeoAxis Engine 2023.1.

.component NeoAxis.Scene
{
	EditorDocumentConfiguration = "\xfeff<?xml version=\"1.0\" encoding=\"utf-16\"?><KD V=\"1\"><DGD /><DM N=\"DockingManager\" C=\"2\"><DW N=\"DockingWorkspace\" O=\"0\" S=\"1149, 842\"><KW V=\"1\" A=\"9548DCD6D149499BE584418DFC2068A8\"><CGD /><WS UN=\"4A87E34386084E14BC81ED10FBED4D99\" S=\"T,0,50:T,0,50\" D=\"Horizontal\"><WC UN=\"7957DABB94FF4DB255877C2A7B895295\" S=\"T,0,50:T,0,50\" NM=\"BarTabGroup\" AR=\"True\" SP=\"9548DCD6D149499BE584418DFC2068A8\"><KP UN=\"9548DCD6D149499BE584418DFC2068A8\" S=\"False\"><CPD ObjPath=\"\" /></KP><KP UN=\"25B96ED2DE084CC80781AA9F00E91F93\" S=\"False\"><CPD ObjPath=\"$Opacity Change\" /></KP><KP UN=\"02E5CBADE9584119259C83EBD3C481F4\" S=\"False\"><CPD ObjPath=\"$Opacity Change\\$Shader graph\" /></KP></WC></WS></KW></DW><DF N=\"DockingFloating\" C=\"0\"></DF></DM></KD>"
	RenderingPipeline
	{
		GetByReference = "root:$Rendering Pipeline"
	}
	CameraEditor
	{
		GetByReference = "this:$Camera Editor"
	}
	.component NeoAxis.Camera
	{
		Name = Camera Editor
		Visible = False
		Transform = "8.84136643574147 -4.92590783122188 12.0189638730694; -0.264136915493435 0.0951333981514414 0.902998655868979 0.325230309055893; 1 1 1"
	}
	.component NeoAxis.Light
	{
		Name = Ambient Light
		Transform = "18.5822734231225 -5.39737456891382 0.8606866051066; 0.177025544047126 0 0 0.98420625722194; 1 1 1"
		Type = Ambient
		Brightness = 40000
	}
	.component NeoAxis.Light
	{
		Enabled = False
		Name = Light 1
		Transform = "23.4737008768449 -15.0814890020227 22.8055842838911; -0.48553441582008 -0.67324283509012 0.472744885192886 -0.295825437679109; 1 1 1"
		Type = Directional
		Brightness = 130000
		AttenuationFar = 100
		AttenuationPower = 1.5
		SpotlightInnerAngle = 80
		SpotlightOuterAngle = 91.429
	}
	.component NeoAxis.RenderingPipeline_Basic
	{
		Name = Rendering Pipeline
		DeferredShading = False
		ShadowDirectionalDistance = 40
		ShadowDirectionalLightTextureSize = _512
		ShadowDirectionalLightCascades = 1
		ShadowPointSpotlightDistance = 40
		ShadowPointLightTextureSize = _256
		ShadowSpotlightTextureSize = _512
		ShadowStatic = False
		.component NeoAxis.Component
		{
			Name = Background Effects
		}
		.component NeoAxis.Component
		{
			Name = Scene Effects
			.component NeoAxis.RenderingEffect_AmbientOcclusion
			{
				Name = Ambient Occlusion
			}
			.component NeoAxis.RenderingEffect_Bloom
			{
				Enabled = False
				Name = Bloom
			}
			.component NeoAxis.RenderingEffect_ToneMapping
			{
				Enabled = False
				Name = Tone Mapping
				Intensity = 0.5
			}
			.component NeoAxis.RenderingEffect_ToLDR
			{
				Name = To LDR
			}
			.component NeoAxis.RenderingEffect_Antialiasing
			{
				Name = Antialiasing
			}
			.component NeoAxis.RenderingEffect_ResolutionUpscale
			{
				Name = Resolution Upscale
			}
			.component NeoAxis.RenderingEffect_Sharpen
			{
				Name = Sharpen
			}
		}
		.component NeoAxis.Component
		{
			Name = Final Image Effects
		}
	}
	.component NeoAxis.GameMode
	{
		Name = Game Mode
		CutsceneStarted = False
		CutsceneGuiFadingFactor = 0
		CutsceneGuiFadingSpeed = 0
		ScreenFadingCurrentColor = 0 0 0 0
		ScreenFadingTargetColor = 0 0 0 0
		ScreenFadingSpeed = 0
	}
	.component NeoAxis.Light
	{
		Name = Light 2
		Transform = "-13.1743988018492 -33.0476964207837 39.8190565014688; -0.652509760369867 -0.513060032128782 0.536036061986784 -0.153836784625045; 1 1 1"
		Type = Spotlight
		Brightness = 300000
		AttenuationFar = 505.521
		AttenuationPower = 1.5
		SpotlightInnerAngle = 88.421
		SpotlightOuterAngle = 88.421
	}
	.component NeoAxis.MeshInSpace
	{
		Name = Ground
		CanBeSelected = False
		Transform = "0 0 0; 0 0 0 1; 1 1 1"
		Color = 1 0.5490196 0
		Mesh
		{
			GetByReference = "this:$Mesh"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.Mesh
		{
			Name = Mesh
			.component NeoAxis.MeshGeometry_Plane
			{
				Name = Mesh Geometry
				Dimensions = 70 70
				UVTilesPerUnit = 0.1 0.1
			}
		}
		.component NeoAxis.RigidBody
		{
			Name = Collision Body
			Transform
			{
				GetByReference = "this:..\\Transform"
			}
			.component NeoAxis.CollisionShape_Mesh
			{
				Mesh
				{
					GetByReference = "this:..\\..\\Mesh"
				}
				Vertices
				{
				}
				Indices
				{
				}
			}
		}
	}
	.component NeoAxis.MeshInSpace
	{
		Name = Mesh In Space
		Transform = "0.18648041969305 2.76890046417393 -0.249546182406922; 0 0 -0.184583359329841 0.982816861606734; 1 1 1"
		Mesh
		{
			GetByReference = "Samples\\Starter Content\\Models\\Baby Elephant\\babyElephant_rigged_animated.fbx|$Mesh"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.MeshInSpaceAnimationController
		{
			Name = Mesh In Space Animation Controller
			PlayAnimation
			{
				GetByReference = "Samples\\Starter Content\\Models\\Baby Elephant\\babyElephant_rigged_animated.fbx|$Mesh\\$Animations\\$babyElephantRigged|babyElephant.walk1"
			}
		}
	}
	.component NeoAxis.MeshInSpace
	{
		Name = Mesh In Space 5
		Transform = "2.05519524686544 16.7583791817074 -0.249546182406922; 0 0 -0.184583359329841 0.982816861606734; 1 1 1"
		Color = 0.1218823 0.4487451 1
		Mesh
		{
			GetByReference = "Samples\\Starter Content\\Models\\Baby Elephant\\babyElephant_rigged_animated.fbx|$Mesh"
		}
		ReplaceMaterial
		{
			GetByReference = "this:..\\$Opacity Change"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.MeshInSpaceAnimationController
		{
			Name = Mesh In Space Animation Controller
			PlayAnimation
			{
				GetByReference = "Samples\\Starter Content\\Models\\Baby Elephant\\babyElephant_rigged_animated.fbx|$Mesh\\$Animations\\$babyElephantRigged|babyElephant.walk1"
			}
		}
	}
	.component NeoAxis.MeshInSpace
	{
		Name = Mesh In Space 4
		Transform = "-16.0127107790899 -2.00175002544097 -0.249546182406922; 0 0 0.869094309641648 0.494646420131095; 1 1 1"
		Color = 1 0.9983529 0.02737255
		Mesh
		{
			GetByReference = "Samples\\Starter Content\\Models\\Baby Elephant\\babyElephant_rigged_animated.fbx|$Mesh"
		}
		ReplaceMaterial
		{
			GetByReference = "Base\\Materials\\Null.material"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.MeshInSpaceAnimationController
		{
			Name = Mesh In Space Animation Controller
			DisplaySkeleton = True
			PlayAnimation
			{
				GetByReference = "Samples\\Starter Content\\Models\\Baby Elephant\\babyElephant_rigged_animated.fbx|$Mesh\\$Animations\\$babyElephantRigged|babyElephant.idle1"
			}
		}
	}
	.component NeoAxis.Material
	{
		Name = Opacity Change
		BlendMode = Masked
		Opacity
		{
			GetByReference = "this:$Shader graph\\$Node Texture Sample 6\\$Texture Sample\\R"
		}
		OpacityMaskThreshold
		{
			GetByReference = "this:$Shader graph\\$Node Invoke Member 4\\$Invoke Member\\__parameter_ReturnValue"
		}
		.component NeoAxis.FlowGraph
		{
			Name = Shader graph
			EditorScrollPosition = 21.3921569822141 -1.4934638401868
			EditorZoomIndex = 7
			Specialization
			{
				GetByReference = NeoAxis.FlowGraphSpecialization_Shader|Instance
			}
			.component NeoAxis.FlowGraphNode
			{
				Name = Node SF_Drone_ZR7
				Position = 30 -19
				ControlledObject
				{
					GetByReference = "this:..\\.."
				}
			}
			.component NeoAxis.FlowGraphNode
			{
				Name = Node Invoke Member 2
				Position = 2 1
				ControlledObject
				{
					GetByReference = "this:$Invoke Member"
				}
				.component NeoAxis.InvokeMember
				{
					Name = Invoke Member
					Member
					{
						GetByReference = "NeoAxis.MathEx|method:Sin(System.Double)"
					}
					Exit
					{
					}
					__parameter_V
					{
						GetByReference = "this:..\\..\\$Node Shader Parameter 1\\$Shader Parameter\\Output"
					}
				}
			}
			.component NeoAxis.FlowGraphNode
			{
				Name = Node Invoke Member 3
				Position = 3 5
				ControlledObject
				{
					GetByReference = "this:$Invoke Member"
				}
				.component NeoAxis.InvokeMember
				{
					Name = Invoke Member
					__parameter_V2 = 0.5
					Member
					{
						GetByReference = "NeoAxis.MathEx|method:Multiply(System.Double,System.Double)"
					}
					Exit
					{
					}
					__parameter_V1
					{
						GetByReference = "this:..\\..\\$Node Invoke Member 2\\$Invoke Member\\__parameter_ReturnValue"
					}
				}
			}
			.component NeoAxis.FlowGraphNode
			{
				Name = Node Invoke Member 4
				Position = 5 10
				ControlledObject
				{
					GetByReference = "this:$Invoke Member"
				}
				.component NeoAxis.InvokeMember
				{
					Name = Invoke Member
					__parameter_V2 = 0.5
					Member
					{
						GetByReference = "NeoAxis.MathEx|method:Add(System.Double,System.Double)"
					}
					Exit
					{
					}
					__parameter_V1
					{
						GetByReference = "this:..\\..\\$Node Invoke Member 3\\$Invoke Member\\__parameter_ReturnValue"
					}
				}
			}
			.component NeoAxis.FlowGraphNode
			{
				Name = Node Shader Parameter 1
				Position = 0 -3
				ControlledObject
				{
					GetByReference = "this:$Shader Parameter"
				}
				.component NeoAxis.ShaderParameter
				{
					Name = Shader Parameter
					Source
					{
						GetByReference = NeoAxis.EngineApp|EngineTime
					}
				}
			}
			.component NeoAxis.FlowGraphNode
			{
				Name = Node Texture Sample 6
				Position = 0 -17
				ControlledObject
				{
					GetByReference = "this:$Texture Sample"
				}
				.component NeoAxis.ShaderTextureSample
				{
					Name = Texture Sample
					Location2 = 0 0
					Location3 = 0 0 0
					Texture
					{
						GetByReference = "Samples\\Starter Content\\Textures\\MaterialsSceneOpacitySample.png"
					}
				}
			}
		}
	}
}
