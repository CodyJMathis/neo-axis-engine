// Made with NeoAxis Engine 2024.1.

.component NeoAxis.Scene
{
	EditorDocumentConfiguration = "\xfeff<?xml version=\"1.0\" encoding=\"utf-16\"?><KD V=\"1\"><DGD /><DM N=\"DockingManager\" C=\"2\"><DW N=\"DockingWorkspace\" O=\"0\" S=\"1149, 842\"><KW V=\"1\" A=\"256C67A18D664B0E39BBE68CF4257695\"><CGD /><WS UN=\"4A87E34386084E14BC81ED10FBED4D99\" S=\"T,0,50:T,0,50\" D=\"Horizontal\"><WC UN=\"195C129810504C44FB9460EF63604BF0\" S=\"T,0,50:T,0,50\" NM=\"BarTabGroup\" AR=\"True\" SP=\"256C67A18D664B0E39BBE68CF4257695\"><KP UN=\"256C67A18D664B0E39BBE68CF4257695\" S=\"False\"><CPD ObjPath=\"\" /></KP><KP UN=\"807D4402F5F044BD20A33FBD57F87B60\" S=\"False\"><CPD ObjPath=\"$Button\\$C# Script\" /></KP><KP UN=\"7E31A4CB945041FD8788F1C45EF827C0\" S=\"False\"><CPD ObjPath=\"$Regulator\\$C# Script\" /></KP><KP UN=\"D9CD5B53C89443169D9923C591371B7B\" S=\"False\"><CPD ObjPath=\"$Character NPC\\$Character AI\\$Flow Graph\" /></KP></WC></WS></KW></DW><DF N=\"DockingFloating\" C=\"0\"></DF></DM></KD>"
	BackgroundColor = 0 0 0
	RenderingPipeline
	{
		GetByReference = "root:$Rendering Pipeline"
	}
	CameraEditor
	{
		GetByReference = "this:$Camera Editor"
	}
	CameraEditor2D
	{
		GetByReference = "this:$Camera Editor 2D"
	}
	.component NeoAxis.Camera
	{
		Name = Camera Editor
		Visible = False
		Transform = "5.69597433896158 10.0731034760357 9.10418274135374; -0.429069392018492 -0.161717575626998 0.83157279545469 -0.313422348319132; 1 1 1"
	}
	.component NeoAxis.Camera
	{
		Name = Camera Editor 2D
		Visible = False
		Transform = "2.64918580053222 3.02745193504869 10; -0.502493739596367 0.497493760429674 0.497493760429674 0.502493739596367; 1 1 1"
		Projection = Orthographic
		Height = 16.8586419336498
		FixedUp = 0 1 0
		FarClipPlane = 100
	}
	.component NeoAxis.Light
	{
		Name = Ambient Light
		Transform = "18.5822734231225 -5.39737456891382 0.8606866051066; 0.177025544047126 0 0 0.98420625722194; 1 1 1"
		Type = Ambient
		Brightness = 37388.562104070006
	}
	.component NeoAxis.Light
	{
		Enabled = False
		Name = Directional Light
		Transform = "23.4737008768449 -15.0814890020227 22.8055842838911; -0.48553441582008 -0.67324283509012 0.472744885192886 -0.295825437679109; 1 1 1"
		Type = Directional
		Brightness = 200000
		AttenuationFar = 100
		AttenuationPower = 1.5
		SpotlightInnerAngle = 80
		SpotlightOuterAngle = 91.429
	}
	.component NeoAxis.RenderingPipeline_Basic
	{
		Name = Rendering Pipeline
		ShadowDirectionalDistance = 70
		ShadowPointSpotlightDistance = 70
		.component NeoAxis.Component
		{
			Name = Background Effects
		}
		.component NeoAxis.Component
		{
			Name = Scene Effects
			.component NeoAxis.RenderingEffect_MicroparticlesInAir
			{
				Name = Microparticles In Air
				Multiplier = 0.01
				Blur = 5
			}
			.component NeoAxis.RenderingEffect_AmbientOcclusion
			{
				Name = Ambient Occlusion
			}
			.component NeoAxis.RenderingEffect_LensEffects
			{
				Name = Lens Effects
			}
			.component NeoAxis.RenderingEffect_ToneMapping
			{
				Name = Tone Mapping
				Intensity = 0.5
			}
			.component NeoAxis.RenderingEffect_ToLDR
			{
				Name = To LDR
			}
			.component NeoAxis.RenderingEffect_Antialiasing
			{
				Name = Antialiasing
			}
			.component NeoAxis.RenderingEffect_ResolutionUpscale
			{
				Name = Resolution Upscale
			}
			.component NeoAxis.RenderingEffect_Sharpen
			{
				Name = Sharpen
			}
			.component NeoAxis.RenderingEffect_MotionBlur
			{
				Name = Motion Blur
			}
			.component NeoAxis.RenderingEffect_Precipitation
			{
				Name = Precipitation
			}
		}
		.component NeoAxis.Component
		{
			Name = Final Image Effects
		}
	}
	.component NeoAxis.GameMode
	{
		Name = Game Mode
		UseBuiltInCamera = ThirdPerson
		ThirdPersonCameraHorizontalAngle = -125.8713669298578
		InventoryWidget = True
		CutsceneStarted = False
		CutsceneGuiFadingFactor = 0
		CutsceneGuiFadingSpeed = 0
		ScreenFadingCurrentColor = 0 0 0 0
		ScreenFadingTargetColor = 0 0 0 0
		ScreenFadingSpeed = 0
		ObjectControlledByPlayer
		{
			GetByReference = "this:..\\$Character"
		}
	}
	.component NeoAxis.NetworkLogic
	{
		Name = Network Logic
	}
	.component NeoAxis.SpawnPoint
	{
		Name = Spawn Point
		Transform = "4.49515912893015 -1.55471130674913 1.15; 0 0 0.707106781186548 0.707106781186548; 1 1 1"
	}
	.component NeoAxis.MeshInSpace
	{
		Name = Ground
		CanBeSelected = False
		Transform
		{
			GetByReference = "this:$Collision Body\\Transform"
		}
		Mesh
		{
			GetByReference = "this:$Mesh"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.Mesh
		{
			Name = Mesh
			.component NeoAxis.MeshGeometry_Plane
			{
				Name = Mesh Geometry
				Dimensions = 2000 2000
				Segments = 50 50
				UVTilesPerUnit = 0.25 0.25
			}
		}
		.component NeoAxis.RigidBody
		{
			Name = Collision Body
			Transform = "0 0 0; 0 0 0 1; 1 1 1"
			MaterialFriction = 0.2
			.component NeoAxis.CollisionShape_Mesh
			{
				Mesh
				{
					GetByReference = "this:..\\..\\Mesh"
				}
				Vertices
				{
				}
				Indices
				{
				}
			}
		}
	}
	.component NeoAxis.MeshInSpace
	{
		Name = Sphere
		Transform
		{
			GetByReference = "this:$Collision Body\\Transform"
		}
		Mesh
		{
			GetByReference = "this:$Mesh"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.Mesh
		{
			Name = Mesh
			.component NeoAxis.MeshGeometry_Sphere
			{
				Name = Mesh Geometry
			}
		}
		.component NeoAxis.RigidBody
		{
			Name = Collision Body
			Transform = "0 0 0.5; 0 0 0 1; 1 1 1"
			MotionType = Dynamic
			.component NeoAxis.CollisionShape_Sphere
			{
			}
		}
	}
	.component NeoAxis.MeshInSpace
	{
		Name = Box
		Color = 1 1 0
		Transform
		{
			GetByReference = "this:$Collision Body\\Transform"
		}
		Mesh
		{
			GetByReference = "this:$Mesh"
		}
		ReplaceMaterial
		{
			GetByReference = "Base\\Materials\\White.material"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.Mesh
		{
			Name = Mesh
			.component NeoAxis.MeshGeometry_Box
			{
				Name = Mesh Geometry
			}
		}
		.component NeoAxis.RigidBody
		{
			Name = Collision Body
			Transform = "4.70197196338417 5.77635926158248 0.500000000000008; 0 0 0 1; 1 1 1"
			MotionType = Dynamic
			.component NeoAxis.CollisionShape_Box
			{
			}
		}
	}
	.component NeoAxis.MeshInSpace
	{
		Name = Cylinder
		Transform
		{
			GetByReference = "this:$Collision Body\\Transform"
		}
		Mesh
		{
			GetByReference = "this:$Mesh"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.Mesh
		{
			Name = Mesh
			.component NeoAxis.MeshGeometry_Cylinder
			{
				Name = Mesh Geometry
			}
		}
		.component NeoAxis.RigidBody
		{
			Name = Collision Body
			Transform = "5.83784400973029 1.75981764467444 0.499999999999976; 0 0 0 1; 1 1 1"
			MotionType = Dynamic
			.component NeoAxis.CollisionShape_Cylinder
			{
			}
		}
	}
	.component NeoAxis.GroupOfObjects
	{
		Name = Group Of Objects
		BaseObjects
		{
			Count = 1
			0 "NeoAxis.Reference<NeoAxis.Component>"
			{
				GetByReference = "root:$Ground"
			}
		}
	}
	.component NeoAxis.Character
	{
		Name = Character
		Transform = "4.65281908694953 8.77166952304306 0; 0 0 0.936537275455798 -0.350568012918794; 1 1 1"
		Collision = True
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.MeshInSpaceAnimationController
		{
			Name = Animation Controller
		}
		.component NeoAxis.CharacterInputProcessing
		{
			Name = Character Input Processing
		}
		.component NeoAxis.CharacterAI
		{
			Name = Character AI
			NetworkMode = False
			LookingForFoodModeIdleTime = 10
		}
	}
	.component NeoAxis.MeshInSpace
	{
		Name = Box 2
		CanBeSelected = False
		Transform = "-2.29387436875992 4.71844179500728 1.00549997886235; 0 0 0.283193019671898 0.959062935165942; 2 1 2"
		Collision = True
		Mesh
		{
			GetByReference = "this:$Mesh"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.Mesh
		{
			Name = Mesh
			.component NeoAxis.MeshGeometry_Box
			{
				Name = Mesh Geometry
			}
		}
	}
	.component NeoAxis.Button
	{
		Name = Button
		Transform = "-2.41517832593618 4.01409060633201 1.32489341333328; 0 0 -0.478282120422081 0.878206247577731; 1 1 1"
		Mesh
		{
			GetByReference = "Content\\Buttons\\Default\\Base.mesh"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.CSharpScript
		{
			Name = C# Script
			NetworkMode = False
			Code = "public void Button_Click(NeoAxis.Button sender)\r\n{\r\n\tvar scene = sender.ParentScene;\r\n\r\n\tvar ground = scene.GetComponent(\"Ground\") as MeshInSpace;\r\n\tif (ground != null)\r\n\t{\r\n\t\tif (!ground.ReplaceMaterial.ReferenceSpecified)\r\n\t\t{\r\n\t\t\tground.ReplaceMaterial = ReferenceUtility.MakeReference(\r\n\t\t\t\t@\"Content\\Materials\\Basic Library\\Concrete\\Concrete Floor 01.material\");\r\n\t\t}\r\n\t\telse\r\n\t\t\tground.ReplaceMaterial = null;\r\n\t}\r\n}\r\n"
			Exit
			{
			}
			.component NeoAxis.EventHandlerComponent
			{
				Name = Event Handler Click
				Event
				{
					GetByReference = "this:..\\..\\event:Click"
				}
				HandlerMethod
				{
					GetByReference = "this:..\\method:Button_Click(NeoAxis.Button)"
				}
				HandlerFlow
				{
				}
			}
		}
	}
	.component NeoAxis.Regulator
	{
		Name = Regulator
		Transform = "-1.62152732411249 4.52791423400963 1.31229185132108; 0 0 -0.48183375394467 0.876262651012576; 1 1 1"
		Mesh
		{
			GetByReference = "Content\\Regulators\\Default\\Base.mesh"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.CSharpScript
		{
			Name = C# Script
			NetworkMode = False
			Code = "public void Regulator_ValueChanged(NeoAxis.Regulator obj)\r\n{\r\n\tvar scene = obj.ParentScene;\r\n\r\n\tvar ground = scene.GetComponent(\"Ground\") as MeshInSpace;\r\n\tif (ground != null)\r\n\t\tground.Color = ColorValue.Lerp(new ColorValue(1, 1, 1), new ColorValue(0.4, 0.9, 0.4), (float)obj.Value);\r\n}\r\n"
			Exit
			{
			}
			.component NeoAxis.EventHandlerComponent
			{
				Name = Event Handler ValueChanged
				Event
				{
					GetByReference = "this:..\\..\\event:ValueChanged"
				}
				HandlerMethod
				{
					GetByReference = "this:..\\method:Regulator_ValueChanged(NeoAxis.Regulator)"
				}
				HandlerFlow
				{
				}
			}
		}
	}
	.component NeoAxis.Character
	{
		Name = Character NPC
		Transform = "-1.16870246935174 9.72036562647116 0.00000017460560819; 0 0 -0.481296986341476 0.876557588577271; 1 1 1"
		Collision = True
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.MeshInSpaceAnimationController
		{
			Name = Animation Controller
		}
		.component NeoAxis.CharacterAI
		{
			Name = Character AI
			PermanentMessage = Want to talk?
			AllowInteract = True
			LookAtControlledCharacterByPlayerDistance = 5
			LookingForFoodModeIdleTime = 10
			DialogueFlow
			{
				GetByReference = "this:$Flow Graph\\$Node Flow Dialogue Message 1"
			}
			.component NeoAxis.FlowGraph
			{
				Name = Flow Graph
				NetworkMode = False
				EditorScrollPosition = 6 -1.70588235294118
				.component NeoAxis.FlowGraphNode
				{
					Name = Node Flow Dialogue Message 1
					Position = -13 -9
					ControlledObject
					{
						GetByReference = "this:$Flow Dialogue Message"
					}
					.component NeoAxis.FlowDialogueMessage
					{
						Name = Flow Dialogue Message
						Message = Hi! I am Bryce. Are you looking for something?
						AnswerText0 = Hi Bryce! Please tell me how to make a dialogue like this?
						AnswerText1 = Hi Bryce! How to activate the first person camera?
						AnswerText2 = Bye
						AnswerBody0
						{
							GetByReference = "this:..\\..\\$Node Flow Dialogue Message 2\\$Flow Dialogue Message\\Entry"
						}
						AnswerBody1
						{
							GetByReference = "this:..\\..\\$Node Flow Dialogue Message 3\\$Flow Dialogue Message\\Entry"
						}
						AnswerBody2
						{
						}
					}
				}
				.component NeoAxis.FlowGraphNode
				{
					Name = Node Flow Dialogue Message 2
					Position = 11 -8
					ControlledObject
					{
						GetByReference = "this:$Flow Dialogue Message"
					}
					.component NeoAxis.FlowDialogueMessage
					{
						Name = Flow Dialogue Message
						Message = "You can check Flow Graph tab of the scene in the editor, check the engine\'s manual and check Samples\\Starter Content\\Scenes\\Dialogue.scene. Do you want to know something else?"
						AnswerCount = 2
						AnswerText0 = Yes
						AnswerText1 = No, bye
						AnswerBody0
						{
							GetByReference = "this:..\\..\\$Node Flow Dialogue Message 1\\$Flow Dialogue Message\\Entry"
						}
						AnswerBody1
						{
						}
					}
				}
				.component NeoAxis.FlowGraphNode
				{
					Name = Node Flow Dialogue Message 3
					Position = 11 1
					ControlledObject
					{
						GetByReference = "this:$Flow Dialogue Message"
					}
					.component NeoAxis.FlowDialogueMessage
					{
						Name = Flow Dialogue Message
						Message = Press F6. You can see the list of hot keys in Options. Do you want to know something else?
						AnswerCount = 2
						AnswerText0 = Yes
						AnswerText1 = No, bye
						AnswerBody0
						{
							GetByReference = "this:..\\..\\$Node Flow Dialogue Message 1\\$Flow Dialogue Message\\Entry"
						}
						AnswerBody1
						{
						}
					}
				}
			}
		}
	}
	.component NeoAxis.Vehicle
	{
		Name = Vehicle
		Transform = "1.46574814602625 12.3936755280104 0.415897374942352; 0.00102790833521379 0.000831452836289 0.780242293616983 -0.625476019387559; 1 1 1"
		Collision = True
		Headlights = 1
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		ObjectsOnSeats
		{
			Count = 0
		}
	}
	.component NeoAxis.Weapon
	{
		Name = Weapon
		Transform = "5.80999936042496 1.6835054121503 1.03061196847227; -0.706997156143188 0.00234769145026803 0.00310577778145671 0.707205712795258; 1 1 1"
		Collision = True
		Mesh
		{
			GetByReference = "Content\\Weapons\\Default\\scene.gltf|$Mesh"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
	}
	.component NeoAxis.Light
	{
		Name = Light
		Transform = "0.376542767982858 7.0991890590634 3.02879709359325; 0 0 0 1; 1 1 1"
		Type = Point
		Brightness = 422155.6493165101
		AttenuationFar = 14.884
	}
	.component NeoAxis.Fog
	{
		Name = Fog
		Color = 0.2705882 0.2122353 0.0372549
		Density = 0.012592681409903704
	}
}
