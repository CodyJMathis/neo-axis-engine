// Made with NeoAxis Engine 2023.1.

.component NeoAxis.Scene
{
	EditorDocumentConfiguration = "\xfeff<?xml version=\"1.0\" encoding=\"utf-16\"?><KD V=\"1\"><DGD /><DM N=\"DockingManager\" C=\"2\"><DW N=\"DockingWorkspace\" O=\"0\" S=\"1145, 842\"><KW V=\"1\" A=\"F4DB533C31C040B98A98FB78DE86F73F\"><CGD /><WS UN=\"4A87E34386084E14BC81ED10FBED4D99\" S=\"T,0,50:T,0,50\" D=\"Horizontal\"><WC UN=\"CDCAFC612A604332059A8B71DEDA5F9D\" S=\"T,0,50:T,0,50\" NM=\"BarTabGroup\" AR=\"True\" SP=\"F4DB533C31C040B98A98FB78DE86F73F\"><KP UN=\"F4DB533C31C040B98A98FB78DE86F73F\" S=\"False\"><CPD ObjPath=\"\" /></KP><KP UN=\"74B2358CD86F4C7AF2925B9F78248F9C\" S=\"False\"><CPD ObjPath=\"$C# Script\" /></KP><KP UN=\"CF86492588AE41BC15A0C88B38B4D44B\" S=\"False\"><CPD ObjPath=\"$C# Script 2\" /></KP><KP UN=\"3E2592181BA44A46F6930B2D0FF177B9\" S=\"False\"><CPD ObjPath=\"$C# Script 3\" /></KP></WC></WS></KW></DW><DF N=\"DockingFloating\" C=\"0\"></DF></DM></KD>"
	BackgroundColor = 0.6666667 0.6666667 0.6666667
	DisplayDevelopmentDataInEditor = False
	DisplayTextInfo = True
	RenderingPipeline
	{
		GetByReference = "root:$Rendering Pipeline"
	}
	CameraEditor
	{
		GetByReference = "this:$Camera Editor"
	}
	.component NeoAxis.Camera
	{
		Name = Camera Editor
		Visible = False
		Transform = "14.3196550369263 -2.83415175214027 -14.1182985927375; -0.170282282661674 0.0716183077559352 0.905924550820724 0.381018989587101; 1 1 1"
	}
	.component NeoAxis.Light
	{
		Name = Ambient Light
		Transform = "-27.7871391969358 37.4683781031502 14.686420383686; 0.177025544047126 0 0 0.98420625722194; 1 1 1"
		Type = Ambient
		Brightness = 7290
	}
	.component NeoAxis.RenderingPipeline_Basic
	{
		Name = Rendering Pipeline
		ShadowDirectionalLightCascades = 1
		ShadowSpotlightTextureSize = _2048
		.component NeoAxis.Component
		{
			Name = Background Effects
		}
		.component NeoAxis.Component
		{
			Name = Scene Effects
			.component NeoAxis.RenderingEffect_AmbientOcclusion
			{
				Name = Ambient Occlusion
				Intensity = 0.8
				Radius = 2
			}
			.component NeoAxis.RenderingEffect_ToLDR
			{
				Name = To LDR
			}
			.component NeoAxis.RenderingEffect_Antialiasing
			{
				Name = Antialiasing
			}
			.component NeoAxis.RenderingEffect_ResolutionUpscale
			{
				Name = Resolution Upscale
			}
			.component NeoAxis.RenderingEffect_Sharpen
			{
				Name = Sharpen
			}
			.component NeoAxis.RenderingEffect_MotionBlur
			{
				Name = Motion Blur
				Multiplier = 2
			}
		}
	}
	.component NeoAxis.GameMode
	{
		Name = Game Mode
		CutsceneStarted = False
		CutsceneGuiFadingFactor = 0
		CutsceneGuiFadingSpeed = 0
		ScreenFadingCurrentColor = 0 0 0 0
		ScreenFadingTargetColor = 0 0 0 0
		ScreenFadingSpeed = 0
	}
	.component NeoAxis.Light
	{
		Name = Light1
		Transform = "21.096603415861 -4.02738720650646 -4.54723975048288; -0.385544653371362 -0.735088364894102 0.426206952042812 -0.359649899324952; 1 1 1"
		Type = Spotlight
		Brightness = 346459.78125
		AttenuationFar = 100
		AttenuationPower = 1.5
		SpotlightInnerAngle = 80
		SpotlightOuterAngle = 90
	}
	.component NeoAxis.Light
	{
		Name = Light2
		Transform = "16.2614505529656 1.98343514224467 -13.6195803875689; 0 0 0 1; 1 1 1"
		Type = Point
		Brightness = 279839.871757908
		AttenuationFar = 20
	}
	.component NeoAxis.Light
	{
		Name = Light3
		Transform = "9.45344240293682 -4.18588145995731 -13.760985157176; 0 0 0 1; 1 1 1"
		Type = Point
		Brightness = 106423.382038007
		AttenuationFar = 20
	}
	.component NeoAxis.MeshInSpace
	{
		Name = Mesh in Space 31
		CanBeSelected = False
		Transform = "12.4214674037176 0.248415906223993 -16.7808109194805; 0 0 0 1; 1 1 1"
		Mesh
		{
			GetByReference = "this:$Mesh"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.Mesh
		{
			Name = Mesh
			.component NeoAxis.MeshGeometry_Plane
			{
				Name = Mesh Geometry
				Dimensions = 10 10
				Material
				{
					GetByReference = "Content\\Materials\\Basic Library\\Concrete\\Concrete Floor 01.material"
				}
			}
		}
		.component NeoAxis.RigidBody
		{
			Name = Collision Body
			Transform
			{
				GetByReference = "this:..\\Transform"
			}
			.component NeoAxis.CollisionShape_Mesh
			{
				Mesh
				{
					GetByReference = "this:..\\..\\Mesh"
				}
				Vertices
				{
				}
				Indices
				{
				}
			}
		}
	}
	.component NeoAxis.MeshInSpace
	{
		Name = Mesh in Space 2
		CanBeSelected = False
		Transform = "12.4214674037176 0.248415906223993 -17.5120932635607; 0 0 0 1; 1 1 1"
		Mesh
		{
			GetByReference = "this:$Mesh"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.Mesh
		{
			Name = Mesh
			.component NeoAxis.MeshGeometry_Plane
			{
				Name = Mesh Geometry
				Dimensions = 150 150
				Material
				{
					GetByReference = "Base\\Materials\\Gray.material"
				}
			}
		}
	}
	.component NeoAxis.MeshInSpace
	{
		Name = Mesh in Space 20
		CanBeSelected = False
		Transform = "12.3837951266935 5.18211380366376 -13.8391352068506; 0.707106781186547 0 0 0.707106781186548; 1 1 1"
		Mesh
		{
			GetByReference = "this:$Mesh"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.Mesh
		{
			Name = Mesh
			.component NeoAxis.MeshGeometry_Plane
			{
				Name = Mesh Geometry
				Dimensions = 10 6
				UVTilesPerUnit = 0.5 0.5
				Material
				{
					GetByReference = "Content\\Materials\\Basic Library\\Brick\\Yellow Brick.material"
				}
			}
		}
		.component NeoAxis.RigidBody
		{
			Name = Collision Body
			Transform
			{
				GetByReference = "this:..\\Transform"
			}
			.component NeoAxis.CollisionShape_Mesh
			{
				Mesh
				{
					GetByReference = "this:..\\..\\Mesh"
				}
				Vertices
				{
				}
				Indices
				{
				}
			}
		}
	}
	.component NeoAxis.MeshInSpace
	{
		Name = Mesh in Space 21
		CanBeSelected = False
		Transform = "7.43501064695957 0.272948256138564 -13.8541381866406; -0.5 0.5 -0.5 0.5; 1 1 1"
		Mesh
		{
			GetByReference = "this:$Mesh"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.Mesh
		{
			Name = Mesh
			.component NeoAxis.MeshGeometry_Plane
			{
				Name = Mesh Geometry
				Dimensions = 10 6
				UVTilesPerUnit = 0.5 0.5
				Material
				{
					GetByReference = "Content\\Materials\\Basic Library\\Brick\\Yellow Brick.material"
				}
			}
		}
		.component NeoAxis.RigidBody
		{
			Name = Collision Body
			Transform
			{
				GetByReference = "this:..\\Transform"
			}
			.component NeoAxis.CollisionShape_Mesh
			{
				Mesh
				{
					GetByReference = "this:..\\..\\Mesh"
				}
				Vertices
				{
				}
				Indices
				{
				}
			}
		}
	}
	.component NeoAxis.MeshInSpace
	{
		Name = Mesh in Space
		Transform
		{
			GetByReference = "root:$C# Script\\Method"
		}
		Mesh
		{
			GetByReference = "Samples\\Starter Content\\Models\\Sci-fi Drone\\Sci-fi Drone.fbx|$Mesh"
		}
		ReplaceMaterial
		{
			GetByReference = "Samples\\Starter Content\\Models\\Sci-fi Drone\\Sci-fi Drone.fbx|$Materials\\$Sci-fi Drone Yellow"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
	}
	.component NeoAxis.MeshInSpace
	{
		Name = Mesh in Space3
		Transform = "13.8748917888877 3.53208757169405 -15.0263342903994; 0 0 -0.828200876772728 0.560431358609495; 1 1 1"
		Mesh
		{
			GetByReference = "Samples\\Starter Content\\Models\\Sci-fi Drone\\Sci-fi Drone.fbx|$Mesh"
		}
		ReplaceMaterial
		{
			GetByReference = "Samples\\Starter Content\\Models\\Sci-fi Drone\\Sci-fi Drone.fbx|$Materials\\$Sci-fi Drone Red"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
	}
	.component NeoAxis.MeshInSpace
	{
		Name = Mesh in Space2
		Transform = "8.4597365162221 -2.42590726188159 -14.7848503691802; 0 0 0.27145995818091 0.96244973432612; 1 1 1"
		Mesh
		{
			GetByReference = "Samples\\Starter Content\\Models\\Sci-fi Drone\\Sci-fi Drone.fbx|$Mesh"
		}
		ReplaceMaterial
		{
			GetByReference = "Samples\\Starter Content\\Models\\Sci-fi Drone\\Sci-fi Drone.fbx|$Materials\\$Sci-fi Drone Blue"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
	}
	.component NeoAxis.MeshInSpace
	{
		Name = Mesh in Space 3
		Transform = "11.7374839124827 -0.05177675032439 -16.0092755825092; 0 0 -0.331515423839943 0.943449799277218; 1 1 1"
		Mesh
		{
			GetByReference = "Samples\\Starter Content\\Models\\Ball in 3D Coat\\export3dcoat.obj|$Mesh"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
	}
	.component NeoAxis.MeshInSpace
	{
		Enabled = False
		Name = Spaceship
		Transform
		{
			GetByReference = "root:$C# Script 3\\Method"
		}
		Mesh
		{
			GetByReference = "Samples\\Starter Content\\Models\\Spaceship\\Spaceship.fbx|$Mesh"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
	}
	.component NeoAxis.CSharpScript
	{
		Name = C# Script
		Code = "Transform Method()\r\n{\r\n\tvar angle = EngineApp.EngineTime * -1.0;\r\n\tvar offset = new Vector3(Math.Cos(angle), Math.Sin(angle), 0) * 2.0;\r\n\tvar lookTo = new Vector3(11.7374839124827, -0.05177675032439, -14.8092755825092);\r\n\tvar lookAt = Quaternion.LookAt(-offset, new Vector3(0,0,1));\r\n\t\r\n\treturn new Transform( lookTo + offset, lookAt, Vector3.One );\r\n}\r\n"
		Exit
		{
		}
	}
	.component NeoAxis.CSharpScript
	{
		Name = C# Script 2
		Code = "Transform Method()\r\n{\r\n\tvar angle = EngineApp.EngineTime * 1.3;\r\n\tvar offset = new Vector3(Math.Cos(angle), Math.Sin(angle), 0) * 2.0;\r\n\tvar lookTo = new Vector3(11.7374839124827, -0.05177675032439, -15.5092755825092);\r\n\tvar lookAt = Quaternion.LookAt(-offset, new Vector3(0,0,1));\r\n\t\r\n\treturn new Transform( lookTo + offset, lookAt, new Vector3(0.5,0.5,0.5) );\r\n}\r\n"
		Exit
		{
		}
	}
	.component NeoAxis.CSharpScript
	{
		Name = C# Script 3
		Code = "Transform Method()\r\n{\r\n\tvar angle = EngineApp.EngineTime * 5;\r\n\tvar rotation = Quaternion.FromRotateByZ(angle);\r\n\r\n\treturn new Transform(new Vector3(11.7374, -0.0517, -16.3071), rotation, new Vector3(0.4, 0.4, 0.4));\r\n}\r\n"
		Exit
		{
		}
	}
	.component NeoAxis.Billboard
	{
		Name = Billboard
		Transform
		{
			GetByReference = "root:$C# Script 2\\Method"
		}
		Material
		{
			GetByReference = "Samples\\Starter Content\\Materials\\Planets\\Planet2.material"
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
	}
}
