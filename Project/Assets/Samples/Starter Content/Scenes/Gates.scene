// Made with NeoAxis Engine 2024.1.

.component NeoAxis.Scene
{
	RenderingPipeline
	{
		GetByReference = "root:$Rendering Pipeline"
	}
	CameraEditor
	{
		GetByReference = "this:$Camera Editor"
	}
	CameraEditor2D
	{
		GetByReference = "this:$Camera Editor 2D"
	}
	.component NeoAxis.Camera
	{
		Name = Camera Editor
		Visible = False
		Transform = "11.4322538523199 -14.847817924831 13.0396878539261; -0.228351395336953 0.228185223381698 0.66949206421547 0.669004872949682; 1 1 1"
	}
	.component NeoAxis.Camera
	{
		Name = Camera Editor 2D
		Visible = False
		Transform = "2.64918580053222 3.02745193504869 10; -0.502493739596367 0.497493760429674 0.497493760429674 0.502493739596367; 1 1 1"
		Projection = Orthographic
		Height = 16.8586419336498
		FixedUp = 0 1 0
		FarClipPlane = 100
	}
	.component NeoAxis.Light
	{
		Name = Ambient Light
		Transform = "18.5822734231225 -9.39737456891382 0.8606866051066; 0.177025544047126 0 0 0.98420625722194; 1 1 1"
		Type = Ambient
		Brightness = 60000
	}
	.component NeoAxis.Light
	{
		Name = Directional Light
		Transform = "23.4737008768449 -15.0814890020227 22.8055842838911; -0.48553441582008 -0.67324283509012 0.472744885192886 -0.295825437679109; 1 1 1"
		Type = Directional
		Brightness = 150000
		AttenuationFar = 100
		AttenuationPower = 1.5
		SpotlightInnerAngle = 80
		SpotlightOuterAngle = 91.429
	}
	.component NeoAxis.RenderingPipeline_Basic
	{
		Name = Rendering Pipeline
		ShadowIntensity = 0.75
		ShadowDirectionalDistance = 70
		ShadowPointSpotlightDistance = 70
		.component NeoAxis.Component
		{
			Name = Background Effects
		}
		.component NeoAxis.Component
		{
			Name = Scene Effects
			.component NeoAxis.RenderingEffect_AmbientOcclusion
			{
				Name = Ambient Occlusion
			}
			.component NeoAxis.RenderingEffect_LensEffects
			{
				Name = Lens Effects
			}
			.component NeoAxis.RenderingEffect_ToneMapping
			{
				Name = Tone Mapping
				Intensity = 0.5
			}
			.component NeoAxis.RenderingEffect_ToLDR
			{
				Name = To LDR
			}
			.component NeoAxis.RenderingEffect_Antialiasing
			{
				Name = Antialiasing
			}
			.component NeoAxis.RenderingEffect_ResolutionUpscale
			{
				Name = Resolution Upscale
			}
			.component NeoAxis.RenderingEffect_Sharpen
			{
				Name = Sharpen
			}
			.component NeoAxis.RenderingEffect_MotionBlur
			{
				Name = Motion Blur
			}
			.component NeoAxis.RenderingEffect_Precipitation
			{
				Name = Precipitation
			}
		}
		.component NeoAxis.Component
		{
			Name = Final Image Effects
		}
	}
	.component NeoAxis.GameMode
	{
		Name = Game Mode
		UseBuiltInCamera = ThirdPerson
		ThirdPersonCameraHorizontalAngle = 89.99999999999993
		InventoryWidget = True
		CutsceneStarted = False
		CutsceneGuiFadingFactor = 0
		CutsceneGuiFadingSpeed = 0
		ScreenFadingCurrentColor = 0 0 0 0
		ScreenFadingTargetColor = 0 0 0 0
		ScreenFadingSpeed = 0
		ObjectControlledByPlayer
		{
			GetByReference = "this:..\\$Character"
		}
	}
	.component NeoAxis.NetworkLogic
	{
		Name = Network Logic
	}
	.component NeoAxis.SpawnPoint
	{
		Name = Spawn Point
		Transform = "4.49515912893015 -8.55471130674913 1.15; 0 0 0.707106781186548 0.707106781186548; 1 1 1"
	}
	.component NeoAxis.MeshInSpace
	{
		Name = Ground
		CanBeSelected = False
		Transform
		{
			GetByReference = "this:$Collision Body\\Transform"
		}
		Mesh
		{
			GetByReference = "this:$Mesh"
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.Mesh
		{
			Name = Mesh
			.component NeoAxis.MeshGeometry_Plane
			{
				Name = Mesh Geometry
				Dimensions = 100 100
				Segments = 50 50
				UVTilesPerUnit = 0.25 0.25
			}
		}
		.component NeoAxis.RigidBody
		{
			Name = Collision Body
			Transform = "0 0 0; 0 0 0 1; 1 1 1"
			MaterialFriction = 0.2
			.component NeoAxis.CollisionShape_Mesh
			{
				Mesh
				{
					GetByReference = "this:..\\..\\Mesh"
				}
				Vertices
				{
				}
				Indices
				{
				}
			}
		}
	}
	.component NeoAxis.GroupOfObjects
	{
		Name = Group Of Objects
		BaseObjects
		{
			Count = 1
			0 "NeoAxis.Reference<NeoAxis.Component>"
			{
				GetByReference = "root:$Ground"
			}
		}
	}
	.component NeoAxis.Character
	{
		Name = Character
		Transform = "11.0018535989902 -7.72914356831118 0; 0 0 0.707106781186547 0.707106781186548; 1 1 1"
		Collision = True
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.MeshInSpaceAnimationController
		{
			Name = Animation Controller
		}
		.component NeoAxis.CharacterInputProcessing
		{
			Name = Character Input Processing
		}
		.component NeoAxis.CharacterAI
		{
			Name = Character AI
			NetworkMode = False
			LookingForFoodModeIdleTime = 10
		}
	}
	.component NeoAxis.Gate
	{
		Name = Hinge Side Dynamic Gate
		Transform = "-5.5 4 0; 0 0 0 1; 1 1 1"
		Collision = True
		AllowInteract = True
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		GateType
		{
			GetByReference = "Content\\Gates\\NeoAxis\\Hinge Side Dynamic Gate\\Hinge Side Dynamic Gate.gatetype"
		}
	}
	.component NeoAxis.Gate
	{
		Name = Hinge Side Kinematic Gate
		Transform = "-1.5 4 0; 0 0 0 1; 1 1 1"
		Collision = True
		DesiredState = 0.5
		AllowInteract = True
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		GateType
		{
			GetByReference = "Content\\Gates\\NeoAxis\\Hinge Side Kinematic Gate\\Hinge Side Kinematic Gate.gatetype"
		}
	}
	.component NeoAxis.Text3D
	{
		Name = Text 3D
		Transform = "-5.5 4.5 3; 0 0 -0.707106781186548 0.707106781186548; 0.5 0.5 0.5"
		Color = 0 0.2546667 1
		Text = Dynamic
		ReplaceMaterial
		{
			GetByReference = "Base\\Materials\\White.material"
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
	}
	.component NeoAxis.Text3D
	{
		Name = Text 3D 8
		Transform = "4 4.5 3; 0 0 -0.707106781186548 0.707106781186548; 0.5 0.5 0.5"
		Color = 0 0.2546667 1
		Text = Dynamic
		ReplaceMaterial
		{
			GetByReference = "Base\\Materials\\White.material"
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
	}
	.component NeoAxis.Text3D
	{
		Name = Text 3D 5
		Transform = "-3.5 4.5 4.5; 0 0 -0.707106781186548 0.707106781186548; 0.5 0.5 0.5"
		Color = 0 0.2546667 1
		Text = Hinge Side
		ReplaceMaterial
		{
			GetByReference = "Base\\Materials\\White.material"
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
	}
	.component NeoAxis.Text3D
	{
		Name = Text 3D 9
		Transform = "6 4.5 4.5; 0 0 -0.707106781186548 0.707106781186548; 0.5 0.5 0.5"
		Color = 0 0.2546667 1
		Text = Hinge Up
		ReplaceMaterial
		{
			GetByReference = "Base\\Materials\\White.material"
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
	}
	.component NeoAxis.Text3D
	{
		Name = Text 3D 6
		Transform = "15.5 4.5 4.5; 0 0 -0.707106781186548 0.707106781186548; 0.5 0.5 0.5"
		Color = 0 0.2546667 1
		Text = Slider Horizontal
		ReplaceMaterial
		{
			GetByReference = "Base\\Materials\\White.material"
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
	}
	.component NeoAxis.Text3D
	{
		Name = Text 3D 11
		Transform = "25.5 4.5 4.5; 0 0 -0.707106781186548 0.707106781186548; 0.5 0.5 0.5"
		Color = 0 0.2546667 1
		Text = Slider Vertical
		ReplaceMaterial
		{
			GetByReference = "Base\\Materials\\White.material"
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
	}
	.component NeoAxis.Text3D
	{
		Name = Text 3D 4
		Transform = "-1.5 4.5 3; 0 0 -0.707106781186548 0.707106781186548; 0.5 0.5 0.5"
		Color = 0 0.2546667 1
		Text = Kinematic
		ReplaceMaterial
		{
			GetByReference = "Base\\Materials\\White.material"
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
	}
	.component NeoAxis.Text3D
	{
		Name = Text 3D 10
		Transform = "8 4.5 3; 0 0 -0.707106781186548 0.707106781186548; 0.5 0.5 0.5"
		Color = 0 0.2546667 1
		Text = Kinematic
		ReplaceMaterial
		{
			GetByReference = "Base\\Materials\\White.material"
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
	}
	.component NeoAxis.Text3D
	{
		Name = Text 3D 2
		Transform = "13.5 4.5 3; 0 0 -0.707106781186548 0.707106781186548; 0.5 0.5 0.5"
		Color = 0 0.2546667 1
		Text = Dynamic
		ReplaceMaterial
		{
			GetByReference = "Base\\Materials\\White.material"
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
	}
	.component NeoAxis.Text3D
	{
		Name = Text 3D 12
		Transform = "23.5 4.5 3; 0 0 -0.707106781186548 0.707106781186548; 0.5 0.5 0.5"
		Color = 0 0.2546667 1
		Text = Dynamic
		ReplaceMaterial
		{
			GetByReference = "Base\\Materials\\White.material"
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
	}
	.component NeoAxis.Text3D
	{
		Name = Text 3D 3
		Transform = "17.5 4.5 3; 0 0 -0.707106781186548 0.707106781186548; 0.5 0.5 0.5"
		Color = 0 0.2546667 1
		Text = Kinematic
		ReplaceMaterial
		{
			GetByReference = "Base\\Materials\\White.material"
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
	}
	.component NeoAxis.Text3D
	{
		Name = Text 3D 13
		Transform = "27.5 4.5 3; 0 0 -0.707106781186548 0.707106781186548; 0.5 0.5 0.5"
		Color = 0 0.2546667 1
		Text = Kinematic
		ReplaceMaterial
		{
			GetByReference = "Base\\Materials\\White.material"
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
	}
	.component NeoAxis.Gate
	{
		Name = Slider Horizontal Dynamic Gate
		Transform = "13.5 4 0; 0 0 0 1; 1 1 1"
		Collision = True
		AllowInteract = True
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		GateType
		{
			GetByReference = "Content\\Gates\\NeoAxis\\Slider Horizontal Dynamic Gate\\Slider Horizontal Dynamic Gate.gatetype"
		}
	}
	.component NeoAxis.Gate
	{
		Name = Slider Horizontal Kinematic Gate
		Transform = "17.5 4 0; 0 0 0 1; 1 1 1"
		Collision = True
		DesiredState = 0.5
		AllowInteract = True
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		GateType
		{
			GetByReference = "Content\\Gates\\NeoAxis\\Slider Horizontal Kinematic Gate\\Slider Horizontal Kinematic Gate.gatetype"
		}
	}
	.component NeoAxis.Gate
	{
		Name = Hinge Up Dynamic Gate
		Transform = "4 4 0; 0 0 0 1; 1 1 1"
		Collision = True
		AllowInteract = True
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		GateType
		{
			GetByReference = "Content\\Gates\\NeoAxis\\Hinge Up Dynamic Gate\\Hinge Up Dynamic Gate.gatetype"
		}
	}
	.component NeoAxis.Gate
	{
		Name = Hinge Up Kinematic Gate
		Transform = "8 4 0; 0 0 0 1; 1 1 1"
		Collision = True
		DesiredState = 0.488
		AllowInteract = True
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		GateType
		{
			GetByReference = "Content\\Gates\\NeoAxis\\Hinge Up Kinematic Gate\\Hinge Up Kinematic Gate.gatetype"
		}
	}
	.component NeoAxis.Gate
	{
		Name = Slider Vertical Dynamic Gate
		Transform = "23.5 4 0; 0 0 0 1; 1 1 1"
		Collision = True
		AllowInteract = True
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		GateType
		{
			GetByReference = "Content\\Gates\\NeoAxis\\Slider Vertical Dynamic Gate\\Slider Vertical Dynamic Gate.gatetype"
		}
	}
	.component NeoAxis.Gate
	{
		Name = Slider Vertical Kinematic Gate
		Transform = "27.5 4 0; 0 0 0 1; 1 1 1"
		Collision = True
		AllowInteract = True
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		GateType
		{
			GetByReference = "Content\\Gates\\NeoAxis\\Slider Vertical Kinematic Gate\\Slider Vertical Kinematic Gate.gatetype"
		}
	}
}
