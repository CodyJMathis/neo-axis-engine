.component NeoAxis.Component_Scene
{
	EditorDocumentConfiguration = "\xfeff<?xml version=\"1.0\" encoding=\"utf-16\"?><KD V=\"1\"><DGD /><DM N=\"DockingManager\" C=\"2\"><DW N=\"DockingWorkspace\" O=\"0\" S=\"1166, 842\"><KW V=\"1\" A=\"4E8F1A9109764849FBA8764337C53FA8\"><CGD /><WS UN=\"4A87E34386084E14BC81ED10FBED4D99\" S=\"T,0,50:T,0,50\" D=\"Horizontal\"><WS UN=\"EE2822F88E754BF93BA3906E32330AAF\" S=\"T,0,50:T,0,50\" D=\"Vertical\"><WC UN=\"753DE069FFC04991C3B9F57735DA9561\" S=\"T,0,50:T,0,50\" NM=\"BarTabGroup\" AR=\"True\" SP=\"4E8F1A9109764849FBA8764337C53FA8\"><KP UN=\"4E8F1A9109764849FBA8764337C53FA8\" S=\"False\"><CPD ObjPath=\"\" /></KP></WC><WC UN=\"196A37D5838C43A7F3A1C1DA245A63CC\" S=\"T,0,50:T,0,50\" NM=\"BarTabGroup\" AR=\"True\" SP=\"58E19DAABB8E4723B19FFED934541549\"><KP UN=\"58E19DAABB8E4723B19FFED934541549\" S=\"False\"><CPD ObjPath=\"$Character\\$Mesh In Space\\$Mesh In Space Animation Controller\\$C# Script\" /></KP></WC></WS></WS></KW></DW><DF N=\"DockingFloating\" C=\"0\"></DF></DM></KD>"
	RenderingPipeline
	{
		GetByReference = "root:$Rendering Pipeline"
	}
	CameraEditor
	{
		GetByReference = "this:$Camera Editor"
	}
	CameraEditor2D
	{
		GetByReference = "this:$Camera Editor 2D"
	}
	.component NeoAxis.Component_Camera
	{
		Name = Camera Editor
		Visible = False
		Transform = "2.70562807346165 -0.569514810202128 1.9366416347359; -0.202746958248857 0.20238595616322 0.678074288668145 0.676866940185384; 1 1 1"
	}
	.component NeoAxis.Component_Camera
	{
		Name = Camera Editor 2D
		Visible = False
		Transform = "2.64918580053222 3.02745193504869 10; -0.502493739596367 0.497493760429674 0.497493760429674 0.502493739596367; 1 1 1"
		Projection = Orthographic
		Height = 16.8586419336498
		FixedUp = 0 1 0
		FarClipPlane = 100
	}
	.component NeoAxis.Component_Light
	{
		Name = Ambient Light
		Transform = "18.5822734231225 -5.39737456891382 0.8606866051066; 0.177025544047126 0 0 0.98420625722194; 1 1 1"
		Type = Ambient
		Brightness = 50000
	}
	.component NeoAxis.Component_Light
	{
		Name = Light 1
		Transform = "23.4737008768449 -15.0814890020227 22.8055842838911; -0.48553441582008 -0.67324283509012 0.472744885192886 -0.295825437679109; 1 1 1"
		Type = Directional
		Brightness = 130000
		AttenuationFar = 100
		AttenuationPower = 1.5
		SpotlightInnerAngle = 80
		SpotlightOuterAngle = 91.429
	}
	.component NeoAxis.Component_RenderingPipeline_Default
	{
		Name = Rendering Pipeline
		ShadowFarDistance = 15
		.component NeoAxis.Component
		{
			Name = Background Effects
		}
		.component NeoAxis.Component
		{
			Name = Scene Effects
			.component NeoAxis.Component_RenderingEffect_AmbientOcclusion
			{
				Name = Ambient Occlusion
			}
			.component NeoAxis.Component_RenderingEffect_MotionBlur
			{
				Name = Motion Blur
			}
			.component NeoAxis.Component_RenderingEffect_Bloom
			{
				Enabled = False
				Name = Bloom
			}
			.component NeoAxis.Component_RenderingEffect_LensEffects
			{
				Name = Lens Effects
			}
			.component NeoAxis.Component_RenderingEffect_ToneMapping
			{
				Name = Tone Mapping
				Intensity = 0.5
			}
			.component NeoAxis.Component_RenderingEffect_ToLDR
			{
				Name = To LDR
			}
			.component NeoAxis.Component_RenderingEffect_Antialiasing
			{
				Name = Antialiasing
			}
			.component NeoAxis.Component_RenderingEffect_Sharpen
			{
				Name = Sharpen
				Shader = "Base\\Shaders\\Effects\\Sharpen_fs.sc"
			}
		}
		.component NeoAxis.Component
		{
			Name = Final Image Effects
		}
	}
	.component NeoAxis.Component_GameMode
	{
		Name = Game Mode
	}
	.component NeoAxis.Component_Light
	{
		Enabled = False
		Name = Light 2
		Transform = "-16.276133519817 -13.7764744895929 22.8055842838911; -0.800753779408636 -0.218616030310482 0.553641801455134 0.066941554624803; 1 1 1"
		Type = Spotlight
		AttenuationFar = 100
		AttenuationPower = 1.5
		SpotlightInnerAngle = 80
		SpotlightOuterAngle = 91.429
	}
	.component NeoAxis.Component_MeshInSpace
	{
		Name = Ground
		CanBeSelected = False
		Transform = "0 0 0; 0 0 0 1; 1 1 1"
		Mesh
		{
			GetByReference = "this:$Mesh"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.Component_Mesh
		{
			Name = Mesh
			.component NeoAxis.Component_MeshGeometry_Plane
			{
				Name = Mesh Geometry
				Dimensions = 100 100
				UVTilesPerUnit = 0.25 0.25
			}
		}
		.component NeoAxis.Component_RigidBody
		{
			Name = Collision Body
			Transform
			{
				GetByReference = "this:..\\Transform"
			}
			.component NeoAxis.Component_CollisionShape_Mesh
			{
				Mesh
				{
					GetByReference = "this:..\\..\\Mesh"
				}
				Vertices
				{
				}
				Indices
				{
				}
			}
		}
	}
	.component NeoAxis.Component_GroupOfObjects
	{
		Name = Group Of Objects
		BaseObjects
		{
			Count = 1
			0 "NeoAxis.Reference<NeoAxis.Component>"
			{
				GetByReference = "root:$Ground"
			}
		}
	}
	.component NeoAxis.Component_Character
	{
		Name = Character
		RunSupport = True
		FlyControlSupport = True
		JumpSupport = True
		Animate = True
		WalkAnimationSpeed = 0.57
		RunAnimationSpeed = 0.2
		Transform
		{
			GetByReference = "this:$Collision Body\\Transform"
		}
		IdleAnimation
		{
			GetByReference = "Base\\Models\\Human.fbx|$Mesh\\$Animations\\$Idle"
		}
		WalkAnimation
		{
			GetByReference = "Base\\Models\\Human.fbx|$Mesh\\$Animations\\$Walk"
		}
		RunAnimation
		{
			GetByReference = "Base\\Models\\Human.fbx|$Mesh\\$Animations\\$Run"
		}
		FlyAnimation
		{
			GetByReference = "Base\\Models\\Human.fbx|$Mesh\\$Animations\\$Fly"
		}
		JumpAnimation
		{
			GetByReference = "Base\\Models\\Human.fbx|$Mesh\\$Animations\\$Jump"
		}
		LeftTurnAnimation
		{
			GetByReference = "Base\\Models\\Human.fbx|$Mesh\\$Animations\\$Left Turn"
		}
		RightTurnAnimation
		{
			GetByReference = "Base\\Models\\Human.fbx|$Mesh\\$Animations\\$Right Turn"
		}
		.component NeoAxis.Component_RigidBody
		{
			Name = Collision Body
			CanBeSelected = False
			Transform = "2.57078775943836 1.39862613405251 1.15091970817091; 0 0 -0.42810701246037 0.903728048630923; 1 1 1"
			MotionType = Dynamic
			Mass = 70
			AngularDamping = 10
			MaterialFriction = 0
			MaterialSpinningFriction = 0
			MaterialRollingFriction = 0
			LinearSleepingThreshold = 0
			AngularSleepingThreshold = 0
			.component NeoAxis.Component_CollisionShape_Capsule
			{
				Name = CollisionShape Capsule
				TransformRelativeToParent = "0 0 -0.25; 0 0 0 1; 1 1 1"
				Radius = 0.3
				Height = 1.2000000000000002
			}
		}
		.component NeoAxis.Component_MeshInSpace
		{
			Name = Mesh In Space
			CanBeSelected = False
			Transform
			{
				GetByReference = "this:$Transform Offset\\Result"
			}
			Mesh
			{
				GetByReference = "Base\\Models\\Human.fbx|$Mesh"
			}
			ReplaceMaterialSelectively
			{
				Count = 0
			}
			SpecialEffects
			{
				Value
				{
					Count = 0
				}
			}
			.component NeoAxis.Component_MeshInSpaceAnimationController
			{
				Name = Mesh In Space Animation Controller
				DisplaySkeleton = True
				.component NeoAxis.Component_CSharpScript
				{
					Name = C# Script
					Code = "public void MeshInSpaceAnimationController_CalculateBoneTransforms(NeoAxis.Component_MeshInSpaceAnimationController sender, NeoAxis.Component_SkeletonAnimationTrack.CalculateBoneTransformsItem[] result)\r\n{\r\n\t//to enable this event handler in the editor change \"When Enable\" property to \"Simulation | Instance | Editor\".\r\n\t//component: Character/Mesh In Space/C# Script/Event Handler CalculateBoneTransforms.\r\n\t\r\n\tvar boneIndex = sender.GetBoneIndex(\"mixamorig:Spine1\");\r\n\tif(boneIndex != -1)\r\n\t{\r\n\t\tref var item = ref result[boneIndex];\r\n\r\n\t\t//calculate bone offset\r\n\t\tvar angle = new Degree(60) * Math.Sin(Time.Current); \r\n\t\tvar offset = Matrix3F.FromRotateByY((float)angle.InRadians()).ToQuaternion();\r\n\t\t\r\n\t\t//update the bone\r\n\t\titem.Rotation *= offset;\r\n\t}\t\r\n}\r\n"
					Exit
					{
					}
					__parameter_Result
					{
					}
					.component NeoAxis.Component_EventHandler
					{
						Name = Event Handler CalculateBoneTransforms
						WhenEnable = Editor, Simulation, Instance
						Event
						{
							GetByReference = "this:..\\..\\event:CalculateBoneTransforms"
						}
						HandlerMethod
						{
							GetByReference = "this:..\\method:MeshInSpaceAnimationController_CalculateBoneTransforms(NeoAxis.Component_MeshInSpaceAnimationController,NeoAxis.Component_SkeletonAnimationTrack.CalculateBoneTransformsItem[])"
						}
						HandlerFlow
						{
						}
					}
				}
			}
			.component NeoAxis.Component_TransformOffset
			{
				Name = Transform Offset
				PositionOffset = 0 0 -1.15
				Source
				{
					GetByReference = "this:..\\..\\$Collision Body\\Transform"
				}
			}
		}
		.component NeoAxis.Component_CharacterInputProcessing
		{
			Name = Character Input Processing
		}
		.component NeoAxis.Component_CharacterAI
		{
			Name = Character AI
		}
	}
}
