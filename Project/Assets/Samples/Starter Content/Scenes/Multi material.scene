// Made with NeoAxis Engine 2024.1.

.component NeoAxis.Scene
{
	EditorDocumentConfiguration = "\xfeff<?xml version=\"1.0\" encoding=\"utf-16\"?><KD V=\"1\"><DGD /><DM N=\"DockingManager\" C=\"2\"><DW N=\"DockingWorkspace\" O=\"0\" S=\"1144, 842\"><KW V=\"1\" A=\"86F4BE7C88194BC3E6823986EF278CF6\"><CGD /><WS UN=\"4A87E34386084E14BC81ED10FBED4D99\" S=\"T,0,50:T,0,50\" D=\"Horizontal\"><WS UN=\"1FDE5F7D67FC49055FACFC5E977F204D\" S=\"T,0,50:T,0,50\" D=\"Vertical\"><WC UN=\"D8003A824C484FB4B6913E7046F9C6BD\" S=\"T,0,50:T,0,532\" NM=\"BarTabGroup\" AR=\"True\" SP=\"86F4BE7C88194BC3E6823986EF278CF6\"><KP UN=\"86F4BE7C88194BC3E6823986EF278CF6\" S=\"False\"><CPD ObjPath=\"\" /></KP></WC><WS UN=\"F201D64518C5464248A5460E8D3C1361\" S=\"T,0,50:T,0,305\" D=\"Horizontal\"><WC UN=\"770249101E6041D38BA5391371EAA1ED\" S=\"T,0,50:T,0,50\" NM=\"BarTabGroup\" AR=\"True\" SP=\"59AFFE97B28C4D4606B4890A2396B908\"><KP UN=\"59AFFE97B28C4D4606B4890A2396B908\" S=\"False\"><CPD ObjPath=\"$Multi Material\\$Shader graph\" /></KP></WC><WC UN=\"BB6C43AD2795490743B25FCBBCF6B4CA\" S=\"T,0,50:T,0,50\" NM=\"BarTabGroup\" AR=\"True\" SP=\"24A40D4A01FB4D7B68871E89F63A7620\"><KP UN=\"24A40D4A01FB4D7B68871E89F63A7620\" S=\"False\"><CPD ObjPath=\"$Multi Material\\$Shader graph\\$Node Shader 1\\$Shader\" /></KP></WC></WS></WS></WS></KW></DW><DF N=\"DockingFloating\" C=\"0\"></DF></DM></KD>"
	RenderingPipeline
	{
		GetByReference = "root:$Rendering Pipeline"
	}
	CameraEditor
	{
		GetByReference = "this:$Camera Editor"
	}
	CameraEditor2D
	{
		GetByReference = "this:$Camera Editor 2D"
	}
	.component NeoAxis.Camera
	{
		Name = Camera Editor
		Visible = False
		Transform = "2.53951710328776 -2.18467435789116 2.39272687480143; -0.171492711121812 0.170499054479757 0.688110255873635 0.684123233208111; 1 1 1"
	}
	.component NeoAxis.Camera
	{
		Name = Camera Editor 2D
		Visible = False
		Transform = "2.64918580053222 3.02745193504869 10; -0.502493739596367 0.497493760429674 0.497493760429674 0.502493739596367; 1 1 1"
		Projection = Orthographic
		Height = 16.8586419336498
		FixedUp = 0 1 0
		FarClipPlane = 100
	}
	.component NeoAxis.Light
	{
		Name = Ambient Light
		Transform = "18.5822734231225 -5.39737456891382 0.8606866051066; 0.177025544047126 0 0 0.98420625722194; 1 1 1"
		Type = Ambient
		Brightness = 60000
	}
	.component NeoAxis.Light
	{
		Name = Directional Light
		Transform = "23.4737008768449 -15.0814890020227 22.8055842838911; -0.48553441582008 -0.67324283509012 0.472744885192886 -0.295825437679109; 1 1 1"
		Type = Directional
		Brightness = 150000
		AttenuationFar = 100
		AttenuationPower = 1.5
		SpotlightInnerAngle = 80
		SpotlightOuterAngle = 91.429
	}
	.component NeoAxis.RenderingPipeline_Basic
	{
		Name = Rendering Pipeline
		.component NeoAxis.Component
		{
			Name = Background Effects
		}
		.component NeoAxis.Component
		{
			Name = Scene Effects
			.component NeoAxis.RenderingEffect_AmbientOcclusion
			{
				Name = Ambient Occlusion
			}
			.component NeoAxis.RenderingEffect_LensEffects
			{
				Name = Lens Effects
			}
			.component NeoAxis.RenderingEffect_ToneMapping
			{
				Name = Tone Mapping
				Intensity = 0.5
			}
			.component NeoAxis.RenderingEffect_ToLDR
			{
				Name = To LDR
			}
			.component NeoAxis.RenderingEffect_Antialiasing
			{
				Name = Antialiasing
			}
			.component NeoAxis.RenderingEffect_ResolutionUpscale
			{
				Name = Resolution Upscale
			}
			.component NeoAxis.RenderingEffect_Sharpen
			{
				Name = Sharpen
			}
			.component NeoAxis.RenderingEffect_MotionBlur
			{
				Name = Motion Blur
			}
		}
		.component NeoAxis.Component
		{
			Name = Final Image Effects
		}
	}
	.component NeoAxis.GameMode
	{
		Name = Game Mode
		CutsceneStarted = False
		CutsceneGuiFadingFactor = 0
		CutsceneGuiFadingSpeed = 0
		ScreenFadingCurrentColor = 0 0 0 0
		ScreenFadingTargetColor = 0 0 0 0
		ScreenFadingSpeed = 0
	}
	.component NeoAxis.NetworkLogic
	{
		Name = Network Logic
	}
	.component NeoAxis.MeshInSpace
	{
		Name = Ground
		CanBeSelected = False
		Transform = "0 0 0; 0 0 0 1; 1 1 1"
		Mesh
		{
			GetByReference = "this:$Mesh"
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.Mesh
		{
			Name = Mesh
			.component NeoAxis.MeshGeometry_Plane
			{
				Name = Mesh Geometry
				Dimensions = 100 100
				UVTilesPerUnit = 0.25 0.25
			}
		}
		.component NeoAxis.RigidBody
		{
			Name = Collision Body
			Transform
			{
				GetByReference = "this:..\\Transform"
			}
			.component NeoAxis.CollisionShape_Mesh
			{
				Mesh
				{
					GetByReference = "this:..\\..\\Mesh"
				}
				Vertices
				{
				}
				Indices
				{
				}
			}
		}
	}
	.component NeoAxis.MeshInSpace
	{
		Name = Box
		Transform = "2.45988186075646 1.06972104117247 0.990433325242991; 0 0 -0.246591970609467 0.969119394105256; 2 2 2"
		Mesh
		{
			GetByReference = "this:$Mesh"
		}
		ReplaceMaterial
		{
			GetByReference = "this:..\\$Multi Material"
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.Mesh
		{
			Name = Mesh
			.component NeoAxis.MeshGeometry_Box
			{
				Name = Mesh Geometry
			}
		}
	}
	.component NeoAxis.GroupOfObjects
	{
		Name = Group Of Objects
		BaseObjects
		{
			Count = 1
			0 "NeoAxis.Reference<NeoAxis.Component>"
			{
				GetByReference = "root:$Ground"
			}
		}
	}
	.component NeoAxis.MultiMaterial
	{
		Name = Multi Material
		Materials
		{
			Count = 2
			0 "NeoAxis.Reference<NeoAxis.Material>"
			{
				GetByReference = "Content\\Materials\\Basic Library\\Brick\\Yellow Brick.material"
			}
			1 "NeoAxis.Reference<NeoAxis.Material>"
			{
				GetByReference = "Base\\Components\\Particle system default.material"
			}
		}
		MaterialIndex
		{
			GetByReference = "this:$Shader graph\\$Node Shader 1\\$Shader\\__parameter_ReturnValue"
		}
		.component NeoAxis.FlowGraph
		{
			Name = Shader graph
			EditorScrollPosition = 0.424836168077457 -4.50793604244556
			EditorZoomIndex = 5
			Specialization
			{
				GetByReference = NeoAxis.FlowGraphSpecialization_Shader|Instance
			}
			.component NeoAxis.FlowGraphNode
			{
				Name = Node Multi Material
				Position = 10 -6
				ControlledObject
				{
					GetByReference = "this:..\\.."
				}
			}
			.component NeoAxis.FlowGraphNode
			{
				Name = Node Shader 1
				Position = -5 -8
				ControlledObject
				{
					GetByReference = "this:$Shader"
				}
				.component NeoAxis.ShaderScript
				{
					Name = Shader
					Code = "public int Method(vec2 texCoord0, vec4 starColor)\r\n{\r\n\treturn starColor.a > 0.5 ? 1 : 0;\r\n\r\n\t//float v = (texCoord0.x + u_engineTime) % 4.0;\r\n\t//return v > 2.0 ? 1 : 0;\r\n}\r\n"
					__parameter_TexCoord0
					{
						GetByReference = "this:..\\..\\$Node Invoke Member 1\\$Invoke Member\\__value_Value"
					}
					__parameter_StarColor
					{
						GetByReference = "this:..\\..\\$Node Texture Sample 1\\$Texture Sample\\RGBA"
					}
				}
			}
			.component NeoAxis.FlowGraphNode
			{
				Name = Node Invoke Member 1
				Position = -20 -11
				ControlledObject
				{
					GetByReference = "this:$Invoke Member"
				}
				.component NeoAxis.InvokeMember
				{
					Name = Invoke Member
					Member
					{
						GetByReference = "NeoAxis.ShaderConstants|property:TexCoord0"
					}
					Exit
					{
					}
				}
			}
			.component NeoAxis.FlowGraphNode
			{
				Name = Node Texture Sample 1
				Position = -20 -7
				ControlledObject
				{
					GetByReference = "this:$Texture Sample"
				}
				.component NeoAxis.ShaderTextureSample
				{
					Name = Texture Sample
					Location2 = 0 0
					Location3 = 0 0 0
					Texture
					{
						GetByReference = "Base\\Images\\Star.png"
					}
				}
			}
		}
	}
	.component NeoAxis.Text2D
	{
		Name = Text 2D
		Transform = "2.4945874165796 -1.91020034491147 1.98510001914182; 0 0 0 1; 1 1 1"
		Text = You can make a MultiMaterial which referenced to several materials. Next can manage Material Index from the shader graph
	}
}
