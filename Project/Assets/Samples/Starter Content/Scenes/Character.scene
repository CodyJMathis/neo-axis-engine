// Made with NeoAxis Engine 2023.1.

.component NeoAxis.Scene
{
	EditorDocumentConfiguration = "\xfeff<?xml version=\"1.0\" encoding=\"utf-16\"?><KD V=\"1\"><DGD /><DM N=\"DockingManager\" C=\"2\"><DW N=\"DockingWorkspace\" O=\"0\" S=\"1145, 842\"><KW V=\"1\" A=\"2CABB93EFA594714F0AE454C73589B95\"><CGD /><WS UN=\"4A87E34386084E14BC81ED10FBED4D99\" S=\"T,0,50:T,0,50\" D=\"Horizontal\"><WC UN=\"3380822B186E41A3B0AF1BCE3A2E7635\" S=\"T,0,50:T,0,50\" NM=\"BarTabGroup\" AR=\"True\" SP=\"2CABB93EFA594714F0AE454C73589B95\"><KP UN=\"2CABB93EFA594714F0AE454C73589B95\" S=\"False\"><CPD ObjPath=\"\" /></KP><KP UN=\"2FC76A6B8D48421BCAA3FD59DD0F7CB3\" S=\"False\"><CPD ObjPath=\"$Button\\$$n1$C# Script\" /></KP><KP UN=\"BF7F219544234EEACA946AE1342D9CB4\" S=\"False\"><CPD ObjPath=\"$Regulator Switch\\$$n1$C# Script\" /></KP></WC></WS></KW></DW><DF N=\"DockingFloating\" C=\"0\"></DF></DM></KD>"
	RenderingPipeline
	{
		GetByReference = "root:$Rendering Pipeline"
	}
	CameraEditor
	{
		GetByReference = "this:$Camera Editor"
	}
	.component NeoAxis.Camera
	{
		Name = Camera Editor
		Visible = False
		Transform = "-2.40843344578772 -5.47746553644326 3.57630789218761; -0.110137188171826 0.16630327582822 0.541062323754376 0.81698505619376; 1 1 1"
	}
	.component NeoAxis.Light
	{
		Name = Ambient Light
		Transform = "18.5822734231225 -5.39737456891382 0.8606866051066; 0.177025544047126 0 0 0.98420625722194; 1 1 1"
		Type = Ambient
		Brightness = 40000
	}
	.component NeoAxis.Light
	{
		Name = Directional Light
		Transform = "23.4737008768449 -15.0814890020227 22.8055842838911; -0.48553441582008 -0.67324283509012 0.472744885192886 -0.295825437679109; 1 1 1"
		Type = Directional
		Brightness = 130000
		AttenuationFar = 100
		AttenuationPower = 1.5
		SpotlightInnerAngle = 80
		SpotlightOuterAngle = 91.429
	}
	.component NeoAxis.RenderingPipeline_Basic
	{
		Name = Rendering Pipeline
		ShadowFarDistance = 60
		ShadowIntensity = 0.75
		.component NeoAxis.Component
		{
			Name = Background Effects
		}
		.component NeoAxis.Component
		{
			Name = Scene Effects
			.component NeoAxis.RenderingEffect_AmbientOcclusion
			{
				Name = Ambient Occlusion
			}
			.component NeoAxis.RenderingEffect_MotionBlur
			{
				Name = Motion Blur
			}
			.component NeoAxis.RenderingEffect_Bloom
			{
				Enabled = False
				Name = Bloom
			}
			.component NeoAxis.RenderingEffect_LensEffects
			{
				Name = Lens Effects
			}
			.component NeoAxis.RenderingEffect_ToneMapping
			{
				Name = Tone Mapping
				Intensity = 0.5
			}
			.component NeoAxis.RenderingEffect_ToLDR
			{
				Name = To LDR
			}
			.component NeoAxis.RenderingEffect_Antialiasing
			{
				Name = Antialiasing
			}
			.component NeoAxis.RenderingEffect_ResolutionUpscale
			{
				Name = Resolution Upscale
			}
			.component NeoAxis.RenderingEffect_Sharpen
			{
				Name = Sharpen
			}
			.component NeoAxis.RenderingEffect_Outline
			{
				Name = Outline
			}
		}
		.component NeoAxis.Component
		{
			Name = Final Image Effects
		}
	}
	.component NeoAxis.GameMode
	{
		Name = Game Mode
		UseBuiltInCamera = FirstPerson
		ThirdPersonCameraHorizontalAngle = -137.2506042371204
		CutsceneStarted = False
		CutsceneGuiFadingFactor = 0
		CutsceneGuiFadingSpeed = 0
		ScreenFadingCurrentColor = 0 0 0 0
		ScreenFadingTargetColor = 0 0 0 0
		ScreenFadingSpeed = 0
		ObjectControlledByPlayer
		{
			GetByReference = "root:$Character 2"
		}
	}
	.component NeoAxis.NetworkLogic
	{
		Name = Network Logic
	}
	.component NeoAxis.SpawnPoint
	{
		Name = Spawn Point
		Transform = "-4.48731908441571 -1.09364035505468 1.15; 0 0 0 1; 1 1 1"
	}
	.component NeoAxis.Light
	{
		Enabled = False
		Name = Light 2
		Transform = "-16.276133519817 -13.7764744895929 22.8055842838911; -0.800753779408636 -0.218616030310482 0.553641801455134 0.066941554624803; 1 1 1"
		Type = Spotlight
		AttenuationFar = 100
		AttenuationPower = 1.5
		SpotlightInnerAngle = 80
		SpotlightOuterAngle = 91.429
	}
	.component NeoAxis.MeshInSpace
	{
		Name = Ground
		CanBeSelected = False
		Transform = "0 0 0; 0 0 0 1; 1 1 1"
		Mesh
		{
			GetByReference = "this:$Mesh"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.Mesh
		{
			Name = Mesh
			.component NeoAxis.MeshGeometry_Plane
			{
				Name = Mesh Geometry
				Dimensions = 100 100
				UVTilesPerUnit = 0.25 0.25
			}
		}
		.component NeoAxis.RigidBody
		{
			Name = Collision Body
			Transform
			{
				GetByReference = "this:..\\Transform"
			}
			.component NeoAxis.CollisionShape_Mesh
			{
				Mesh
				{
					GetByReference = "this:..\\..\\Mesh"
				}
				Vertices
				{
				}
				Indices
				{
				}
			}
		}
	}
	.component NeoAxis.GroupOfObjects
	{
		Name = Group Of Objects
		BaseObjects
		{
			Count = 1
			0 "NeoAxis.Reference<NeoAxis.Component>"
			{
				GetByReference = "root:$Ground"
			}
		}
	}
	.component NeoAxis.MeshInSpace
	{
		Name = Box 7
		Color = 0.4630196 0.336 1
		Transform
		{
			GetByReference = "this:$Collision Body\\Transform"
		}
		Mesh
		{
			GetByReference = "this:$Mesh"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.Mesh
		{
			Name = Mesh
			.component NeoAxis.MeshGeometry_Box
			{
				Name = Mesh Geometry
			}
		}
		.component NeoAxis.RigidBody
		{
			Name = Collision Body
			Transform = "-7.72071999507779 2.80954466036117 0.500258976181139; 0 0 0 1; 1 1 1"
			MotionType = Dynamic
			Mass = 100
			.component NeoAxis.CollisionShape_Box
			{
			}
		}
	}
	.component NeoAxis.MeshInSpace
	{
		Name = Box 25
		Color = 0.4630196 0.336 1
		Transform
		{
			GetByReference = "this:$Collision Body\\Transform"
		}
		Mesh
		{
			GetByReference = "this:$Mesh"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.Mesh
		{
			Name = Mesh
			.component NeoAxis.MeshGeometry_Box
			{
				Name = Mesh Geometry
			}
		}
		.component NeoAxis.RigidBody
		{
			Name = Collision Body
			Transform = "3.11775807364731 -2.48048477462376 1.08406798176852; 0 0 0 1; 1 2.0016699294486 2.18757967268553"
			.component NeoAxis.CollisionShape_Box
			{
			}
		}
	}
	.component NeoAxis.MeshInSpace
	{
		Name = Box 8
		Color = 0.4630196 0.336 1
		Transform
		{
			GetByReference = "this:$Collision Body\\Transform"
		}
		Mesh
		{
			GetByReference = "this:$Mesh"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.Mesh
		{
			Name = Mesh
			.component NeoAxis.MeshGeometry_Box
			{
				Name = Mesh Geometry
			}
		}
		.component NeoAxis.RigidBody
		{
			Name = Collision Body
			Transform = "-7.72071999507779 2.80954466036117 1.50044636176216; 0 0 0 1; 1 1 1"
			MotionType = Dynamic
			Mass = 100
			.component NeoAxis.CollisionShape_Box
			{
			}
		}
	}
	.component NeoAxis.MeshInSpace
	{
		Name = Box 9
		Color = 0.4630196 0.336 1
		Transform
		{
			GetByReference = "this:$Collision Body\\Transform"
		}
		Mesh
		{
			GetByReference = "this:$Mesh"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.Mesh
		{
			Name = Mesh
			.component NeoAxis.MeshGeometry
			{
				Name = Mesh Geometry
				VertexStructure
				{
					Value
					{
						Length = 5
						0
						{
							Offset = 0
							Type = Float3
							Semantic = Position
						}
						1
						{
							Offset = 12
							Type = Float3
							Semantic = Normal
						}
						2
						{
							Offset = 24
							Type = Float4
							Semantic = Tangent
						}
						3
						{
							Offset = 40
							Type = Float4
							Semantic = Color0
						}
						4
						{
							Offset = 56
							Type = Float2
							Semantic = TextureCoordinate0
						}
					}
				}
				Vertices
				{
					Value
					{
						Length = 2304
						.elements = "UEsDBBQAAAAIAJu7UVY+AW2l9wAAAAAJAAAEAAAAZmlsZaWVMQ7CMAxFfYJunMcLF0FiRWyIjXACFs7CSDgMx0AqJHWbOAXV31iK0kp5iv3znXTbRyQiXl0vd6KQvlMEmeQ/zYH1GKIT/jMizgcWPuL8MH7whPJN/Ua+1I/zEucnj/r1/Ymb+nkp/5HfHY6M89P+EedV/i1PKN/Ub+RL/Tj/zT/j2po17e/g1fll/XBe6+/htf/R+gvv1U/fH0TlDOteWjw/6T+Un/TL/YPxEg2vPWfnK/0Afq6fndf6Fb5ev7z/PH8rr/3v4yf93Pzcv0j97fvn1y/5Z9Pdsodf6732iPH9wXiVf+5/nNfvp4ev7y+8/v/1ewNQSwECFAAUAAAACACbu1FWPgFtpfcAAAAACQAABAAAAAAAAAAAAAAAAAAAAAAAZmlsZVBLBQYAAAAAAQABADIAAAAZAQAAAAA="
						.elementsZip = True
					}
				}
				Indices
				{
					Value
					{
						Length = 36
						.elements = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35
					}
				}
			}
			Structure
			{
				Edges = 0 1 0 4 4 7 1 7 2 3 2 6 5 6 3 5 4 5 6 7 1 2 0 3
				Faces = 6 6 1 0 0 0 0 1 4 0 2 4 0 3 7 0 4 1 0 5 0 6 3 0 6 2 0 7 6 0 8 6 0 9 5 0 10 3 0 11 0 6 4 0 12 5 0 13 6 0 14 6 0 15 7 0 16 4 0 17 0 6 0 0 18 1 0 19 2 0 20 2 0 21 3 0 22 0 0 23 0 6 0 0 24 3 0 25 5 0 26 5 0 27 4 0 28 0 0 29 0 6 2 0 30 1 0 31 7 0 32 7 0 33 6 0 34 2 0 35 0
			}
		}
		.component NeoAxis.RigidBody
		{
			Name = Collision Body
			Transform = "0.897675142633851 1.61396385273818 0.443225798676665; -0.00000006684573065 -0.00000001248069023 -0.00011054262637946 0.999999993890161; 0.806451616392051 0.977837263880059 0.806451616392051"
			MotionType = Dynamic
			Mass = 100
			.component NeoAxis.CollisionShape_Mesh
			{
				ShapeType = Convex
				Mesh
				{
					GetByReference = "this:..\\..\\Mesh"
				}
				Vertices
				{
				}
				Indices
				{
				}
			}
		}
	}
	.component NeoAxis.MeshInSpace
	{
		Name = Box 22
		Color = 0.4630196 0.336 1
		Transform
		{
			GetByReference = "this:$Collision Body\\Transform"
		}
		Mesh
		{
			GetByReference = "this:$Mesh"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.Mesh
		{
			Name = Mesh
			.component NeoAxis.MeshGeometry_Box
			{
				Name = Mesh Geometry
			}
		}
		.component NeoAxis.RigidBody
		{
			Name = Collision Body
			Transform = "3.0003445037525 1.63489000484377 0.619999956205766; -0.00000006364757779 0.00000001507380429 -0.00230093803216596 0.99999735283858; 1.23999999463558 1.23999999463558 1.23999999463558"
			MotionType = Dynamic
			Mass = 150
			.component NeoAxis.CollisionShape_Box
			{
			}
		}
	}
	.component NeoAxis.MeshInSpace
	{
		Name = Box 10
		Color = 0.4630196 0.336 1
		Transform
		{
			GetByReference = "this:$Collision Body\\Transform"
		}
		Mesh
		{
			GetByReference = "this:$Mesh"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.Mesh
		{
			Name = Mesh
			.component NeoAxis.MeshGeometry_Box
			{
				Name = Mesh Geometry
			}
		}
		.component NeoAxis.RigidBody
		{
			Name = Collision Body
			Transform = "4.481496903488 1.61372184453973 0.841590496607235; 0 0 0 1; 1.67999998480082 1.67999998480082 1.67999998480082"
			MotionType = Dynamic
			Mass = 200
			.component NeoAxis.CollisionShape_Box
			{
			}
		}
	}
	.component NeoAxis.MeshInSpace
	{
		Name = Box 11
		Color = 0.4630196 0.336 1
		Transform
		{
			GetByReference = "this:$Collision Body\\Transform"
		}
		Mesh
		{
			GetByReference = "this:$Mesh"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.Mesh
		{
			Name = Mesh
			.component NeoAxis.MeshGeometry_Box
			{
				Name = Mesh Geometry
			}
		}
		.component NeoAxis.RigidBody
		{
			Name = Collision Body
			Transform = "8.14948135271425 1.61411769186018 0.839999960740027; -0.00000003048925111 -0.00000000499975093 -0.00008950569062537 0.999999995994365; 1.67999998480082 1.67999998480082 1.67999998480082"
			MotionType = Dynamic
			Mass = 200
			.component NeoAxis.CollisionShape_Box
			{
			}
		}
	}
	.component NeoAxis.MeshInSpace
	{
		Name = Box 23
		Color = 0.4630196 0.336 1
		Transform
		{
			GetByReference = "this:$Collision Body\\Transform"
		}
		Mesh
		{
			GetByReference = "this:$Mesh"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.Mesh
		{
			Name = Mesh
			.component NeoAxis.MeshGeometry_Box
			{
				Name = Mesh Geometry
			}
		}
		.component NeoAxis.RigidBody
		{
			Name = Collision Body
			Transform = "8.83020283526341 1.61371979821912 1.76723867315789; 0.00000001338989491 0.00010743822679809 0.00000041367072735 0.999999994228428; 7.78668187419802 1.1459146823556 0.172804437534095"
			MotionType = Dynamic
			Mass = 200
			MaterialFriction = 1
			.component NeoAxis.CollisionShape_Box
			{
			}
		}
	}
	.component NeoAxis.MeshInSpace
	{
		Name = Box 24
		Color = 0.4630196 0.336 1
		Transform
		{
			GetByReference = "this:$Collision Body\\Transform"
		}
		Mesh
		{
			GetByReference = "this:$Mesh"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.Mesh
		{
			Name = Mesh
			.component NeoAxis.MeshGeometry_Box
			{
				Name = Mesh Geometry
			}
		}
		.component NeoAxis.RigidBody
		{
			Name = Collision Body
			Transform = "13.4106429197706 4.18141890699839 1.6175324206579; -0.0304433825172787 -0.0304494474096007 -0.706213635310387 0.706688285536873; 3.92567889578284 1.1459146823556 0.172804437534095"
			MotionType = Dynamic
			Mass = 200
			MaterialFriction = 1
			.component NeoAxis.CollisionShape_Box
			{
			}
		}
	}
	.component NeoAxis.MeshInSpace
	{
		Name = Box 12
		Color = 0.4630196 0.336 1
		Transform
		{
			GetByReference = "this:$Collision Body\\Transform"
		}
		Mesh
		{
			GetByReference = "this:$Mesh"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.Mesh
		{
			Name = Mesh
			.component NeoAxis.MeshGeometry_Box
			{
				Name = Mesh Geometry
			}
		}
		.component NeoAxis.RigidBody
		{
			Name = Collision Body
			Transform = "13.3360265795182 1.6136782927451 0.839999936693335; 0.00000001660090904 0.00000002874597023 -0.00000126768802091 0.999999999999196; 1.67999998480082 1.67999998480082 1.67999998480082"
			MotionType = Dynamic
			Mass = 200
			.component NeoAxis.CollisionShape_Box
			{
			}
		}
	}
	.component NeoAxis.MeshInSpace
	{
		Name = Box 3
		Color = 0.4630196 0.336 1
		Transform
		{
			GetByReference = "this:$Collision Body\\Transform"
		}
		Mesh
		{
			GetByReference = "this:$Mesh"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.Mesh
		{
			Name = Mesh
			.component NeoAxis.MeshGeometry_Box
			{
				Name = Mesh Geometry
			}
		}
		.component NeoAxis.RigidBody
		{
			Name = Collision Body
			Transform = "-4.69654260930846 8.1373296321815 -0.099649280661982; 0 0 0 1; 5.1301283725604 4.36202726832624 1"
			.component NeoAxis.CollisionShape_Mesh
			{
				Mesh
				{
					GetByReference = "this:..\\..\\Mesh"
				}
				Vertices
				{
				}
				Indices
				{
				}
			}
		}
	}
	.component NeoAxis.MeshInSpace
	{
		Name = Box 13
		Color = 0.4630196 0.336 1
		Transform
		{
			GetByReference = "this:$Collision Body\\Transform"
		}
		Mesh
		{
			GetByReference = "this:$Mesh"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.Mesh
		{
			Name = Mesh
			.component NeoAxis.MeshGeometry_Box
			{
				Name = Mesh Geometry
			}
		}
		.component NeoAxis.RigidBody
		{
			Name = Collision Body
			Transform = "-0.483968639742536 15.3649721995469 -0.09132485238499; 0.0871557427476582 0 0 0.996194698091746; 5.1301283725604 4.36202726832624 1"
			.component NeoAxis.CollisionShape_Mesh
			{
				Mesh
				{
					GetByReference = "this:..\\..\\Mesh"
				}
				Vertices
				{
				}
				Indices
				{
				}
			}
		}
	}
	.component NeoAxis.MeshInSpace
	{
		Name = Box 4
		Color = 0.4630196 0.336 1
		Transform
		{
			GetByReference = "this:$Collision Body\\Transform"
		}
		Mesh
		{
			GetByReference = "this:$Mesh"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.Mesh
		{
			Name = Mesh
			.component NeoAxis.MeshGeometry_Box
			{
				Name = Mesh Geometry
			}
		}
		.component NeoAxis.RigidBody
		{
			Name = Collision Body
			Transform = "4.54076709820946 8.14881603743874 0.15157293643731; 0 0 0 1; 5.1301283725604 4.36202726832624 1"
			.component NeoAxis.CollisionShape_Mesh
			{
				Mesh
				{
					GetByReference = "this:..\\..\\Mesh"
				}
				Vertices
				{
				}
				Indices
				{
				}
			}
		}
	}
	.component NeoAxis.MeshInSpace
	{
		Name = Box 21
		Color = 0.4630196 0.336 1
		Transform
		{
			GetByReference = "this:$Collision Body\\Transform"
		}
		Mesh
		{
			GetByReference = "this:$Mesh"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.Mesh
		{
			Name = Mesh
			.component NeoAxis.MeshGeometry_Box
			{
				Name = Mesh Geometry
			}
		}
		.component NeoAxis.RigidBody
		{
			Name = Collision Body
			Transform = "-0.147234593681395 8.19881603743874 -0.0193678224674998; 0 0 0 1; 5.1301283725604 4.36202726832624 1"
			.component NeoAxis.CollisionShape_Mesh
			{
				Mesh
				{
					GetByReference = "this:..\\..\\Mesh"
				}
				Vertices
				{
				}
				Indices
				{
				}
			}
		}
	}
	.component NeoAxis.MeshInSpace
	{
		Name = Box 14
		Color = 0.4630196 0.336 1
		Transform
		{
			GetByReference = "this:$Collision Body\\Transform"
		}
		Mesh
		{
			GetByReference = "this:$Mesh"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.Mesh
		{
			Name = Mesh
			.component NeoAxis.MeshGeometry_Box
			{
				Name = Mesh Geometry
			}
		}
		.component NeoAxis.RigidBody
		{
			Name = Collision Body
			Transform = "4.54076709820946 15.2813222603924 0.151719668810467; 0.17364817766693 0 0 0.984807753012208; 5.1301283725604 4.36202726832624 1"
			.component NeoAxis.CollisionShape_Mesh
			{
				Mesh
				{
					GetByReference = "this:..\\..\\Mesh"
				}
				Vertices
				{
				}
				Indices
				{
				}
			}
		}
	}
	.component NeoAxis.MeshInSpace
	{
		Name = Box 5
		Color = 0.4630196 0.336 1
		Transform
		{
			GetByReference = "this:$Collision Body\\Transform"
		}
		Mesh
		{
			GetByReference = "this:$Mesh"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.Mesh
		{
			Name = Mesh
			.component NeoAxis.MeshGeometry_Box
			{
				Name = Mesh Geometry
			}
		}
		.component NeoAxis.RigidBody
		{
			Name = Collision Body
			Transform = "9.61614009594983 8.19881603743874 0.294472414670486; 0 0 0 1; 5.1301283725604 4.36202726832624 1.37274975303216"
			.component NeoAxis.CollisionShape_Mesh
			{
				Mesh
				{
					GetByReference = "this:..\\..\\Mesh"
				}
				Vertices
				{
				}
				Indices
				{
				}
			}
		}
	}
	.component NeoAxis.MeshInSpace
	{
		Name = Box 15
		Color = 0.4630196 0.336 1
		Transform
		{
			GetByReference = "this:$Collision Body\\Transform"
		}
		Mesh
		{
			GetByReference = "this:$Mesh"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.Mesh
		{
			Name = Mesh
			.component NeoAxis.MeshGeometry_Box
			{
				Name = Mesh Geometry
			}
		}
		.component NeoAxis.RigidBody
		{
			Name = Collision Body
			Transform = "9.61614009594983 15.2324477603659 0.286001254020338; 0.258819045102521 0 0 0.965925826289068; 5.1301283725604 4.36202726832624 1.37274975303216"
			.component NeoAxis.CollisionShape_Mesh
			{
				Mesh
				{
					GetByReference = "this:..\\..\\Mesh"
				}
				Vertices
				{
				}
				Indices
				{
				}
			}
		}
	}
	.component NeoAxis.MeshInSpace
	{
		Name = Box 16
		Color = 0.4630196 0.336 1
		Transform
		{
			GetByReference = "this:$Collision Body\\Transform"
		}
		Mesh
		{
			GetByReference = "this:$Mesh"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.Mesh
		{
			Name = Mesh
			.component NeoAxis.MeshGeometry_Box
			{
				Name = Mesh Geometry
			}
		}
		.component NeoAxis.RigidBody
		{
			Name = Collision Body
			Transform = "14.642359037804 15.2324477603659 0.286001254020338; 0.342020143325669 0 0 0.939692620785908; 5.1301283725604 4.36202726832624 1.37274975303216"
			.component NeoAxis.CollisionShape_Mesh
			{
				Mesh
				{
					GetByReference = "this:..\\..\\Mesh"
				}
				Vertices
				{
				}
				Indices
				{
				}
			}
		}
	}
	.component NeoAxis.MeshInSpace
	{
		Name = Box 17
		Color = 0.4630196 0.336 1
		Transform
		{
			GetByReference = "this:$Collision Body\\Transform"
		}
		Mesh
		{
			GetByReference = "this:$Mesh"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.Mesh
		{
			Name = Mesh
			.component NeoAxis.MeshGeometry_Box
			{
				Name = Mesh Geometry
			}
		}
		.component NeoAxis.RigidBody
		{
			Name = Collision Body
			Transform = "19.6209049854826 15.2324477603659 0.286001254020338; 0.422618261740699 0 0 0.90630778703665; 5.1301283725604 4.36202726832624 1.37274975303216"
			.component NeoAxis.CollisionShape_Mesh
			{
				Mesh
				{
					GetByReference = "this:..\\..\\Mesh"
				}
				Vertices
				{
				}
				Indices
				{
				}
			}
		}
	}
	.component NeoAxis.MeshInSpace
	{
		Name = Box 18
		Color = 0.4630196 0.336 1
		Transform
		{
			GetByReference = "this:$Collision Body\\Transform"
		}
		Mesh
		{
			GetByReference = "this:$Mesh"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.Mesh
		{
			Name = Mesh
			.component NeoAxis.MeshGeometry_Box
			{
				Name = Mesh Geometry
			}
		}
		.component NeoAxis.RigidBody
		{
			Name = Collision Body
			Transform = "24.4120432879408 15.2324477603659 0.286001254020338; 0.5 0 0 0.866025403784439; 5.1301283725604 4.36202726832624 1.37274975303216"
			.component NeoAxis.CollisionShape_Mesh
			{
				Mesh
				{
					GetByReference = "this:..\\..\\Mesh"
				}
				Vertices
				{
				}
				Indices
				{
				}
			}
		}
	}
	.component NeoAxis.MeshInSpace
	{
		Name = Box 19
		Color = 0.4630196 0.336 1
		Transform
		{
			GetByReference = "this:$Collision Body\\Transform"
		}
		Mesh
		{
			GetByReference = "this:$Mesh"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.Mesh
		{
			Name = Mesh
			.component NeoAxis.MeshGeometry_Box
			{
				Name = Mesh Geometry
			}
		}
		.component NeoAxis.RigidBody
		{
			Name = Collision Body
			Transform = "29.0833948631581 15.2324477603659 0.286001254020338; 0.573576436351046 0 0 0.819152044288992; 5.1301283725604 4.36202726832624 1.37274975303216"
			.component NeoAxis.CollisionShape_Mesh
			{
				Mesh
				{
					GetByReference = "this:..\\..\\Mesh"
				}
				Vertices
				{
				}
				Indices
				{
				}
			}
		}
	}
	.component NeoAxis.MeshInSpace
	{
		Name = Box 20
		Color = 0.4630196 0.336 1
		Transform
		{
			GetByReference = "this:$Collision Body\\Transform"
		}
		Mesh
		{
			GetByReference = "this:$Mesh"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.Mesh
		{
			Name = Mesh
			.component NeoAxis.MeshGeometry_Box
			{
				Name = Mesh Geometry
			}
		}
		.component NeoAxis.RigidBody
		{
			Name = Collision Body
			Transform = "33.716574282156 15.2324477603659 0.286001254020338; 0.642787609686539 0 0 0.766044443118978; 5.1301283725604 4.36202726832624 1.37274975303216"
			.component NeoAxis.CollisionShape_Mesh
			{
				Mesh
				{
					GetByReference = "this:..\\..\\Mesh"
				}
				Vertices
				{
				}
				Indices
				{
				}
			}
		}
	}
	.component NeoAxis.MeshInSpace
	{
		Name = Box 6
		Color = 0.4630196 0.336 1
		Transform
		{
			GetByReference = "this:$Collision Body\\Transform"
		}
		Mesh
		{
			GetByReference = "this:$Mesh"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.Mesh
		{
			Name = Mesh
			.component NeoAxis.MeshGeometry_Box
			{
				Name = Mesh Geometry
			}
		}
		.component NeoAxis.RigidBody
		{
			Name = Collision Body
			Transform = "14.6581307799078 8.19881603743874 0.42848777250208; 0 0 0 1; 5.1301283725604 4.36202726832624 1.87478505854681"
			.component NeoAxis.CollisionShape_Mesh
			{
				Mesh
				{
					GetByReference = "this:..\\..\\Mesh"
				}
				Vertices
				{
				}
				Indices
				{
				}
			}
		}
	}
	.component NeoAxis.MeshInSpace
	{
		Name = Cylinder
		Color = 0.4630196 0.336 1
		Transform
		{
			GetByReference = "this:$Collision Body\\Transform"
		}
		Mesh
		{
			GetByReference = "this:$Mesh"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.Mesh
		{
			Name = Mesh
			.component NeoAxis.MeshGeometry_Cylinder
			{
				Name = Mesh Geometry
			}
		}
		.component NeoAxis.RigidBody
		{
			Name = Collision Body
			Transform = "14.3590850817045 -1.65025402040014 0.500063640065496; 0 0 0 1; 1 1 1"
			.component NeoAxis.CollisionShape_Cylinder
			{
			}
		}
	}
	.component NeoAxis.MeshInSpace
	{
		Name = Cylinder 2
		Color = 0.4630196 0.336 1
		Transform
		{
			GetByReference = "this:$Collision Body\\Transform"
		}
		Mesh
		{
			GetByReference = "this:$Mesh"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.Mesh
		{
			Name = Mesh
			.component NeoAxis.MeshGeometry_Cylinder
			{
				Name = Mesh Geometry
			}
		}
		.component NeoAxis.RigidBody
		{
			Name = Collision Body
			Transform = "11.6742662221924 -3.36978393272952 0.500063640065496; 0 0 0 1; 1 1 1"
			.component NeoAxis.CollisionShape_Cylinder
			{
			}
		}
	}
	.component NeoAxis.Character
	{
		Name = Character
		Transform = "0.632965084713378 -3.78106249089289 0.00000011926564869; 0 0 0.563756048679352 0.825941324234009; 1 1 1"
		Collision = True
		Mesh
		{
			GetByReference = "Content\\Characters\\Default\\Human.fbx|$Mesh"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.MeshInSpaceAnimationController
		{
			Name = Animation Controller
		}
		.component NeoAxis.CharacterInputProcessing
		{
			Name = Character Input Processing
		}
	}
	.component NeoAxis.Character
	{
		Name = Character 3
		Transform = "15.786695407959 7.4742008743822 1.3658803415712; 0 0 -0.997290015220642 0.0735703855752945; 1 1 1"
		Collision = True
		Mesh
		{
			GetByReference = "Content\\Characters\\Default\\Human.fbx|$Mesh"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.MeshInSpaceAnimationController
		{
			Name = Animation Controller
		}
		.component NeoAxis.CharacterInputProcessing
		{
			Name = Character Input Processing
		}
		.component NeoAxis.CharacterAI
		{
			Name = Character AI
			.component NeoAxis.CharacterAITask_MoveToObject
			{
				Name = Move To Object
				DistanceToReach = 1.5
				Target
				{
					GetByReference = "this:..\\..\\..\\$Sci-fi Box"
				}
			}
		}
	}
	.component NeoAxis.Character
	{
		Name = Character 2
		Transform = "-3.59658122421581 -2.03978963605217 0.00000015272833886; 0 0 0.364465594291687 0.931216835975647; 1 1 1"
		Collision = True
		Mesh
		{
			GetByReference = "Content\\Characters\\Default\\Human.fbx|$Mesh"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.MeshInSpaceAnimationController
		{
			Name = Animation Controller
		}
		.component NeoAxis.CharacterInputProcessing
		{
			Name = Character Input Processing
		}
	}
	.component NeoAxis.ButtonInSpace
	{
		Name = Button
		Transform = "2.6 -2.034613134103 1.4; 0 0 -1 0.00000000000000006; 1 1 1"
		Color = 0.6784314 0.6784314 0.6784314
		Activated = True
		Mesh
		{
			GetByReference = "this:$Mesh"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		SpecialEffects
		{
			Value
			{
				Count = 1
				0 NeoAxis.ObjectSpecialRenderingEffect_Outline
				{
				}
			}
		}
		.component NeoAxis.Mesh
		{
			Name = Mesh
			.component NeoAxis.MeshGeometry_Box
			{
				Name = Mesh Geometry
				Dimensions = 0.05 0.3 0.3
				Material
				{
					GetByReference = "Base\\Materials\\White.material"
				}
			}
		}
		.component NeoAxis.MeshInSpace
		{
			Name = Button
			Transform
			{
				GetByReference = "this:$Attach Transform Offset\\Result"
			}
			Mesh
			{
				GetByReference = "this:$Mesh"
			}
			ReplaceMaterialSelectively
			{
				Count = 0
			}
			SpecialEffects
			{
				Value
				{
					Count = 0
				}
			}
			.component NeoAxis.Mesh
			{
				Name = Mesh
				.component NeoAxis.MeshGeometry_Box
				{
					Name = Mesh Geometry
					Dimensions = 0.05 0.15 0.15
					Material
					{
						GetByReference = "Base\\Materials\\White.material"
					}
				}
			}
			.component NeoAxis.TransformOffset
			{
				Name = Attach Transform Offset
				PositionOffset = 0.05 0 0
				Source
				{
					GetByReference = "this:..\\..\\Transform"
				}
			}
		}
		.component NeoAxis.MeshInSpace
		{
			Name = Indicator
			Color = 0 1 0
			Transform
			{
				GetByReference = "this:$Attach Transform Offset\\Result"
			}
			Mesh
			{
				GetByReference = "this:$Mesh"
			}
			ReplaceMaterialSelectively
			{
				Count = 0
			}
			SpecialEffects
			{
				Value
				{
					Count = 0
				}
			}
			.component NeoAxis.Mesh
			{
				Name = Mesh
				.component NeoAxis.MeshGeometry_Cylinder
				{
					Name = Mesh Geometry
					Axis = 0
					Radius = 0.02
					Height = 0.02
					Segments = 16
					Material
					{
						GetByReference = "Base\\Materials\\White.material"
					}
				}
			}
			.component NeoAxis.TransformOffset
			{
				Name = Attach Transform Offset
				PositionOffset = 0.03 0 0.12
				Source
				{
					GetByReference = "this:..\\..\\Transform"
				}
			}
		}
		.component NeoAxis.CSharpScript
		{
			Name = C# Script
			Code = "public void InteractiveObjectButton_UpdateEvent(NeoAxis.Component sender, float delta)\r\n{\r\n\tvar _this = sender as ButtonInSpace;\r\n\tif (_this != null)\r\n\t{\r\n\t\tvar indicator = _this.GetComponent(\"Indicator\") as MeshInSpace;\r\n\t\tif (indicator != null)\r\n\t\t\tindicator.Color = _this.Activated ? new ColorValue(0, 1, 0) : new ColorValue(0.5, 0.5, 0.5);\r\n\r\n\t\tvar buttonOffset = _this.Components.GetByPath(\"Button\\\\Attach Transform Offset\") as TransformOffset;\r\n\t\tif (buttonOffset != null)\r\n\t\t{\r\n\t\t\tvar offsetPushed = 0.01;\r\n\t\t\tvar offsetDefault = 0.05;\r\n\r\n\t\t\tvar coef = 0.0;\r\n\t\t\tif (_this.Clicking && _this.ClickingTotalTime != 0)\r\n\t\t\t{\r\n\t\t\t\tvar timeFactor = MathEx.Saturate(_this.ClickingCurrentTime / _this.ClickingTotalTime);\r\n\r\n\t\t\t\tif(timeFactor < 0.5)\r\n\t\t\t\t\tcoef = timeFactor * 2;\r\n\t\t\t\telse\r\n\t\t\t\t\tcoef = (1.0f - timeFactor) * 2;\r\n\t\t\t}\r\n\r\n\t\t\tvar offset = MathEx.Lerp(offsetDefault, offsetPushed, coef);\r\n\t\t\tbuttonOffset.PositionOffset = new Vector3(offset, 0, 0);\r\n\t\t}\r\n\t}\r\n}"
			__parameter_Delta = 0
			Exit
			{
			}
			.component NeoAxis.EventHandlerComponent
			{
				Name = Event Handler UpdateEvent
				WhenEnable = Editor, Simulation, Instance
				Event
				{
					GetByReference = "this:..\\..\\event:UpdateEvent"
				}
				HandlerMethod
				{
					GetByReference = "this:..\\method:InteractiveObjectButton_UpdateEvent(NeoAxis.Component,System.Single)"
				}
				HandlerFlow
				{
				}
			}
		}
		.component NeoAxis.CSharpScript
		{
			Name = C# Script
			Code = "public void Button_Click(NeoAxis.ButtonInSpace sender)\r\n{\r\n\tvar scene = sender.ParentScene;\r\n\r\n\t// Get object type.\r\n\tvar resourceName = @\"Samples\\Starter Content\\Models\\Sci-fi Box\\Sci-fi Box.objectinspace\";\r\n\tvar boxType = MetadataManager.GetType(resourceName);\r\n\tif(boxType == null)\r\n\t{\r\n\t\tLog.Warning(\"Object type is null.\");\r\n\t\treturn;\r\n\t}\r\n\t//var boxType = MetadataManager.GetType(resourceName);\r\n\t//var resourceName = @\"Samples\\Starter Content\\Scene objects\\Sci-fi Box\\Box type.scene\";\r\n\t//var objectNameInsideResource = \"$Box\";\r\n\t//var boxType = MetadataManager.GetType(resourceName + \"|\" + objectNameInsideResource);\r\n\t\r\n\t// Create the object without enabling.\r\n\tvar box = (MeshInSpace)scene.CreateComponent(boxType, enabled: false);\r\n\t//var obj = scene.CreateComponent<MeshInSpace>(enabled: false);\r\n\r\n\t// Set initial position.\r\n\tvar random = new FastRandom();\r\n\tbox.Transform = new Transform(\r\n\t\tnew Vector3(2 + random.Next(0.0, 4.0), 8 + random.Next(0.0, 4.0), 10 + random.Next(0.0, 4.0)), \r\n\t\tnew Angles(random.Next(360.0), random.Next(360.0), random.Next(360.0)));\r\n\t//box.Transform = new Transform(new Vector3(1, 1, 10), Quaternion.Identity);\r\n\t\r\n\t// Enable the object in the scene.\r\n\tbox.Enabled = true;\r\n\r\n\t//var light = scene.GetComponent(\"Directional Light\") as Light;\r\n\t//if (light != null)\r\n\t//\tlight.Enabled = sender.Activated;\r\n}\r\n"
			Exit
			{
			}
			.component NeoAxis.EventHandlerComponent
			{
				Name = Event Handler Click
				Event
				{
					GetByReference = "this:..\\..\\event:Click"
				}
				HandlerMethod
				{
					GetByReference = "this:..\\method:Button_Click(NeoAxis.ButtonInSpace)"
				}
				HandlerFlow
				{
				}
			}
		}
	}
	.component NeoAxis.RegulatorSwitchInSpace
	{
		Name = Regulator Switch
		Transform = "2.6 -2.94546502987951 1.4; 0 0 -1 0.00000000000000006; 1 1 1"
		Color = 0.6784314 0.6784314 0.6784314
		Mesh
		{
			GetByReference = "this:$Mesh"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.Mesh
		{
			Name = Mesh
			.component NeoAxis.MeshGeometry_Box
			{
				Name = Mesh Geometry
				Dimensions = 0.05 0.3 0.3
				Material
				{
					GetByReference = "Base\\Materials\\White.material"
				}
			}
		}
		.component NeoAxis.MeshInSpace
		{
			Name = Button
			Transform
			{
				GetByReference = "this:$Attach Transform Offset\\Result"
			}
			Mesh
			{
				GetByReference = "this:$Mesh"
			}
			ReplaceMaterialSelectively
			{
				Count = 0
			}
			SpecialEffects
			{
				Value
				{
					Count = 0
				}
			}
			.component NeoAxis.Mesh
			{
				Name = Mesh
				.component NeoAxis.MeshGeometry_Cylinder
				{
					Name = Mesh Geometry
					Axis = 0
					Radius = 0.08
					Height = 0.08
					Material
					{
						GetByReference = "Base\\Materials\\White.material"
					}
				}
			}
			.component NeoAxis.TransformOffset
			{
				Name = Attach Transform Offset
				PositionOffset = 0.05 0 0
				RotationOffset = 0.923879532511287 0 -0 0.38268343236509
				Source
				{
					GetByReference = "this:..\\..\\Transform"
				}
			}
		}
		.component NeoAxis.MeshInSpace
		{
			Name = Indicator Min
			Color = 1 0 0
			Transform
			{
				GetByReference = "this:$Attach Transform Offset\\Result"
			}
			Mesh
			{
				GetByReference = "this:$Mesh"
			}
			ReplaceMaterialSelectively
			{
				Count = 0
			}
			SpecialEffects
			{
				Value
				{
					Count = 0
				}
			}
			.component NeoAxis.Mesh
			{
				Name = Mesh
				.component NeoAxis.MeshGeometry_Cylinder
				{
					Name = Mesh Geometry
					Axis = 0
					Radius = 0.02
					Height = 0.02
					Segments = 16
					Material
					{
						GetByReference = "Base\\Materials\\White.material"
					}
				}
			}
			.component NeoAxis.TransformOffset
			{
				Name = Attach Transform Offset
				PositionOffset = 0.03 -0.11 0.11
				Source
				{
					GetByReference = "this:..\\..\\Transform"
				}
			}
		}
		.component NeoAxis.MeshInSpace
		{
			Name = Indicator Max
			Color = 0.5 0.5 0.5
			Transform
			{
				GetByReference = "this:$Attach Transform Offset\\Result"
			}
			Mesh
			{
				GetByReference = "this:$Mesh"
			}
			ReplaceMaterialSelectively
			{
				Count = 0
			}
			SpecialEffects
			{
				Value
				{
					Count = 0
				}
			}
			.component NeoAxis.Mesh
			{
				Name = Mesh
				.component NeoAxis.MeshGeometry_Cylinder
				{
					Name = Mesh Geometry
					Axis = 0
					Radius = 0.02
					Height = 0.02
					Segments = 16
					Material
					{
						GetByReference = "Base\\Materials\\White.material"
					}
				}
			}
			.component NeoAxis.TransformOffset
			{
				Name = Attach Transform Offset
				PositionOffset = 0.03 0.11 0.11
				Source
				{
					GetByReference = "this:..\\..\\Transform"
				}
			}
		}
		.component NeoAxis.MeshInSpace
		{
			Name = Marker Min
			Color = 1 0 0
			Transform
			{
				GetByReference = "this:$Attach Transform Offset\\Result"
			}
			Mesh
			{
				GetByReference = "this:$Mesh"
			}
			ReplaceMaterialSelectively
			{
				Count = 0
			}
			SpecialEffects
			{
				Value
				{
					Count = 0
				}
			}
			.component NeoAxis.Mesh
			{
				Name = Mesh
				.component NeoAxis.MeshGeometry_Box
				{
					Name = Mesh Geometry
					Dimensions = 0.05 0.14 0.01
					Material
					{
						GetByReference = "Base\\Materials\\White.material"
					}
				}
			}
			.component NeoAxis.TransformOffset
			{
				Name = Attach Transform Offset
				PositionOffset = 0.01 -0.0282842712474619 0.0282842712474619
				RotationOffset = 0.923879532511287 0 -0 0.38268343236509
				Source
				{
					GetByReference = "this:..\\..\\Transform"
				}
			}
		}
		.component NeoAxis.MeshInSpace
		{
			Name = Marker Max
			Color = 0 1 0
			Transform
			{
				GetByReference = "this:$Attach Transform Offset\\Result"
			}
			Mesh
			{
				GetByReference = "this:$Mesh"
			}
			ReplaceMaterialSelectively
			{
				Count = 0
			}
			SpecialEffects
			{
				Value
				{
					Count = 0
				}
			}
			.component NeoAxis.Mesh
			{
				Name = Mesh
				.component NeoAxis.MeshGeometry_Box
				{
					Name = Mesh Geometry
					Dimensions = 0.05 0.14 0.01
					Material
					{
						GetByReference = "Base\\Materials\\White.material"
					}
				}
			}
			.component NeoAxis.TransformOffset
			{
				Name = Attach Transform Offset
				PositionOffset = 0.01 0.0282842712474619 0.0282842712474619
				RotationOffset = 0.38268343236509 0 -0 0.923879532511287
				Source
				{
					GetByReference = "this:..\\..\\Transform"
				}
			}
		}
		.component NeoAxis.MeshInSpace
		{
			Name = Marker Current
			Transform
			{
				GetByReference = "this:$Attach Transform Offset\\Result"
			}
			Mesh
			{
				GetByReference = "this:$Mesh"
			}
			ReplaceMaterialSelectively
			{
				Count = 0
			}
			SpecialEffects
			{
				Value
				{
					Count = 0
				}
			}
			.component NeoAxis.Mesh
			{
				Name = Mesh
				.component NeoAxis.MeshGeometry_Box
				{
					Name = Mesh Geometry
					Dimensions = 0.05 0.14 0.01
					Material
					{
						GetByReference = "Base\\Materials\\White.material"
					}
				}
			}
			.component NeoAxis.TransformOffset
			{
				Name = Attach Transform Offset
				PositionOffset = 0.06 -0.0282842712474619 0.0282842712474619
				RotationOffset = 0.923879532511287 0 -0 0.38268343236509
				Source
				{
					GetByReference = "this:..\\..\\Transform"
				}
			}
		}
		.component NeoAxis.CSharpScript
		{
			Name = C# Script
			Code = "public void InteractiveObjectButton_UpdateEvent(NeoAxis.Component sender, float delta)\r\n{\r\n\tvar _this = sender as RegulatorSwitchInSpace;\r\n\tif (_this != null)\r\n\t{\r\n\t\tvar indicatorMin = _this.GetComponent(\"Indicator Min\") as MeshInSpace;\r\n\t\tif (indicatorMin != null)\r\n\t\t\tindicatorMin.Color = _this.Value.Value <= _this.ValueRange.Value.Minimum ? new ColorValue(1, 0, 0) : new ColorValue(0.5, 0.5, 0.5);\r\n\r\n\t\tvar indicatorMax = _this.GetComponent(\"Indicator Max\") as MeshInSpace;\r\n\t\tif (indicatorMax != null)\r\n\t\t\tindicatorMax.Color = _this.Value.Value >= _this.ValueRange.Value.Maximum ? new ColorValue(0, 1, 0) : new ColorValue(0.5, 0.5, 0.5);\r\n\r\n\t\tvar button = _this.GetComponent(\"Button\");\r\n\t\tif (button != null)\r\n\t\t{\r\n\t\t\tvar offset = button.GetComponent<TransformOffset>();\r\n\t\t\tif (offset != null)\r\n\t\t\t{\r\n\t\t\t\tvar angle = _this.GetValueAngle() - 90;\r\n\t\t\t\toffset.RotationOffset = new Angles(angle, 0, 0).ToQuaternion();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar markerMin = _this.GetComponent(\"Marker Min\");\r\n\t\tif (markerMin != null)\r\n\t\t{\r\n\t\t\tvar offset = markerMin.GetComponent<TransformOffset>();\r\n\t\t\tif (offset != null)\r\n\t\t\t{\r\n\t\t\t\tvar angle = _this.AngleRange.Value.Minimum - 90;\r\n\t\t\t\tvar angleR = MathEx.DegreeToRadian(angle);\r\n\t\t\t\toffset.PositionOffset = new Vector3(0.01, Math.Cos(angleR) * 0.04, Math.Sin(-angleR) * 0.04);\r\n\t\t\t\toffset.RotationOffset = new Angles(angle, 0, 0).ToQuaternion();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar markerMax = _this.GetComponent(\"Marker Max\");\r\n\t\tif (markerMax != null)\r\n\t\t{\r\n\t\t\tvar offset = markerMax.GetComponent<TransformOffset>();\r\n\t\t\tif (offset != null)\r\n\t\t\t{\r\n\t\t\t\tvar angle = _this.AngleRange.Value.Maximum - 90;\r\n\t\t\t\tvar angleR = MathEx.DegreeToRadian(angle);\r\n\t\t\t\toffset.PositionOffset = new Vector3(0.01, Math.Cos(angleR) * 0.04, Math.Sin(-angleR) * 0.04);\r\n\t\t\t\toffset.RotationOffset = new Angles(angle, 0, 0).ToQuaternion();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar markerCurrent = _this.GetComponent(\"Marker Current\");\r\n\t\tif (markerCurrent != null)\r\n\t\t{\r\n\t\t\tvar offset = markerCurrent.GetComponent<TransformOffset>();\r\n\t\t\tif (offset != null)\r\n\t\t\t{\r\n\t\t\t\tvar angle = _this.GetValueAngle() - 90;\r\n\t\t\t\tvar angleR = MathEx.DegreeToRadian(angle);\r\n\t\t\t\toffset.PositionOffset = new Vector3(0.06, Math.Cos(angleR) * 0.04, Math.Sin(-angleR) * 0.04);\r\n\t\t\t\toffset.RotationOffset = new Angles(angle, 0, 0).ToQuaternion();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}"
			__parameter_Delta = 0
			Exit
			{
			}
			.component NeoAxis.EventHandlerComponent
			{
				Name = Event Handler UpdateEvent
				WhenEnable = Editor, Simulation, Instance
				Event
				{
					GetByReference = "this:..\\..\\event:UpdateEvent"
				}
				HandlerMethod
				{
					GetByReference = "this:..\\method:InteractiveObjectButton_UpdateEvent(NeoAxis.Component,System.Single)"
				}
				HandlerFlow
				{
				}
			}
		}
		.component NeoAxis.CSharpScript
		{
			Name = C# Script
			Code = "public void RegulatorSwitch_ValueChanged(NeoAxis.RegulatorSwitchInSpace obj)\r\n{\r\n\tvar scene = obj.ParentScene;\r\n\r\n\t//change the color of the light\r\n\tvar light = scene.GetComponent(\"Directional Light\") as Light;\r\n\tif (light != null)\r\n\t\tlight.Color = new ColorValue(1.0, 1.0, 1.0 - obj.Value);\r\n}\r\n"
			Exit
			{
			}
			.component NeoAxis.EventHandlerComponent
			{
				Name = Event Handler ValueChanged
				Event
				{
					GetByReference = "this:..\\..\\event:ValueChanged"
				}
				HandlerMethod
				{
					GetByReference = "this:..\\method:RegulatorSwitch_ValueChanged(NeoAxis.RegulatorSwitchInSpace)"
				}
				HandlerFlow
				{
				}
			}
		}
	}
	.component NeoAxis.Weapon
	{
		Name = Weapon
		Transform = "-4.70278045372228 2.09502916200246 0.0324486317198822; -0.707106781186548 0 0 0.707106781186548; 1 1 1"
		Mesh
		{
			GetByReference = "Content\\Weapons\\Default\\scene.gltf|$Mesh"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
	}
	.component "Samples\\Starter Content\\Models\\Sci-fi Box\\Sci-fi Box.objectinspace"
	{
		Name = Sci-fi Box
		Transform = "-5.73488851923461 7.87123211702811 0.900349974274148; 0.00000017830917898 0.00000056350592104 -0.00000058714186935 1; 1 1 1"
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
	}
	.component "Samples\\Starter Content\\Models\\Sci-fi Box\\Sci-fi Box.objectinspace"
	{
		Name = Sci-fi Box 2
		Transform = "-3.98058455404844 13.2386638439516 0.499999424017937; -0.00000023778984826 0.00000014240963253 0.127696394920349 0.991813361644745; 1 1 1"
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
	}
	.component NeoAxis.MeshInSpace
	{
		Name = Sphere
		Color = 0.5803922 0 0.827451
		Transform
		{
			GetByReference = "this:$Collision Body\\Transform"
		}
		Mesh
		{
			GetByReference = "this:$Mesh"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.Mesh
		{
			Name = Mesh
			.component NeoAxis.MeshGeometry_Sphere
			{
				Name = Mesh Geometry
			}
		}
		.component NeoAxis.RigidBody
		{
			Name = Collision Body
			Transform = "-7.70583540184843 0.747227171936174 0.5; 0 0 0 1; 1 1 1"
			MotionType = Dynamic
			Mass = 100
			.component NeoAxis.CollisionShape_Sphere
			{
			}
		}
	}
	.component NeoAxis.MeshInSpace
	{
		Name = Sphere 2
		Color = 0.4980392 1 0
		Transform
		{
			GetByReference = "this:$Collision Body\\Transform"
		}
		Mesh
		{
			GetByReference = "this:$Mesh"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.Mesh
		{
			Name = Mesh
			.component NeoAxis.MeshGeometry_Sphere
			{
				Name = Mesh Geometry
			}
		}
		.component NeoAxis.RigidBody
		{
			Name = Collision Body
			Transform = "-7.70583540184843 -0.990982926337347 0.5; 0 0 0 1; 1 1 1"
			MotionType = Dynamic
			Mass = 10
			.component NeoAxis.CollisionShape_Sphere
			{
			}
		}
	}
	.component NeoAxis.MeshInSpace
	{
		Name = Sphere 3
		Color = 0 0.7490196 1
		Transform
		{
			GetByReference = "this:$Collision Body\\Transform"
		}
		Mesh
		{
			GetByReference = "this:$Mesh"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.Mesh
		{
			Name = Mesh
			.component NeoAxis.MeshGeometry_Sphere
			{
				Name = Mesh Geometry
			}
		}
		.component NeoAxis.RigidBody
		{
			Name = Collision Body
			Transform = "-7.70583540184843 -2.6583946835536 0.5; 0 0 0 1; 1 1 1"
			MotionType = Dynamic
			.component NeoAxis.CollisionShape_Sphere
			{
			}
		}
	}
	.component NeoAxis.Camera
	{
		Name = Camera
		Transform = "-2.40843344578772 -5.47746553644326 3.57630789218761; -0.110137188171826 0.16630327582822 0.541062323754376 0.81698505619376; 1 1 1"
	}
}
