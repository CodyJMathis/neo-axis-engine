// Made with NeoAxis Engine 2023.1.

.component NeoAxis.Scene
{
	EditorDocumentConfiguration = "\xfeff<?xml version=\"1.0\" encoding=\"utf-16\"?><KD V=\"1\"><DGD /><DM N=\"DockingManager\" C=\"2\"><DW N=\"DockingWorkspace\" O=\"0\" S=\"1145, 842\"><KW V=\"1\" A=\"B8A142C98C4F48833EABDF5324205724\"><CGD /><WS UN=\"4A87E34386084E14BC81ED10FBED4D99\" S=\"T,0,50:T,0,50\" D=\"Horizontal\"><WC UN=\"CA97BEA4B38A45BBE2A4DE5C45E94D42\" S=\"T,0,50:T,0,50\" NM=\"BarTabGroup\" AR=\"True\" SP=\"B8A142C98C4F48833EABDF5324205724\"><KP UN=\"B8A142C98C4F48833EABDF5324205724\" S=\"False\"><CPD ObjPath=\"\" /></KP><KP UN=\"8FE410B401D34AF4BCAB9E38D6286904\" S=\"False\"><CPD ObjPath=\"$Constraint\\$C# Script\" /></KP></WC></WS></KW></DW><DF N=\"DockingFloating\" C=\"0\"></DF></DM></KD>"
	DisplayPhysicalObjects = True
	RenderingPipeline
	{
		GetByReference = "root:$Rendering Pipeline"
	}
	CameraEditor
	{
		GetByReference = "this:$Camera Editor"
	}
	CameraEditor2D
	{
		GetByReference = "this:$Camera Editor 2D"
	}
	.component NeoAxis.Camera
	{
		Name = Camera Editor
		Visible = False
		Transform = "6.52350803917233 -3.24569334983179 4.5224026381178; -0.246874151956693 0.126616279822478 0.854863389484274 0.438440481820553; 1 1 1"
	}
	.component NeoAxis.Camera
	{
		Name = Camera Editor 2D
		Visible = False
		Transform = "2.64918580053222 3.02745193504869 10; -0.502493739596367 0.497493760429674 0.497493760429674 0.502493739596367; 1 1 1"
		Projection = Orthographic
		Height = 16.8586419336498
		FixedUp = 0 1 0
		FarClipPlane = 100
	}
	.component NeoAxis.Light
	{
		Name = Ambient Light
		Transform = "18.5822734231225 -5.39737456891382 0.8606866051066; 0.177025544047126 0 0 0.98420625722194; 1 1 1"
		Type = Ambient
		Brightness = 50000
	}
	.component NeoAxis.Light
	{
		Name = Directional Light
		Transform = "23.4737008768449 -15.0814890020227 22.8055842838911; -0.48553441582008 -0.67324283509012 0.472744885192886 -0.295825437679109; 1 1 1"
		Type = Directional
		AttenuationFar = 100
		AttenuationPower = 1.5
		SpotlightInnerAngle = 80
		SpotlightOuterAngle = 91.429
	}
	.component NeoAxis.RenderingPipeline_Basic
	{
		Name = Rendering Pipeline
		ShadowFarDistance = 50
		.component NeoAxis.Component
		{
			Name = Background Effects
		}
		.component NeoAxis.Component
		{
			Name = Scene Effects
			.component NeoAxis.RenderingEffect_AmbientOcclusion
			{
				Name = Ambient Occlusion
			}
			.component NeoAxis.RenderingEffect_LensEffects
			{
				Name = Lens Effects
			}
			.component NeoAxis.RenderingEffect_ToneMapping
			{
				Name = Tone Mapping
				Intensity = 0.5
			}
			.component NeoAxis.RenderingEffect_ToLDR
			{
				Name = To LDR
			}
			.component NeoAxis.RenderingEffect_Antialiasing
			{
				Name = Antialiasing
			}
			.component NeoAxis.RenderingEffect_ResolutionUpscale
			{
				Name = Resolution Upscale
			}
			.component NeoAxis.RenderingEffect_Sharpen
			{
				Name = Sharpen
			}
			.component NeoAxis.RenderingEffect_MotionBlur
			{
				Name = Motion Blur
			}
		}
		.component NeoAxis.Component
		{
			Name = Final Image Effects
		}
	}
	.component NeoAxis.GameMode
	{
		Name = Game Mode
		CutsceneStarted = False
		CutsceneGuiFadingFactor = 0
		CutsceneGuiFadingSpeed = 0
		ScreenFadingCurrentColor = 0 0 0 0
		ScreenFadingTargetColor = 0 0 0 0
		ScreenFadingSpeed = 0
	}
	.component NeoAxis.NetworkLogic
	{
		Name = Network Logic
	}
	.component NeoAxis.MeshInSpace
	{
		Name = Ground
		CanBeSelected = False
		Transform = "0 0 0; 0 0 0 1; 1 1 1"
		Collision = True
		Mesh
		{
			GetByReference = "this:$Mesh"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.Mesh
		{
			Name = Mesh
			.component NeoAxis.MeshGeometry_Plane
			{
				Name = Mesh Geometry
				Dimensions = 100 100
				UVTilesPerUnit = 0.25 0.25
			}
		}
	}
	.component NeoAxis.MeshInSpace
	{
		Name = Box
		Transform
		{
			GetByReference = "this:$Collision Body\\Transform"
		}
		Mesh
		{
			GetByReference = "this:$Mesh"
		}
		ReplaceMaterial
		{
			GetByReference = "Base\\Materials\\Yellow.material"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.Mesh
		{
			Name = Mesh
			.component NeoAxis.MeshGeometry_Box
			{
				Name = Mesh Geometry
				Dimensions = 5 5 0.5
			}
		}
		.component NeoAxis.RigidBody
		{
			Name = Collision Body
			Transform = "3.20197196338417 1.27635926158248 0.236219970997977; 0 0 0 1; 1 1 1"
			Mass = 10
			.component NeoAxis.CollisionShape_Box
			{
				Dimensions = 5 5 0.5
			}
		}
	}
	.component NeoAxis.MeshInSpace
	{
		Name = Box 2
		Transform
		{
			GetByReference = "this:$Collision Body\\Transform"
		}
		Mesh
		{
			GetByReference = "this:$Mesh"
		}
		ReplaceMaterial
		{
			GetByReference = "Base\\Materials\\Green.material"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.Mesh
		{
			Name = Mesh
			.component NeoAxis.MeshGeometry_Box
			{
				Name = Mesh Geometry
				Dimensions = 2.3 0.2 0.5
			}
		}
		.component NeoAxis.RigidBody
		{
			Name = Collision Body
			Transform = "4.20197196338417 1.27635926158248 0.792772611243361; 0 0 0 1; 1 1 1"
			MotionType = Dynamic
			.component NeoAxis.CollisionShape_Box
			{
				Dimensions = 2.3 0.200000002980232 0.5
			}
		}
	}
	.component NeoAxis.GroupOfObjects
	{
		Name = Group Of Objects
		BaseObjects
		{
			Count = 1
			0 "NeoAxis.Reference<NeoAxis.Component>"
			{
				GetByReference = "root:$Ground"
			}
		}
	}
	.component NeoAxis.Constraint_SixDOF
	{
		Name = Constraint
		Transform = "3.20197196338417 1.27635926158248 1.24529500517329; 0 0 0 1; 1 1 1"
		AngularZAxis = Free
		AngularZAxisMotor = Position
		AngularZAxisMotorLimit = -10 10
		AngularZAxisMotorTarget = 150
		BodyA
		{
			GetByReference = "this:..\\$Box"
		}
		BodyB
		{
			GetByReference = "this:..\\$Box 2"
		}
		.component NeoAxis.CSharpScript
		{
			Name = C# Script
			Code = "public void Constraint_SimulationStep(NeoAxis.Component obj)\r\n{\r\n\t//get objects\r\n\tvar constraint = (Constraint_SixDOF)obj;\r\n\tvar scene = constraint.ParentScene;\r\n\tvar sphere = scene.GetComponent(\"Sphere\") as MeshInSpace;\r\n\r\n\t//update motor\r\n\tvar lookTo = sphere.TransformV.Position;\r\n\tvar lookFrom = constraint.TransformV.Position;\r\n\tvar diff = lookTo - lookFrom;\r\n\tconstraint.AngularZAxisMotorTarget = MathEx.RadianToDegree(MathEx.Atan2(diff.Y, diff.X));\r\n}\r\n"
			Exit
			{
			}
			.component NeoAxis.EventHandlerComponent
			{
				Name = Event Handler SimulationStep
				Event
				{
					GetByReference = "this:..\\..\\event:SimulationStep"
				}
				HandlerMethod
				{
					GetByReference = "this:..\\method:Constraint_SimulationStep(NeoAxis.Component)"
				}
				HandlerFlow
				{
				}
			}
		}
	}
	.component NeoAxis.MeshInSpace
	{
		Name = Sphere
		Transform
		{
			GetByReference = "this:$Collision Body\\Transform"
		}
		Mesh
		{
			GetByReference = "this:$Mesh"
		}
		ReplaceMaterial
		{
			GetByReference = "Base\\Materials\\Blue.material"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.Mesh
		{
			Name = Mesh
			.component NeoAxis.MeshGeometry_Sphere
			{
				Name = Mesh Geometry
				SegmentsHorizontal = 64
				SegmentsVertical = 64
			}
		}
		.component NeoAxis.RigidBody
		{
			Name = Collision Body
			Transform = "-20.5735555060096 7.85623314082955 4.07139616486535; 0 0 0 1; 1 1 1"
			MotionType = Dynamic
			MaterialRestitution = 0.5
			LinearVelocity = 5 0 0
			.component NeoAxis.CollisionShape_Sphere
			{
			}
		}
	}
}
