// Made with NeoAxis Engine 2024.1.

.component NeoAxis.Scene
{
	RenderingPipeline
	{
		GetByReference = "root:$Rendering Pipeline"
	}
	CameraEditor
	{
		GetByReference = "this:$Camera Editor"
	}
	.component NeoAxis.Camera
	{
		Name = Camera Editor
		Visible = False
		Transform = "6.1961484600006 -9.92262945007217 4.15236832769856; -0.126511089237042 0.125818237931347 0.697668076633704 0.69384722392623; 1 1 1"
	}
	.component NeoAxis.Light
	{
		Name = Ambient Light
		Transform = "18.5822734231225 -5.39737456891382 0.8606866051066; 0.177025544047126 0 0 0.98420625722194; 1 1 1"
		Type = Ambient
		Brightness = 50000
	}
	.component NeoAxis.Light
	{
		Name = Light 1
		Transform = "23.4737008768449 -15.0814890020227 22.8055842838911; 0.754406150151168 -0.346223835921248 -0.381635976365512 -0.406637919527451; 1 1 1"
		Type = Directional
		Brightness = 200000
		AttenuationFar = 100
		AttenuationPower = 1.5
		SpotlightInnerAngle = 80
		SpotlightOuterAngle = 91.429
	}
	.component NeoAxis.RenderingPipeline_Basic
	{
		Name = Rendering Pipeline
		.component NeoAxis.Component
		{
			Name = Background Effects
		}
		.component NeoAxis.Component
		{
			Name = Scene Effects
			.component NeoAxis.RenderingEffect_Reflection
			{
				Name = Reflection
				BlurRoughnessMin = 0.2
			}
			.component NeoAxis.RenderingEffect_AmbientOcclusion
			{
				Name = Ambient Occlusion
			}
			.component NeoAxis.RenderingEffect_Bloom
			{
				Enabled = False
				Name = Bloom
			}
			.component NeoAxis.RenderingEffect_LensEffects
			{
				Name = Lens Effects
			}
			.component NeoAxis.RenderingEffect_ToneMapping
			{
				Name = Tone Mapping
				Intensity = 0.5
			}
			.component NeoAxis.RenderingEffect_ToLDR
			{
				Name = To LDR
			}
			.component NeoAxis.RenderingEffect_Antialiasing
			{
				Name = Antialiasing
			}
			.component NeoAxis.RenderingEffect_ResolutionUpscale
			{
				Name = Resolution Upscale
			}
			.component NeoAxis.RenderingEffect_Sharpen
			{
				Name = Sharpen
			}
			.component NeoAxis.RenderingEffect_MotionBlur
			{
				Name = Motion Blur
			}
		}
		.component NeoAxis.Component
		{
			Name = Final Image Effects
		}
	}
	.component NeoAxis.Light
	{
		Enabled = False
		Name = Light 2
		Transform = "-16.276133519817 -13.7764744895929 22.8055842838911; -0.800753779408636 -0.218616030310482 0.553641801455134 0.066941554624803; 1 1 1"
		Type = Spotlight
		AttenuationFar = 100
		AttenuationPower = 1.5
		SpotlightInnerAngle = 80
		SpotlightOuterAngle = 91.429
	}
	.component NeoAxis.MeshInSpace
	{
		Name = Ground
		CanBeSelected = False
		Transform = "0 0 0; 0 0 0 1; 1 1 1"
		Mesh
		{
			GetByReference = "this:$Mesh"
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.Mesh
		{
			Name = Mesh
			.component NeoAxis.MeshGeometry_Plane
			{
				Name = Mesh Geometry
				Dimensions = 100 100
				UVTilesPerUnit = 0.25 0.25
			}
		}
		.component NeoAxis.RigidBody
		{
			Name = Collision Body
			Transform
			{
				GetByReference = "this:..\\Transform"
			}
			.component NeoAxis.CollisionShape_Mesh
			{
				Mesh
				{
					GetByReference = "this:..\\..\\Mesh"
				}
				Vertices
				{
				}
				Indices
				{
				}
			}
		}
	}
	.component NeoAxis.MeshInSpace
	{
		Name = Sphere
		Transform = "0.259307877040201 0.0826259415220161 0.674374907872519; 0 0 0 1; 1 1 1"
		Mesh
		{
			GetByReference = "this:$Mesh"
		}
		ReplaceMaterial
		{
			GetByReference = "Base\\Materials\\Yellow.material"
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.Mesh
		{
			Name = Mesh
			.component NeoAxis.MeshGeometry_Sphere
			{
				Name = Mesh Geometry
			}
		}
	}
	.component NeoAxis.MeshInSpace
	{
		Name = Sphere 2
		Transform = "7.7593078770402 0.0826259415220161 0.674374907872519; 0 0 0 1; 1 1 1"
		Mesh
		{
			GetByReference = "this:$Mesh"
		}
		ReplaceMaterial
		{
			GetByReference = "Base\\Materials\\Yellow.material"
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.Mesh
		{
			Name = Mesh
			.component NeoAxis.MeshGeometry_Sphere
			{
				Name = Mesh Geometry
			}
		}
	}
	.component NeoAxis.MeshInSpace
	{
		Name = Cylinder
		Transform = "4.38710374793453 -0.0603045806904099 0.817623172547857; 0 0 0 1; 1 1 1"
		Mesh
		{
			GetByReference = "this:$Mesh"
		}
		ReplaceMaterial
		{
			GetByReference = "Base\\Materials\\Red.material"
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.Mesh
		{
			Name = Mesh
			.component NeoAxis.MeshGeometry_Cylinder
			{
				Name = Mesh Geometry
			}
		}
	}
	.component NeoAxis.MeshInSpace
	{
		Name = Cylinder 2
		Transform = "11.8871037479345 -0.0603045806904099 0.817623172547857; 0 0 0 1; 1 1 1"
		Mesh
		{
			GetByReference = "this:$Mesh"
		}
		ReplaceMaterial
		{
			GetByReference = "Base\\Materials\\Red.material"
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.Mesh
		{
			Name = Mesh
			.component NeoAxis.MeshGeometry_Cylinder
			{
				Name = Mesh Geometry
			}
		}
	}
	.component NeoAxis.GroupOfObjects
	{
		Name = Group Of Objects
		BaseObjects
		{
			Count = 1
			0 "NeoAxis.Reference<NeoAxis.Component>"
			{
				GetByReference = "root:$Ground"
			}
		}
	}
	.component NeoAxis.MeshInSpace
	{
		Name = Box 1
		CanBeSelected = False
		Transform = "2.38765780702607 -1.67388753208416 0.406182708642642; 0 0 0 1; 1 1 1"
		Mesh
		{
			GetByReference = "this:$Mesh"
		}
		ReplaceMaterial
		{
			GetByReference = "Base\\Materials\\Gray.material"
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.Mesh
		{
			Name = Mesh
			.component NeoAxis.MeshGeometry
			{
				Name = Mesh Geometry
				VertexStructure
				{
					Value
					{
						Length = 5
						0
						{
							Offset = 0
							Type = Float3
							Semantic = Position
						}
						1
						{
							Offset = 12
							Type = Float3
							Semantic = Normal
						}
						2
						{
							Offset = 24
							Type = Float4
							Semantic = Tangent
						}
						3
						{
							Offset = 40
							Type = Float4
							Semantic = Color0
						}
						4
						{
							Offset = 56
							Type = Float2
							Semantic = TextureCoordinate0
						}
					}
				}
				Vertices
				{
					Value
					{
						Length = 7680
						.elements = "UEsDBBQAAAAIAKkO/FhpMWu+qQIAAAAeAAAEAAAAZmlsZdWYzXHCQAyF1QNpIScudIAP6YMLfUBl4JZSgTPS6mF5AcdP68CEmYwTM1+kffq1RbpepOtEZC9yvkr5nEXOe/9dyn39O/7g2xt/beB7EVmTV58Z/9V+PD/L1/oxfOf66/nhM6M/eI+PxYXlcf6s/Zpnz4/4wz7Lq/5RP4bX/Hf7qh1q4BYLvxdzP36ntbMK72dP21de4+41HH3Ue0/9x/lbebWbte/xM/2hg18Rk1n/vf5SfKift/JV3Kj4raEfen/Id9VDP7P5A/1a+FB/0V6xvsB+C4/8z/qP+ZnloV/M99jLf9Mf9pP8rhfZhfox/V9q/7I9qu//1H/bfzT/0v63nd/mzyR+w3Ai4qexn8af5S/bo+b+7fwcf5uf4H13Wdz/6voh+V1X+U/yzfrf1R+jX8mdlvjd5y9jX8T6xyT/Wb7Of5YvPlj+ncvEwK6waH6g/2v+0fzm8KHxw/lpvuyOtj8i/9UNon7v6ofkrf7hvwv2WvtV/b3U/83ho+5/rfVP8Q/ql+JL757UP8nf9S+KX0G/WH+J/GvLX9c/nf+P6p/rX5P+a/2D4Sv/aR758/X9eUG3ZOx7/+8aeK2/voG3/tvAr2G/5fz9OP9s5wkzBBGZe/4q87ecP837/rgKH2o45X+Gd/3N/wzv+Zfjq/il7Pv7x2oHWKSfzS+Pf3wGjf9r5v1P3H/x7kjtTrSY5cfnhxw/zn/jNf99BqXOn+G9/6ftR56Nf3P8xv6Z0z/sryHuVPxD/waHq+XS0/yp5hdtv5X3+Zf23+ff2/nx+Ru64zqvf7W/0Pr7+cP8Qw4us+/xC+8vOB72w/m9B+bsD8NJeab/2PM79g+Wr/dnlsf5YZ9//2/7czp+tf+s/RXqt9r/EHdc/zz/Q/+GLbsunr/j/OT5Vv1/AFBLAQIUABQAAAAIAKkO/FhpMWu+qQIAAAAeAAAEAAAAAAAAAAAAAAAAAAAAAABmaWxlUEsFBgAAAAABAAEAMgAAAMsCAAAAAA=="
						.elementsZip = True
					}
				}
				Indices
				{
					Value
					{
						Length = 120
						.elements = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119
					}
				}
			}
			Structure
			{
				Edges = 0 1 1 2 2 3 0 3 4 5 5 6 6 7 4 7 2 7 3 6 0 5 1 4 8 9 10 11 8 12 9 13 13 14 11 15 12 16 10 16 15 17 14 17 18 19 18 20 20 21 19 21 8 19 13 21 10 18 15 20
				Faces = 11 6 0 0 0 1 0 1 2 0 2 2 0 3 3 0 4 0 0 5 0 6 4 0 6 5 0 7 6 0 8 6 0 9 7 0 10 4 0 11 0 6 2 0 12 7 0 13 6 0 14 6 0 15 3 0 16 2 0 17 0 6 1 0 18 0 0 19 5 0 20 5 0 21 4 0 22 1 0 23 0 6 1 0 24 4 0 25 7 0 26 7 0 27 2 0 28 1 0 29 0 42 5 0 30 0 0 31 8 0 32 0 0 33 9 0 34 8 0 35 0 0 36 3 0 37 9 0 38 5 0 39 10 0 40 11 0 41 6 0 42 5 0 43 11 0 44 5 0 45 8 0 46 12 0 47 3 0 48 13 0 49 9 0 50 13 0 51 3 0 52 14 0 53 3 0 54 6 0 55 15 0 56 6 0 57 11 0 58 15 0 59 16 0 60 5 0 61 12 0 62 10 0 63 5 0 64 16 0 65 3 0 66 15 0 67 17 0 68 14 0 69 3 0 70 17 0 71 0 6 18 0 72 19 0 73 20 0 74 21 0 75 20 0 76 19 0 77 0 9 9 0 78 21 0 79 8 0 80 8 0 81 21 0 82 19 0 83 21 0 84 9 0 85 13 0 86 0 9 18 0 87 11 0 88 10 0 89 11 0 90 18 0 91 15 0 92 15 0 93 18 0 94 20 0 95 0 12 15 0 96 20 0 97 17 0 98 17 0 99 20 0 100 21 0 101 21 0 102 13 0 103 14 0 104 17 0 114 21 0 115 14 0 116 0 12 19 0 105 12 0 106 8 0 107 12 0 108 19 0 109 16 0 110 19 0 111 18 0 112 16 0 113 18 0 117 10 0 118 16 0 119 0
			}
		}
	}
	.component NeoAxis.MeshInSpace
	{
		Name = Box 2
		CanBeSelected = False
		Transform = "9.88765780702607 -1.67388753208416 0.406182708642642; 0 0 0 1; 1 1 1"
		Mesh
		{
			GetByReference = "this:$Mesh"
		}
		ReplaceMaterial
		{
			GetByReference = "Base\\Materials\\Gray.material"
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.Mesh
		{
			Name = Mesh
			.component NeoAxis.MeshGeometry
			{
				Name = Mesh Geometry
				VertexStructure
				{
					Value
					{
						Length = 5
						0
						{
							Offset = 0
							Type = Float3
							Semantic = Position
						}
						1
						{
							Offset = 12
							Type = Float3
							Semantic = Normal
						}
						2
						{
							Offset = 24
							Type = Float4
							Semantic = Tangent
						}
						3
						{
							Offset = 40
							Type = Float4
							Semantic = Color0
						}
						4
						{
							Offset = 56
							Type = Float2
							Semantic = TextureCoordinate0
						}
					}
				}
				Vertices
				{
					Value
					{
						Length = 7680
						.elements = "UEsDBBQAAAAIAKkO/FhpMWu+qQIAAAAeAAAEAAAAZmlsZdWYzXHCQAyF1QNpIScudIAP6YMLfUBl4JZSgTPS6mF5AcdP68CEmYwTM1+kffq1RbpepOtEZC9yvkr5nEXOe/9dyn39O/7g2xt/beB7EVmTV58Z/9V+PD/L1/oxfOf66/nhM6M/eI+PxYXlcf6s/Zpnz4/4wz7Lq/5RP4bX/Hf7qh1q4BYLvxdzP36ntbMK72dP21de4+41HH3Ue0/9x/lbebWbte/xM/2hg18Rk1n/vf5SfKift/JV3Kj4raEfen/Id9VDP7P5A/1a+FB/0V6xvsB+C4/8z/qP+ZnloV/M99jLf9Mf9pP8rhfZhfox/V9q/7I9qu//1H/bfzT/0v63nd/mzyR+w3Ai4qexn8af5S/bo+b+7fwcf5uf4H13Wdz/6voh+V1X+U/yzfrf1R+jX8mdlvjd5y9jX8T6xyT/Wb7Of5YvPlj+ncvEwK6waH6g/2v+0fzm8KHxw/lpvuyOtj8i/9UNon7v6ofkrf7hvwv2WvtV/b3U/83ho+5/rfVP8Q/ql+JL757UP8nf9S+KX0G/WH+J/GvLX9c/nf+P6p/rX5P+a/2D4Sv/aR758/X9eUG3ZOx7/+8aeK2/voG3/tvAr2G/5fz9OP9s5wkzBBGZe/4q87ecP837/rgKH2o45X+Gd/3N/wzv+Zfjq/il7Pv7x2oHWKSfzS+Pf3wGjf9r5v1P3H/x7kjtTrSY5cfnhxw/zn/jNf99BqXOn+G9/6ftR56Nf3P8xv6Z0z/sryHuVPxD/waHq+XS0/yp5hdtv5X3+Zf23+ff2/nx+Ru64zqvf7W/0Pr7+cP8Qw4us+/xC+8vOB72w/m9B+bsD8NJeab/2PM79g+Wr/dnlsf5YZ9//2/7czp+tf+s/RXqt9r/EHdc/zz/Q/+GLbsunr/j/OT5Vv1/AFBLAQIUABQAAAAIAKkO/FhpMWu+qQIAAAAeAAAEAAAAAAAAAAAAAAAAAAAAAABmaWxlUEsFBgAAAAABAAEAMgAAAMsCAAAAAA=="
						.elementsZip = True
					}
				}
				Indices
				{
					Value
					{
						Length = 120
						.elements = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119
					}
				}
			}
			Structure
			{
				Edges = 0 1 1 2 2 3 0 3 4 5 5 6 6 7 4 7 2 7 3 6 0 5 1 4 8 9 10 11 8 12 9 13 13 14 11 15 12 16 10 16 15 17 14 17 18 19 18 20 20 21 19 21 8 19 13 21 10 18 15 20
				Faces = 11 6 0 0 0 1 0 1 2 0 2 2 0 3 3 0 4 0 0 5 0 6 4 0 6 5 0 7 6 0 8 6 0 9 7 0 10 4 0 11 0 6 2 0 12 7 0 13 6 0 14 6 0 15 3 0 16 2 0 17 0 6 1 0 18 0 0 19 5 0 20 5 0 21 4 0 22 1 0 23 0 6 1 0 24 4 0 25 7 0 26 7 0 27 2 0 28 1 0 29 0 42 5 0 30 0 0 31 8 0 32 0 0 33 9 0 34 8 0 35 0 0 36 3 0 37 9 0 38 5 0 39 10 0 40 11 0 41 6 0 42 5 0 43 11 0 44 5 0 45 8 0 46 12 0 47 3 0 48 13 0 49 9 0 50 13 0 51 3 0 52 14 0 53 3 0 54 6 0 55 15 0 56 6 0 57 11 0 58 15 0 59 16 0 60 5 0 61 12 0 62 10 0 63 5 0 64 16 0 65 3 0 66 15 0 67 17 0 68 14 0 69 3 0 70 17 0 71 0 6 18 0 72 19 0 73 20 0 74 21 0 75 20 0 76 19 0 77 0 9 9 0 78 21 0 79 8 0 80 8 0 81 21 0 82 19 0 83 21 0 84 9 0 85 13 0 86 0 9 18 0 87 11 0 88 10 0 89 11 0 90 18 0 91 15 0 92 15 0 93 18 0 94 20 0 95 0 12 15 0 96 20 0 97 17 0 98 17 0 99 20 0 100 21 0 101 21 0 102 13 0 103 14 0 104 17 0 114 21 0 115 14 0 116 0 12 19 0 105 12 0 106 8 0 107 12 0 108 19 0 109 16 0 110 19 0 111 18 0 112 16 0 113 18 0 117 10 0 118 16 0 119 0
			}
		}
	}
	.component NeoAxis.LiquidVolume
	{
		Name = Liquid Volume
		Transform = "2.33263635099915 -1.70686293400226 0.299415544946279; 0 0 0 1; 5.8 5.8 0.746192886194958"
		.component NeoAxis.MeshInSpace
		{
			Name = Surface
			CanBeSelected = False
			Transform
			{
				GetByReference = "this:$Attach Transform Offset\\Result"
			}
			Mesh
			{
				GetByReference = "this:$Mesh"
			}
			SpecialEffects
			{
				Value
				{
					Count = 0
				}
			}
			.component NeoAxis.Mesh
			{
				Name = Mesh
				.component NeoAxis.MeshGeometry_Plane
				{
					Name = Mesh Geometry
					UVTilesInTotal = 5.8 5.8
					Material
					{
						GetByReference = "this:..\\..\\..\\MaterialSurface"
					}
				}
			}
			.component NeoAxis.TransformOffset
			{
				Name = Attach Transform Offset
				PositionOffset = 0 0 0.5
				Source
				{
					GetByReference = "this:..\\..\\Transform"
				}
			}
		}
	}
	.component NeoAxis.LiquidVolume
	{
		Name = Liquid Volume 2
		Transform = "9.83263635099915 -1.70686293400226 0.299415544946279; 0 0 0 1; 5.8 5.8 0.746192886194958"
		MaterialSurface
		{
			GetByReference = "Base\\Components\\Liquid Volume\\Water Surface Transparent.material"
		}
		.component NeoAxis.MeshInSpace
		{
			Name = Surface
			CanBeSelected = False
			Transform
			{
				GetByReference = "this:$Attach Transform Offset\\Result"
			}
			Mesh
			{
				GetByReference = "this:$Mesh"
			}
			SpecialEffects
			{
				Value
				{
					Count = 0
				}
			}
			.component NeoAxis.Mesh
			{
				Name = Mesh
				.component NeoAxis.MeshGeometry_Plane
				{
					Name = Mesh Geometry
					UVTilesInTotal = 5.8 5.8
					Material
					{
						GetByReference = "this:..\\..\\..\\MaterialSurface"
					}
				}
			}
			.component NeoAxis.TransformOffset
			{
				Name = Attach Transform Offset
				PositionOffset = 0 0 0.5
				Source
				{
					GetByReference = "this:..\\..\\Transform"
				}
			}
		}
	}
	.component NeoAxis.GameMode
	{
		Name = Game Mode
		CutsceneStarted = False
		CutsceneGuiFadingFactor = 0
		CutsceneGuiFadingSpeed = 0
		ScreenFadingCurrentColor = 0 0 0 0
		ScreenFadingTargetColor = 0 0 0 0
		ScreenFadingSpeed = 0
	}
	.component NeoAxis.NetworkLogic
	{
		Name = Network Logic
	}
	.component NeoAxis.Text2D
	{
		Name = Text 2D
		Transform = "5.73627028947467 2.15097579644036 2.44866891987027; 0 0 0 1; 1 1 1"
		Text = "With current basic implementation you can use opaque shader with \r\nscreen space reflections (SSR) or transparent shader but without SSR.\r\nTo get both features at same time, need to make special rendering pass in the pipeline code"
	}
}
