// Made with NeoAxis Engine 2024.1.

.component NeoAxis.Scene
{
	EditorDocumentConfiguration = "\xfeff<?xml version=\"1.0\" encoding=\"utf-16\"?><KD V=\"1\"><DGD /><DM N=\"DockingManager\" C=\"2\"><DW N=\"DockingWorkspace\" O=\"0\" S=\"1144, 842\"><KW V=\"1\" A=\"70987FB780954C7637A20C3819F3FC99\"><CGD /><WS UN=\"4A87E34386084E14BC81ED10FBED4D99\" S=\"T,0,50:T,0,50\" D=\"Horizontal\"><WC UN=\"064BDE238FF64DD14DAD2C4984CE9D22\" S=\"T,0,50:T,0,50\" NM=\"BarTabGroup\" AR=\"True\" SP=\"70987FB780954C7637A20C3819F3FC99\"><KP UN=\"70987FB780954C7637A20C3819F3FC99\" S=\"False\"><CPD ObjPath=\"\" /></KP><KP UN=\"C279F2E359004186F69BE819B3194B47\" S=\"False\"><CPD ObjPath=\"$SFCrate1 2\\$Paint Layer\\$C# Script\" /></KP><KP UN=\"C6DB2560456C419026A523E7F22642B8\" S=\"False\"><CPD ObjPath=\"$SFCrate1 3\\$Paint Layer\\$C# Script\" /></KP></WC></WS></KW></DW><DF N=\"DockingFloating\" C=\"0\"></DF></DM></KD>"
	RenderingPipeline
	{
		GetByReference = "root:$Rendering Pipeline"
	}
	CameraEditor
	{
		GetByReference = "this:$Camera Editor"
	}
	CameraEditor2D
	{
		GetByReference = "this:$Camera Editor 2D"
	}
	.component NeoAxis.Camera
	{
		Name = Camera Editor
		Visible = False
		Transform = "3.36368594757274 0.16546944932039 3.65030843275713; -0.194736177146959 0.195396257405362 0.678517418503026 0.680817329898524; 1 1 1"
	}
	.component NeoAxis.Camera
	{
		Name = Camera Editor 2D
		Visible = False
		Transform = "2.64918580053222 3.02745193504869 10; -0.502493739596367 0.497493760429674 0.497493760429674 0.502493739596367; 1 1 1"
		Projection = Orthographic
		Height = 16.8586419336498
		FixedUp = 0 1 0
		FarClipPlane = 100
	}
	.component NeoAxis.Light
	{
		Name = Ambient Light
		Transform = "18.5822734231225 -5.39737456891382 0.8606866051066; 0.177025544047126 0 0 0.98420625722194; 1 1 1"
		Type = Ambient
		Brightness = 60000
	}
	.component NeoAxis.Light
	{
		Name = Light 1
		Transform = "23.4737008768449 -15.0814890020227 22.8055842838911; -0.48553441582008 -0.67324283509012 0.472744885192886 -0.295825437679109; 1 1 1"
		Type = Directional
		Brightness = 150000
		AttenuationFar = 100
		AttenuationPower = 1.5
		SpotlightInnerAngle = 80
		SpotlightOuterAngle = 91.429
	}
	.component NeoAxis.RenderingPipeline_Basic
	{
		Name = Rendering Pipeline
		.component NeoAxis.Component
		{
			Name = Background Effects
		}
		.component NeoAxis.Component
		{
			Name = Scene Effects
			.component NeoAxis.RenderingEffect_AmbientOcclusion
			{
				Name = Ambient Occlusion
			}
			.component NeoAxis.RenderingEffect_Bloom
			{
				Name = Bloom
				BrightThreshold = 1
				Scale = 1.5
			}
			.component NeoAxis.RenderingEffect_LensEffects
			{
				Name = Lens Effects
			}
			.component NeoAxis.RenderingEffect_ToneMapping
			{
				Name = Tone Mapping
				Intensity = 0.5
			}
			.component NeoAxis.RenderingEffect_ToLDR
			{
				Name = To LDR
			}
			.component NeoAxis.RenderingEffect_Antialiasing
			{
				Name = Antialiasing
			}
			.component NeoAxis.RenderingEffect_ResolutionUpscale
			{
				Name = Resolution Upscale
			}
			.component NeoAxis.RenderingEffect_Sharpen
			{
				Name = Sharpen
			}
			.component NeoAxis.RenderingEffect_MotionBlur
			{
				Name = Motion Blur
			}
		}
		.component NeoAxis.Component
		{
			Name = Final Image Effects
		}
	}
	.component NeoAxis.GameMode
	{
		Name = Game Mode
		CutsceneStarted = False
		CutsceneGuiFadingFactor = 0
		CutsceneGuiFadingSpeed = 0
		ScreenFadingCurrentColor = 0 0 0 0
		ScreenFadingTargetColor = 0 0 0 0
		ScreenFadingSpeed = 0
	}
	.component NeoAxis.Light
	{
		Enabled = False
		Name = Light 2
		Transform = "-16.276133519817 -13.7764744895929 22.8055842838911; -0.800753779408636 -0.218616030310482 0.553641801455134 0.066941554624803; 1 1 1"
		Type = Spotlight
		AttenuationFar = 100
		AttenuationPower = 1.5
		SpotlightInnerAngle = 80
		SpotlightOuterAngle = 91.429
	}
	.component NeoAxis.MeshInSpace
	{
		Name = Ground
		CanBeSelected = False
		Transform = "0 0 0; 0 0 0 1; 1 1 1"
		Mesh
		{
			GetByReference = "this:$Mesh"
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.Mesh
		{
			Name = Mesh
			.component NeoAxis.MeshGeometry_Plane
			{
				Name = Mesh Geometry
				Dimensions = 100 100
				UVTilesPerUnit = 0.25 0.25
			}
		}
		.component NeoAxis.RigidBody
		{
			Name = Collision Body
			Transform
			{
				GetByReference = "this:..\\Transform"
			}
			.component NeoAxis.CollisionShape_Mesh
			{
				Mesh
				{
					GetByReference = "this:..\\..\\Mesh"
				}
				Vertices
				{
				}
				Indices
				{
				}
			}
		}
	}
	.component NeoAxis.GroupOfObjects
	{
		Name = Group Of Objects
		BaseObjects
		{
			Count = 1
			0 "NeoAxis.Reference<NeoAxis.Component>"
			{
				GetByReference = "root:$Ground"
			}
		}
	}
	.component NeoAxis.MeshInSpace
	{
		Name = SFCrate1 2
		Transform = "4.70544991244999 5.05375588170049 0.501349157012952; 0 0 0 1; 1 1 1"
		Mesh
		{
			GetByReference = "Samples\\Starter Content\\Models\\Sci-fi Box\\SFCrate1.fbx|$Mesh"
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.PaintLayer
		{
			Name = Paint Layer
			MaterialColor = 1 1 1 0.0027472
			BlendMode = Transparent
			MaskImage
			{
				GetByReference = "Samples\\Starter Content\\Scenes\\Mesh paint layer\\Layer2_Mask.png"
			}
			Material
			{
				GetByReference = "Samples\\Starter Content\\Scenes\\Mesh paint layer\\Layer2.material"
			}
			.component NeoAxis.CSharpScript
			{
				Name = C# Script
				Code = "public void PaintLayer_UpdateEvent(NeoAxis.Component sender, float delta)\r\n{\r\n\tvar layer = (PaintLayer)sender;\r\n\tlayer.MaterialColor = new ColorValue(1, 1, 1, MathEx.Sin(Time.Current) * 0.5 + 0.5);\r\n}\r\n"
				__parameter_Delta = 0
				Exit
				{
				}
				.component NeoAxis.EventHandlerComponent
				{
					Name = Event Handler UpdateEvent
					WhenEnable = Editor, Simulation, Instance
					Event
					{
						GetByReference = "this:..\\..\\event:UpdateEvent"
					}
					HandlerMethod
					{
						GetByReference = "this:..\\method:PaintLayer_UpdateEvent(NeoAxis.Component,System.Single)"
					}
					HandlerFlow
					{
					}
				}
			}
		}
	}
	.component NeoAxis.MeshInSpace
	{
		Name = SFCrate1 3
		Transform = "2.00228633431927 5.10952375791947 0.501349157012952; 0 0 0 1; 1 1 1"
		Mesh
		{
			GetByReference = "Samples\\Starter Content\\Models\\Sci-fi Box\\SFCrate1.fbx|$Mesh"
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.PaintLayer
		{
			Name = Paint Layer
			MaterialColor = 1 1 1 0.4476584
			BlendMode = Transparent
			MaskImage
			{
				GetByReference = "Samples\\Starter Content\\Scenes\\Mesh paint layer\\Layer1_Mask.png"
			}
			Material
			{
				GetByReference = "Samples\\Starter Content\\Scenes\\Mesh paint layer\\Layer1.material"
			}
			.component NeoAxis.CSharpScript
			{
				Name = C# Script
				Code = "public void PaintLayer_UpdateEvent(NeoAxis.Component sender, float delta)\r\n{\r\n\tvar layer = (PaintLayer)sender;\r\n\tlayer.MaterialColor = new ColorValue(1, 1, 1, MathEx.Cos(Time.Current) * 0.5 + 0.5);\r\n}\r\n"
				__parameter_Delta = 0
				Exit
				{
				}
				.component NeoAxis.EventHandlerComponent
				{
					Name = Event Handler UpdateEvent
					WhenEnable = Editor, Simulation, Instance
					Event
					{
						GetByReference = "this:..\\..\\event:UpdateEvent"
					}
					HandlerMethod
					{
						GetByReference = "this:..\\method:PaintLayer_UpdateEvent(NeoAxis.Component,System.Single)"
					}
					HandlerFlow
					{
					}
				}
			}
		}
	}
}
