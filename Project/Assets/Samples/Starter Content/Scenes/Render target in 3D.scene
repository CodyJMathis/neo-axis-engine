// Made with NeoAxis Engine 2024.1.

.component NeoAxis.Scene
{
	RenderingPipeline
	{
		GetByReference = "root:$Rendering Pipeline"
	}
	CameraEditor
	{
		GetByReference = "this:$Camera Editor"
	}
	CameraEditor2D
	{
		GetByReference = "this:$Camera Editor 2D"
	}
	.component NeoAxis.Camera
	{
		Name = Camera Editor
		Visible = False
		Transform = "1.9295940935667 -2.59436349273593 2.66275600608841; -0.116583807437111 0.144097712571548 0.618081701917337 0.763949654643604; 1 1 1"
	}
	.component NeoAxis.Camera
	{
		Name = Camera Editor 2D
		Visible = False
		Transform = "2.64918580053222 3.02745193504869 10; -0.502493739596367 0.497493760429674 0.497493760429674 0.502493739596367; 1 1 1"
		Projection = Orthographic
		Height = 16.8586419336498
		FixedUp = 0 1 0
		FarClipPlane = 100
	}
	.component NeoAxis.Light
	{
		Name = Ambient Light
		Transform = "18.5822734231225 -5.39737456891382 0.8606866051066; 0.177025544047126 0 0 0.98420625722194; 1 1 1"
		Type = Ambient
		Brightness = 60000
	}
	.component NeoAxis.Light
	{
		Name = Light 1
		Transform = "23.4737008768449 -15.0814890020227 22.8055842838911; -0.48553441582008 -0.67324283509012 0.472744885192886 -0.295825437679109; 1 1 1"
		Type = Directional
		Brightness = 150000
		AttenuationFar = 100
		AttenuationPower = 1.5
		SpotlightInnerAngle = 80
		SpotlightOuterAngle = 91.429
	}
	.component NeoAxis.RenderingPipeline_Basic
	{
		Name = Rendering Pipeline
		ShadowIntensity = 0.5
		ShadowDirectionalDistance = 15
		ShadowPointSpotlightDistance = 15
		.component NeoAxis.Component
		{
			Name = Background Effects
		}
		.component NeoAxis.Component
		{
			Name = Scene Effects
			.component NeoAxis.RenderingEffect_AmbientOcclusion
			{
				Name = Ambient Occlusion
			}
			.component NeoAxis.RenderingEffect_Bloom
			{
				Enabled = False
				Name = Bloom
			}
			.component NeoAxis.RenderingEffect_LensEffects
			{
				Name = Lens Effects
			}
			.component NeoAxis.RenderingEffect_ToneMapping
			{
				Name = Tone Mapping
				Intensity = 0.5
			}
			.component NeoAxis.RenderingEffect_ToLDR
			{
				Name = To LDR
			}
			.component NeoAxis.RenderingEffect_Antialiasing
			{
				Name = Antialiasing
			}
			.component NeoAxis.RenderingEffect_ResolutionUpscale
			{
				Name = Resolution Upscale
			}
			.component NeoAxis.RenderingEffect_Sharpen
			{
				Name = Sharpen
			}
			.component NeoAxis.RenderingEffect_MotionBlur
			{
				Name = Motion Blur
			}
		}
		.component NeoAxis.Component
		{
			Name = Final Image Effects
		}
	}
	.component NeoAxis.GameMode
	{
		Name = Game Mode
		UseBuiltInCamera = FirstPerson
		ThirdPersonCameraHorizontalAngle = 123.55833912973655
		DisplayTarget = True
		CutsceneStarted = False
		CutsceneGuiFadingFactor = 0
		CutsceneGuiFadingSpeed = 0
		ScreenFadingCurrentColor = 0 0 0 0
		ScreenFadingTargetColor = 0 0 0 0
		ScreenFadingSpeed = 0
		ObjectControlledByPlayer
		{
			GetByReference = "this:..\\$Character"
		}
	}
	.component NeoAxis.MeshInSpace
	{
		Name = Ground
		CanBeSelected = False
		Transform = "0 0 0; 0 0 0 1; 1 1 1"
		Mesh
		{
			GetByReference = "this:$Mesh"
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.Mesh
		{
			Name = Mesh
			.component NeoAxis.MeshGeometry_Plane
			{
				Name = Mesh Geometry
				Dimensions = 100 100
				UVTilesPerUnit = 0.25 0.25
			}
		}
		.component NeoAxis.RigidBody
		{
			Name = Collision Body
			Transform
			{
				GetByReference = "this:..\\Transform"
			}
			.component NeoAxis.CollisionShape_Mesh
			{
				Mesh
				{
					GetByReference = "this:..\\..\\Mesh"
				}
				Vertices
				{
				}
				Indices
				{
				}
			}
		}
	}
	.component NeoAxis.GroupOfObjects
	{
		Name = Group Of Objects
		BaseObjects
		{
			Count = 1
			0 "NeoAxis.Reference<NeoAxis.Component>"
			{
				GetByReference = "root:$Ground"
			}
		}
	}
	.component NeoAxis.RenderTargetInSpace
	{
		Name = Render Target In Space
		Transform = "1.94054675104483 2.47453653413676 1.5474972245669; 0 0 -0.5 0.866025403784439; 2 2 2"
		HDR = False
		CameraByName = Camera Editor
		Mesh
		{
			GetByReference = "this:$Mesh"
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		Scene
		{
			GetByReference = "Samples\\Starter Content\\Scenes\\Character.scene"
		}
		UIControl
		{
			GetByReference = "Base\\UI\\Screens\\OptionsWindow.ui"
		}
		.component NeoAxis.Mesh
		{
			Name = Mesh
			.component NeoAxis.MeshGeometry_Plane
			{
				Name = Mesh Geometry
				Axis = 0
				Dimensions = 1.333 1
				UVTilesInTotal = 1 1
				Material
				{
					GetByReference = "this:..\\..\\$Material"
				}
			}
		}
		.component NeoAxis.Material
		{
			Name = Material
			BaseColor
			{
				GetByReference = "this:$Shader graph\\$Node Shader Texture Sample 1\\$Shader Texture Sample\\RGBA"
			}
			Emissive
			{
				GetByReference = "this:$Shader graph\\$Node Invoke Member 1\\$Invoke Member\\__parameter_ReturnValue"
			}
			.component NeoAxis.FlowGraph
			{
				Name = Shader graph
				EditorScrollPosition = 0 0
				Specialization
				{
					GetByReference = NeoAxis.FlowGraphSpecialization_Shader|Instance
				}
				.component NeoAxis.FlowGraphNode
				{
					Name = Node Material
					Position = 10 -7
					ControlledObject
					{
						GetByReference = "this:..\\.."
					}
				}
				.component NeoAxis.FlowGraphNode
				{
					Name = Node Shader Texture Sample 1
					Position = -20 -9
					ControlledObject
					{
						GetByReference = "this:$Shader Texture Sample"
					}
					.component NeoAxis.ShaderTextureSample
					{
						Name = Shader Texture Sample
						Location2 = 0 0
						Location3 = 0 0 0
						Texture
						{
							GetByReference = "this:..\\..\\..\\..\\CreatedImage"
						}
					}
				}
				.component NeoAxis.FlowGraphNode
				{
					Name = Node Invoke Member 1
					Position = -5 -2
					ControlledObject
					{
						GetByReference = "this:$Invoke Member"
					}
					.component NeoAxis.InvokeMember
					{
						Name = Invoke Member
						__parameter_S = 0.4
						Member
						{
							GetByReference = "NeoAxis.ColorValue|method:op_Multiply(NeoAxis.ColorValue,System.Single)"
						}
						Exit
						{
						}
						__parameter_V
						{
							GetByReference = "this:..\\..\\$Node Shader Texture Sample 1\\$Shader Texture Sample\\RGBA"
						}
					}
				}
			}
		}
		.component NeoAxis.Camera
		{
			Name = Camera
			Transform
			{
				GetByReference = "this:$Attach Transform Offset\\Result"
			}
			.component NeoAxis.TransformOffset
			{
				Name = Attach Transform Offset
				PositionOffset = 0 0 0.55
				Source
				{
					GetByReference = "this:..\\..\\Transform"
				}
			}
		}
	}
	.component NeoAxis.Character
	{
		Name = Character
		Transform = "4.44064063507778 -0.135150502207995 0.0056448639330271; 0 0 0.881131593421595 0.472871140031111; 1 1 1"
		Collision = True
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.MeshInSpaceAnimationController
		{
			Name = Animation Controller
		}
		.component NeoAxis.CharacterInputProcessing
		{
			Name = Character Input Processing
		}
	}
}
