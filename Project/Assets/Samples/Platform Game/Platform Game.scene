// Made with NeoAxis Engine 2022.1.

.component NeoAxis.Scene
{
	EditorDocumentConfiguration = "\xfeff<?xml version=\"1.0\" encoding=\"utf-16\"?><KD V=\"1\"><DGD /><DM N=\"DockingManager\" C=\"2\"><DW N=\"DockingWorkspace\" O=\"0\" S=\"1174, 842\"><KW V=\"1\" A=\"18B8A10B53774B0856A1C63CAA95F8A8\"><CGD /><WS UN=\"4A87E34386084E14BC81ED10FBED4D99\" S=\"T,0,50:T,0,50\" D=\"Horizontal\"><WC UN=\"A72CDF4597AA43952E97B840C78E266C\" S=\"T,0,50:T,0,50\" NM=\"BarTabGroup\" AR=\"True\" SP=\"18B8A10B53774B0856A1C63CAA95F8A8\"><KP UN=\"18B8A10B53774B0856A1C63CAA95F8A8\" S=\"False\"><CPD ObjPath=\"\" /></KP><KP UN=\"F656603AF66A4F1E72BF98B1382136FA\" S=\"False\"><CPD ObjPath=\"$Regulator Switch\\$$n1$C# Script\" /></KP><KP UN=\"99101A6DE2F944D3308BCCE589D7E7B4\" S=\"False\"><CPD ObjPath=\"$Button\\$$n1$C# Script\" /></KP></WC></WS></KW></DW><DF N=\"DockingFloating\" C=\"0\"></DF></DM></KD>"
	Mode = _2D
	DisplayPhysicalObjects = True
	DisplaySensors = True
	RenderingPipeline
	{
		GetByReference = "root:$Rendering Pipeline"
	}
	UIScreen
	{
		GetByReference = "Samples\\Platform Game\\PlatformGameGUI.ui"
	}
	CameraEditor
	{
		GetByReference = "this:$Camera Editor"
	}
	CameraEditor2D
	{
		GetByReference = "this:$Camera Editor 2D"
	}
	.component NeoAxis.Camera
	{
		Name = Camera Editor
		Visible = False
		Transform = "2.54755444460002 -2.98353098885791 3.3491828452653; -0.205306458415661 0.203494233957238 0.679913375290773 0.673911831755226; 1 1 1"
	}
	.component NeoAxis.Camera
	{
		Name = Camera Editor 2D
		Visible = False
		Transform = "2.65011425027668 3.02480347899168 10; 0.5 -0.5 -0.5 -0.5; 1 1 1"
		Projection = Orthographic
		Height = 16.8586419336498
		FixedUp = 0 1 0
		NearClipPlane = 0.1
		FarClipPlane = 100
	}
	.component NeoAxis.Light
	{
		Name = Ambient Light
		Transform = "18.5822734231225 -5.39737456891382 0.8606866051066; 0.177025544047126 0 0 0.98420625722194; 1 1 1"
		Type = Ambient
		Brightness = 70000
	}
	.component NeoAxis.Light
	{
		Enabled = False
		Name = Light 1
		Transform = "23.4737008768449 -15.0814890020227 22.8055842838911; -0.48553441582008 -0.67324283509012 0.472744885192886 -0.295825437679109; 1 1 1"
		Type = Directional
		Brightness = 150000
		AttenuationFar = 100
		AttenuationPower = 1.5
		SpotlightInnerAngle = 80
		SpotlightOuterAngle = 91.429
		Visible
		{
			GetByReference = "root:$Button\\Activated"
		}
	}
	.component NeoAxis.RenderingPipeline_Basic
	{
		Name = Rendering Pipeline
		DeferredShading = False
		HighDynamicRange = False
		Shadows = False
		ShadowFarDistance = 15
		ShadowDirectionalLightCascades = 1
		ProvideColorDepthTextureCopy = False
		.component NeoAxis.Component
		{
			Name = Background Effects
		}
		.component NeoAxis.Component
		{
			Name = Scene Effects
			.component NeoAxis.RenderingEffect_AmbientOcclusion
			{
				Enabled = False
				Name = Ambient Occlusion
			}
			.component NeoAxis.RenderingEffect_MotionBlur
			{
				Enabled = False
				Name = Motion Blur
			}
			.component NeoAxis.RenderingEffect_Bloom
			{
				Enabled = False
				Name = Bloom
			}
			.component NeoAxis.RenderingEffect_LensEffects
			{
				Enabled = False
				Name = Lens Effects
			}
			.component NeoAxis.RenderingEffect_ToneMapping
			{
				Enabled = False
				Name = Tone Mapping
			}
			.component NeoAxis.RenderingEffect_ToLDR
			{
				Name = To LDR
			}
			.component NeoAxis.RenderingEffect_Antialiasing
			{
				Name = Antialiasing
				MotionTechnique = None
			}
			.component NeoAxis.RenderingEffect_ResolutionUpscale
			{
				Name = Resolution Upscale
			}
			.component NeoAxis.RenderingEffect_Sharpen
			{
				Name = Sharpen
			}
		}
		.component NeoAxis.Component
		{
			Name = Final Image Effects
		}
	}
	.component NeoAxis.GameMode
	{
		Name = Game Mode
		CutsceneStarted = False
		CutsceneGuiFadingFactor = 0
		CutsceneGuiFadingSpeed = 0
		ScreenFadingCurrentColor = 0 0 0 0
		ScreenFadingTargetColor = 0 0 0 0
		ScreenFadingSpeed = 0
		ObjectControlledByPlayer
		{
			GetByReference = "this:..\\$Character 2D"
		}
	}
	.component NeoAxis.Character2D
	{
		Name = Character 2D
		Height = 1.2
		PositionToGroundHeight = 0.75
		EyePosition = 0.05 0.2
		RunSupport = True
		FlyControlSupport = True
		JumpSupport = True
		Animate = True
		Transform
		{
			GetByReference = "this:$Collision Body\\Transform"
		}
		IdleAnimation
		{
			GetByReference = "Content\\2D\\Penguin\\Animation Idle.component"
		}
		WalkAnimation
		{
			GetByReference = "Content\\2D\\Penguin\\Animation Walk.component"
		}
		FlyAnimation
		{
			GetByReference = "Content\\2D\\Penguin\\Animation Fly.component"
		}
		JumpAnimation
		{
			GetByReference = "Content\\2D\\Penguin\\Animation Jump.component"
		}
		.component NeoAxis.RigidBody2D
		{
			Name = Collision Body
			CanBeSelected = False
			Transform = "-2.89735785513877 -1.95806094081686 1; 0 0 0 1; 1 1 1"
			MotionType = Dynamic
			Mass = 70
			AngularDamping = 10
			FixedRotation = True
			.component NeoAxis.CollisionShape2D_Capsule
			{
				Name = Capsule Shape
				LocalTransform = "0 0 -0.15; 0 0 0 1; 1 1 1"
				Friction = 0
				CollidesWith = All
				Radius = 0.3
				Height = 0.6
			}
		}
		.component NeoAxis.Sprite
		{
			Name = Sprite
			CanBeSelected = False
			Transform
			{
				GetByReference = "this:$Transform Offset\\Result"
			}
			ReplaceMaterialSelectively
			{
				Count = 0
			}
			SpecialEffects
			{
				Value
				{
					Count = 0
				}
			}
			.component NeoAxis.SpriteAnimationController
			{
				Name = Sprite Animation Controller
			}
			.component NeoAxis.TransformOffset
			{
				Name = Transform Offset
				PositionOffset = 0 -0.05 0
				ScaleOffset = 1.2 1.2 1.2
				Source
				{
					GetByReference = "this:..\\..\\Transform"
				}
			}
		}
		.component NeoAxis.Character2DInputProcessing
		{
			Name = Character Input Processing
		}
		.component NeoAxis.Character2DAI
		{
			Name = Character AI
		}
	}
	.component NeoAxis.MeshInSpace
	{
		Name = Ground
		CanBeSelected = False
		Transform = "0 0 -1; 0 0 0 1; 1 1 1"
		Mesh
		{
			GetByReference = "this:$Mesh"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.Mesh
		{
			Name = Mesh
			.component NeoAxis.MeshGeometry_Plane
			{
				Name = Mesh Geometry
				Dimensions = 100 100
				UVTilesPerUnit = 0.25 0.25
				Material
				{
					GetByReference = "Base\\Materials\\White.material"
				}
			}
		}
	}
	.component NeoAxis.GroupOfObjects
	{
		Name = Group Of Objects
		BaseObjects
		{
			Count = 1
			0 "NeoAxis.Reference<NeoAxis.Component>"
			{
				GetByReference = "root:$Ground"
			}
		}
	}
	.component NeoAxis.MeshInSpace
	{
		Name = Box
		Color = 0.3921569 0.5843138 0.9294118
		Transform
		{
			GetByReference = "this:$Collision Body\\Transform"
		}
		Mesh
		{
			GetByReference = "this:$Mesh"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.Mesh
		{
			Name = Mesh
			.component NeoAxis.MeshGeometry_Box
			{
				Name = Mesh Geometry
				Material
				{
					GetByReference = "Base\\Materials\\White.material"
				}
			}
		}
		.component NeoAxis.RigidBody2D
		{
			Name = Collision Body
			Transform = "3.13462011413145 -2.91912366387529 0; 0 0 0 1; 17.7999996244907 0.645161295439525 1"
			.component NeoAxis.CollisionShape2D_Box
			{
				CollidesWith = All
			}
		}
	}
	.component NeoAxis.MeshInSpace
	{
		Name = Box 11
		Transform = "3.13462011413145 -4.60098342922753 0; 0 0 0 1; 80.8119968867598 0.645161295439525 1"
		Color = 0.3518039 1 0.4726667
		Mesh
		{
			GetByReference = "this:$Mesh"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.Mesh
		{
			Name = Mesh
			.component NeoAxis.MeshGeometry_Box
			{
				Name = Mesh Geometry
				Material
				{
					GetByReference = "Base\\Materials\\White.material"
				}
			}
		}
	}
	.component NeoAxis.MeshInSpace
	{
		Name = Box 10
		Color = 0.3921569 0.5843138 0.9294118
		Transform
		{
			GetByReference = "this:$Collision Body\\Transform"
		}
		Mesh
		{
			GetByReference = "this:$Mesh"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.Mesh
		{
			Name = Mesh
			.component NeoAxis.MeshGeometry_Box
			{
				Name = Mesh Geometry
				Material
				{
					GetByReference = "Base\\Materials\\White.material"
				}
			}
		}
		.component NeoAxis.RigidBody2D
		{
			Name = Collision Body
			Transform = "-4.27394213446941 -0.0960019148911768 0; 0 0 0 1; 7.98206271028641 0.645161295439525 1"
			.component NeoAxis.CollisionShape2D_Box
			{
				CollidesWith = All
			}
		}
	}
	.component NeoAxis.MeshInSpace
	{
		Name = Box 2
		Color = 0.3921569 0.5843138 0.9294118
		Transform
		{
			GetByReference = "this:$Collision Body\\Transform"
		}
		Mesh
		{
			GetByReference = "this:$Mesh"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.Mesh
		{
			Name = Mesh
			.component NeoAxis.MeshGeometry_Box
			{
				Name = Mesh Geometry
				Material
				{
					GetByReference = "Base\\Materials\\White.material"
				}
			}
		}
		.component NeoAxis.RigidBody2D
		{
			Name = Collision Body
			Transform = "10.342950950608 -0.156068335082324 0; 0 0 0 1; 3.38403040812029 0.645161295439525 1"
			.component NeoAxis.CollisionShape2D_Box
			{
				CollidesWith = All
			}
		}
	}
	.component NeoAxis.MeshInSpace
	{
		Name = Box 6
		Color = 0.3921569 0.5843138 0.9294118
		Transform
		{
			GetByReference = "this:$Collision Body\\Transform"
		}
		Mesh
		{
			GetByReference = "this:$Mesh"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.Mesh
		{
			Name = Mesh
			.component NeoAxis.MeshGeometry_Box
			{
				Name = Mesh Geometry
				Material
				{
					GetByReference = "Base\\Materials\\White.material"
				}
			}
		}
		.component NeoAxis.RigidBody2D
		{
			Name = Collision Body
			Transform = "3.99561518626615 -0.11602405495489 0; 0 0 0 1; 3.38403040812029 0.645161295439525 1"
			.component NeoAxis.CollisionShape2D_Box
			{
				CollidesWith = All
			}
		}
	}
	.component NeoAxis.MeshInSpace
	{
		Name = Box 8
		Color = 0.3921569 0.5843138 0.9294118
		Transform
		{
			GetByReference = "this:$Collision Body\\Transform"
		}
		Mesh
		{
			GetByReference = "this:$Mesh"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.Mesh
		{
			Name = Mesh
			.component NeoAxis.MeshGeometry_Box
			{
				Name = Mesh Geometry
				Material
				{
					GetByReference = "Base\\Materials\\White.material"
				}
			}
		}
		.component NeoAxis.RigidBody2D
		{
			Name = Collision Body
			Transform = "-6.4564645266248 2.82723053441152 0; 0 0 0 1; 3.38403040812029 0.645161295439525 1"
			.component NeoAxis.CollisionShape2D_Box
			{
				CollidesWith = All
			}
		}
	}
	.component NeoAxis.MeshInSpace
	{
		Name = Box 9
		Color = 0.3921569 0.5843138 0.9294118
		Transform
		{
			GetByReference = "this:$Collision Body\\Transform"
		}
		Mesh
		{
			GetByReference = "this:$Mesh"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.Mesh
		{
			Name = Mesh
			.component NeoAxis.MeshGeometry_Box
			{
				Name = Mesh Geometry
				Material
				{
					GetByReference = "Base\\Materials\\White.material"
				}
			}
		}
		.component NeoAxis.RigidBody2D
		{
			Name = Collision Body
			Transform = "-2.35172057807567 5.28995376224873 0; 0 0 0 1; 2.4171645926653 0.645161295439525 1"
			.component NeoAxis.CollisionShape2D_Box
			{
				CollidesWith = All
			}
		}
	}
	.component NeoAxis.MeshInSpace
	{
		Name = Box 12
		Color = 0.3921569 0.5843138 0.9294118
		Transform
		{
			GetByReference = "this:$Collision Body\\Transform"
		}
		Mesh
		{
			GetByReference = "this:$Mesh"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.Mesh
		{
			Name = Mesh
			.component NeoAxis.MeshGeometry_Box
			{
				Name = Mesh Geometry
				Material
				{
					GetByReference = "Base\\Materials\\White.material"
				}
			}
		}
		.component NeoAxis.RigidBody2D
		{
			Name = Collision Body
			Transform = "-6.67671907996158 7.47236702919389 0; 0 0 0 1; 2.54438377961493 0.645161295439525 1"
			.component NeoAxis.CollisionShape2D_Box
			{
				CollidesWith = All
			}
		}
	}
	.component NeoAxis.MeshInSpace
	{
		Name = Box 7
		Color = 0.3921569 0.5843138 0.9294118
		Transform
		{
			GetByReference = "this:$Collision Body\\Transform"
		}
		Mesh
		{
			GetByReference = "this:$Mesh"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.Mesh
		{
			Name = Mesh
			.component NeoAxis.MeshGeometry_Box
			{
				Name = Mesh Geometry
				Material
				{
					GetByReference = "Base\\Materials\\White.material"
				}
			}
		}
		.component NeoAxis.RigidBody2D
		{
			Name = Collision Body
			Transform = "2.49387959533354 2.4468098732009 0; 0 0 0 1; 2.1554333984596 0.645161295439525 1"
			.component NeoAxis.CollisionShape2D_Box
			{
				CollidesWith = All
			}
		}
	}
	.component NeoAxis.MeshInSpace
	{
		Name = Box 5
		Color = 0.3921569 0.5843138 0.9294118
		Transform
		{
			GetByReference = "this:$Collision Body\\Transform"
		}
		Mesh
		{
			GetByReference = "this:$Mesh"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.Mesh
		{
			Name = Mesh
			.component NeoAxis.MeshGeometry_Box
			{
				Name = Mesh Geometry
				Material
				{
					GetByReference = "Base\\Materials\\White.material"
				}
			}
		}
		.component NeoAxis.RigidBody2D
		{
			Name = Collision Body
			Transform = "1.41262996986206 7.23210134842929 0; 0 0 0 1; 4.77148284443763 0.645161295439525 1"
			.component NeoAxis.CollisionShape2D_Box
			{
				CollidesWith = All
			}
		}
	}
	.component NeoAxis.MeshInSpace
	{
		Name = Box 4
		Color = 0.3921569 0.5843138 0.9294118
		Transform
		{
			GetByReference = "this:$Collision Body\\Transform"
		}
		Mesh
		{
			GetByReference = "this:$Mesh"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.Mesh
		{
			Name = Mesh
			.component NeoAxis.MeshGeometry_Box
			{
				Name = Mesh Geometry
				Material
				{
					GetByReference = "Base\\Materials\\White.material"
				}
			}
		}
		.component NeoAxis.RigidBody2D
		{
			Name = Collision Body
			Transform = "8.68103022997588 5.4901751628859 0; 0 0 0 1; 2.19742236015782 0.645161295439525 1"
			.component NeoAxis.CollisionShape2D_Box
			{
				CollidesWith = All
			}
		}
	}
	.component NeoAxis.Weapon2D
	{
		Name = Weapon 2D
		Transform = "2.52738108585223 3.84498571309931 0; 0 -1 0 0; 1.5 1.5 1.5"
		Animate = True
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		IdleAnimation
		{
			GetByReference = "Content\\2D\\Weapon\\Animation Idle.component"
		}
		.component NeoAxis.SpriteAnimationController
		{
			Name = Sprite Animation Controller
		}
	}
	.component NeoAxis.DestroyingSensor2D
	{
		Name = Destroying Sensor 2D
		Transform = "2.87431479051622 -4.58096128916381 0; 0 0 0 1; 100 1 1"
		WhenUpdate = SimulationStep
		FilterByType
		{
			GetByReference = NeoAxis.Character2D
		}
		Objects
		{
			Count = 0
		}
	}
	.component NeoAxis.MeshInSpace
	{
		Name = Pipe
		Color = 0.3921569 0.5843138 0.9294118
		Transform
		{
			GetByReference = "this:$Collision Body\\Transform"
		}
		Mesh
		{
			GetByReference = "this:$Mesh"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.Mesh
		{
			Name = Mesh
			.component NeoAxis.MeshGeometry
			{
				Name = Mesh Geometry
				VertexStructure
				{
					Value
					{
						Length = 5
						0
						{
							Offset = 0
							Type = Float3
							Semantic = Position
						}
						1
						{
							Offset = 12
							Type = Float3
							Semantic = Normal
						}
						2
						{
							Offset = 24
							Type = Float4
							Semantic = Tangent
						}
						3
						{
							Offset = 40
							Type = Float4
							Semantic = Color0
						}
						4
						{
							Offset = 56
							Type = Float2
							Semantic = TextureCoordinate0
						}
					}
				}
				Vertices
				{
					Value
					{
						Length = 201408
						.elements = "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"
						.elementsZip = True
					}
				}
				Indices
				{
					Value
					{
						Length = 3147
						.elements
					}
				}
				Material
				{
					GetByReference = "Base\\Materials\\White.material"
				}
			}
			Structure
			{
				Edges
				Faces = "228 6 0 0 0 1 0 1 2 0 2 2 0 3 3 0 4 0 0 5 0 6 1 0 6 4 0 7 5 0 8 5 0 9 2 0 10 1 0 11 0 6 4 0 12 6 0 13 7 0 14 7 0 15 5 0 16 4 0 17 0 6 6 0 18 8 0 19 9 0 20 9 0 21 7 0 22 6 0 23 0 6 8 0 24 10 0 25 11 0 26 11 0 27 9 0 28 8 0 29 0 6 10 0 30 12 0 31 13 0 32 13 0 33 11 0 34 10 0 35 0 6 12 0 36 14 0 37 15 0 38 15 0 39 13 0 40 12 0 41 0 6 14 0 42 16 0 43 17 0 44 17 0 45 15 0 46 14 0 47 0 6 16 0 48 18 0 49 19 0 50 19 0 51 17 0 52 16 0 53 0 6 18 0 54 20 0 55 21 0 56 21 0 57 19 0 58 18 0 59 0 6 20 0 60 22 0 61 23 0 62 23 0 63 21 0 64 20 0 65 0 6 22 0 66 24 0 67 25 0 68 25 0 69 23 0 70 22 0 71 0 6 24 0 72 26 0 73 27 0 74 27 0 75 25 0 76 24 0 77 0 6 26 0 78 28 0 79 29 0 80 29 0 81 27 0 82 26 0 83 0 6 28 0 84 30 0 85 31 0 86 31 0 87 29 0 88 28 0 89 0 6 30 0 90 32 0 91 33 0 92 33 0 93 31 0 94 30 0 95 0 6 32 0 96 34 0 97 35 0 98 35 0 99 33 0 100 32 0 101 0 6 34 0 102 36 0 103 37 0 104 37 0 105 35 0 106 34 0 107 0 6 36 0 108 38 0 109 39 0 110 39 0 111 37 0 112 36 0 113 0 6 38 0 114 40 0 115 41 0 116 41 0 117 39 0 118 38 0 119 0 6 40 0 120 42 0 121 43 0 122 43 0 123 41 0 124 40 0 125 0 6 42 0 126 44 0 127 45 0 128 45 0 129 43 0 130 42 0 131 0 6 44 0 132 46 0 133 47 0 134 47 0 135 45 0 136 44 0 137 0 6 46 0 138 48 0 139 49 0 140 49 0 141 47 0 142 46 0 143 0 6 48 0 144 50 0 145 51 0 146 51 0 147 49 0 148 48 0 149 0 6 50 0 150 52 0 151 53 0 152 53 0 153 51 0 154 50 0 155 0 6 52 0 156 54 0 157 55 0 158 55 0 159 53 0 160 52 0 161 0 6 54 0 162 56 0 163 57 0 164 57 0 165 55 0 166 54 0 167 0 6 56 0 168 58 0 169 59 0 170 59 0 171 57 0 172 56 0 173 0 6 58 0 174 60 0 175 61 0 176 61 0 177 59 0 178 58 0 179 0 6 60 0 180 62 0 181 63 0 182 63 0 183 61 0 184 60 0 185 0 6 62 0 186 64 0 187 65 0 188 65 0 189 63 0 190 62 0 191 0 6 64 0 192 66 0 193 67 0 194 67 0 195 65 0 196 64 0 197 0 6 66 0 198 68 0 199 69 0 200 69 0 201 67 0 202 66 0 203 0 6 68 0 204 70 0 205 71 0 206 71 0 207 69 0 208 68 0 209 0 6 70 0 210 72 0 211 73 0 212 73 0 213 71 0 214 70 0 215 0 6 72 0 216 74 0 217 75 0 218 75 0 219 73 0 220 72 0 221 0 6 74 0 222 76 0 223 77 0 224 77 0 225 75 0 226 74 0 227 0 6 76 0 228 78 0 229 79 0 230 79 0 231 77 0 232 76 0 233 0 6 78 0 234 80 0 235 81 0 236 81 0 237 79 0 238 78 0 239 0 6 80 0 240 82 0 241 83 0 242 83 0 243 81 0 244 80 0 245 0 6 82 0 246 84 0 247 85 0 248 85 0 249 83 0 250 82 0 251 0 6 84 0 252 86 0 253 87 0 254 87 0 255 85 0 256 84 0 257 0 6 86 0 258 88 0 259 89 0 260 89 0 261 87 0 262 86 0 263 0 6 88 0 264 90 0 265 91 0 266 91 0 267 89 0 268 88 0 269 0 6 90 0 270 92 0 271 93 0 272 93 0 273 91 0 274 90 0 275 0 6 92 0 276 94 0 277 95 0 278 95 0 279 93 0 280 92 0 281 0 6 94 0 282 96 0 283 97 0 284 97 0 285 95 0 286 94 0 287 0 6 96 0 288 98 0 289 99 0 290 99 0 291 97 0 292 96 0 293 0 6 100 0 294 101 0 295 102 0 296 102 0 297 103 0 298 100 0 299 0 6 101 0 300 104 0 301 105 0 302 105 0 303 102 0 304 101 0 305 0 6 104 0 306 106 0 307 107 0 308 107 0 309 105 0 310 104 0 311 0 6 106 0 312 108 0 313 109 0 314 109 0 315 107 0 316 106 0 317 0 6 108 0 318 110 0 319 111 0 320 111 0 321 109 0 322 108 0 323 0 6 110 0 324 112 0 325 113 0 326 113 0 327 111 0 328 110 0 329 0 6 112 0 330 114 0 331 115 0 332 115 0 333 113 0 334 112 0 335 0 6 114 0 336 116 0 337 117 0 338 117 0 339 115 0 340 114 0 341 0 6 116 0 342 118 0 343 119 0 344 119 0 345 117 0 346 116 0 347 0 6 118 0 348 120 0 349 121 0 350 121 0 351 119 0 352 118 0 353 0 6 120 0 354 122 0 355 123 0 356 123 0 357 121 0 358 120 0 359 0 6 122 0 360 124 0 361 125 0 362 125 0 363 123 0 364 122 0 365 0 6 124 0 366 126 0 367 127 0 368 127 0 369 125 0 370 124 0 371 0 6 126 0 372 128 0 373 129 0 374 129 0 375 127 0 376 126 0 377 0 6 128 0 378 130 0 379 131 0 380 131 0 381 129 0 382 128 0 383 0 6 130 0 384 132 0 385 133 0 386 133 0 387 131 0 388 130 0 389 0 6 132 0 390 134 0 391 135 0 392 135 0 393 133 0 394 132 0 395 0 6 134 0 396 136 0 397 137 0 398 137 0 399 135 0 400 134 0 401 0 6 136 0 402 138 0 403 139 0 404 139 0 405 137 0 406 136 0 407 0 6 138 0 408 140 0 409 141 0 410 141 0 411 139 0 412 138 0 413 0 6 140 0 414 142 0 415 143 0 416 143 0 417 141 0 418 140 0 419 0 6 142 0 420 144 0 421 145 0 422 145 0 423 143 0 424 142 0 425 0 6 144 0 426 146 0 427 147 0 428 147 0 429 145 0 430 144 0 431 0 6 146 0 432 148 0 433 149 0 434 149 0 435 147 0 436 146 0 437 0 6 148 0 438 150 0 439 151 0 440 151 0 441 149 0 442 148 0 443 0 6 150 0 444 152 0 445 153 0 446 153 0 447 151 0 448 150 0 449 0 6 152 0 450 154 0 451 155 0 452 155 0 453 153 0 454 152 0 455 0 6 154 0 456 156 0 457 157 0 458 157 0 459 155 0 460 154 0 461 0 6 156 0 462 158 0 463 159 0 464 159 0 465 157 0 466 156 0 467 0 6 158 0 468 160 0 469 161 0 470 161 0 471 159 0 472 158 0 473 0 6 162 0 474 163 0 475 164 0 476 164 0 477 165 0 478 162 0 479 0 6 163 0 480 166 0 481 167 0 482 167 0 483 164 0 484 163 0 485 0 6 166 0 486 168 0 487 169 0 488 169 0 489 167 0 490 166 0 491 0 6 168 0 492 170 0 493 171 0 494 171 0 495 169 0 496 168 0 497 0 6 170 0 498 172 0 499 173 0 500 173 0 501 171 0 502 170 0 503 0 6 172 0 504 174 0 505 175 0 506 175 0 507 173 0 508 172 0 509 0 6 174 0 510 176 0 511 177 0 512 177 0 513 175 0 514 174 0 515 0 6 176 0 516 178 0 517 179 0 518 179 0 519 177 0 520 176 0 521 0 6 178 0 522 180 0 523 181 0 524 181 0 525 179 0 526 178 0 527 0 6 180 0 528 182 0 529 183 0 530 183 0 531 181 0 532 180 0 533 0 6 182 0 534 184 0 535 185 0 536 185 0 537 183 0 538 182 0 539 0 6 184 0 540 186 0 541 187 0 542 187 0 543 185 0 544 184 0 545 0 6 186 0 546 188 0 547 189 0 548 189 0 549 187 0 550 186 0 551 0 6 188 0 552 190 0 553 191 0 554 191 0 555 189 0 556 188 0 557 0 6 190 0 558 192 0 559 193 0 560 193 0 561 191 0 562 190 0 563 0 6 192 0 564 194 0 565 195 0 566 195 0 567 193 0 568 192 0 569 0 6 194 0 570 196 0 571 197 0 572 197 0 573 195 0 574 194 0 575 0 6 196 0 576 198 0 577 199 0 578 199 0 579 197 0 580 196 0 581 0 6 198 0 582 200 0 583 201 0 584 201 0 585 199 0 586 198 0 587 0 6 200 0 588 202 0 589 203 0 590 203 0 591 201 0 592 200 0 593 0 6 202 0 594 204 0 595 205 0 596 205 0 597 203 0 598 202 0 599 0 6 204 0 600 206 0 601 207 0 602 207 0 603 205 0 604 204 0 605 0 6 206 0 606 208 0 607 209 0 608 209 0 609 207 0 610 206 0 611 0 6 208 0 612 210 0 613 211 0 614 211 0 615 209 0 616 208 0 617 0 6 210 0 618 212 0 619 213 0 620 213 0 621 211 0 622 210 0 623 0 6 212 0 624 214 0 625 215 0 626 215 0 627 213 0 628 212 0 629 0 6 214 0 630 0 0 631 3 0 632 3 0 633 215 0 634 214 0 635 0 6 216 0 636 217 0 637 218 0 638 217 0 639 216 0 640 219 0 641 0 6 218 0 642 220 0 643 221 0 644 220 0 645 218 0 646 217 0 647 0 6 221 0 648 222 0 649 223 0 650 222 0 651 221 0 652 220 0 653 0 6 223 0 654 224 0 655 225 0 656 224 0 657 223 0 658 222 0 659 0 6 225 0 660 226 0 661 227 0 662 226 0 663 225 0 664 224 0 665 0 6 227 0 666 228 0 667 229 0 668 228 0 669 227 0 670 226 0 671 0 6 229 0 672 230 0 673 231 0 674 230 0 675 229 0 676 228 0 677 0 6 231 0 678 232 0 679 233 0 680 232 0 681 231 0 682 230 0 683 0 6 233 0 684 234 0 685 235 0 686 234 0 687 233 0 688 232 0 689 0 6 235 0 690 236 0 691 237 0 692 236 0 693 235 0 694 234 0 695 0 6 237 0 696 238 0 697 239 0 698 238 0 699 237 0 700 236 0 701 0 6 239 0 702 240 0 703 241 0 704 240 0 705 239 0 706 238 0 707 0 6 241 0 708 242 0 709 243 0 710 242 0 711 241 0 712 240 0 713 0 6 243 0 714 244 0 715 245 0 716 244 0 717 243 0 718 242 0 719 0 6 245 0 720 246 0 721 247 0 722 246 0 723 245 0 724 244 0 725 0 6 247 0 726 248 0 727 249 0 728 248 0 729 247 0 730 246 0 731 0 6 249 0 732 250 0 733 251 0 734 250 0 735 249 0 736 248 0 737 0 6 251 0 738 252 0 739 253 0 740 252 0 741 251 0 742 250 0 743 0 6 253 0 744 254 0 745 255 0 746 254 0 747 253 0 748 252 0 749 0 6 255 0 750 256 0 751 257 0 752 256 0 753 255 0 754 254 0 755 0 6 257 0 756 258 0 757 259 0 758 258 0 759 257 0 760 256 0 761 0 6 259 0 762 260 0 763 261 0 764 260 0 765 259 0 766 258 0 767 0 6 261 0 768 262 0 769 263 0 770 262 0 771 261 0 772 260 0 773 0 6 263 0 774 264 0 775 265 0 776 264 0 777 263 0 778 262 0 779 0 6 265 0 780 266 0 781 267 0 782 266 0 783 265 0 784 264 0 785 0 6 267 0 786 268 0 787 269 0 788 268 0 789 267 0 790 266 0 791 0 6 269 0 792 270 0 793 271 0 794 270 0 795 269 0 796 268 0 797 0 6 271 0 798 272 0 799 273 0 800 272 0 801 271 0 802 270 0 803 0 6 273 0 804 274 0 805 275 0 806 274 0 807 273 0 808 272 0 809 0 6 275 0 810 276 0 811 277 0 812 276 0 813 275 0 814 274 0 815 0 6 277 0 816 278 0 817 279 0 818 278 0 819 277 0 820 276 0 821 0 6 279 0 822 280 0 823 281 0 824 280 0 825 279 0 826 278 0 827 0 6 281 0 828 282 0 829 283 0 830 282 0 831 281 0 832 280 0 833 0 6 283 0 834 284 0 835 285 0 836 284 0 837 283 0 838 282 0 839 0 6 285 0 840 286 0 841 287 0 842 286 0 843 285 0 844 284 0 845 0 6 287 0 846 288 0 847 289 0 848 288 0 849 287 0 850 286 0 851 0 6 289 0 852 290 0 853 291 0 854 290 0 855 289 0 856 288 0 857 0 6 291 0 858 292 0 859 293 0 860 292 0 861 291 0 862 290 0 863 0 6 293 0 864 294 0 865 295 0 866 294 0 867 293 0 868 292 0 869 0 6 295 0 870 296 0 871 297 0 872 296 0 873 295 0 874 294 0 875 0 6 297 0 876 298 0 877 299 0 878 298 0 879 297 0 880 296 0 881 0 6 299 0 882 300 0 883 301 0 884 300 0 885 299 0 886 298 0 887 0 6 301 0 888 302 0 889 303 0 890 302 0 891 301 0 892 300 0 893 0 6 303 0 894 304 0 895 305 0 896 304 0 897 303 0 898 302 0 899 0 6 305 0 900 306 0 901 307 0 902 306 0 903 305 0 904 304 0 905 0 6 307 0 906 308 0 907 309 0 908 308 0 909 307 0 910 306 0 911 0 6 310 0 912 311 0 913 312 0 914 311 0 915 310 0 916 313 0 917 0 6 312 0 918 314 0 919 315 0 920 314 0 921 312 0 922 311 0 923 0 6 315 0 924 316 0 925 317 0 926 316 0 927 315 0 928 314 0 929 0 6 317 0 930 318 0 931 319 0 932 318 0 933 317 0 934 316 0 935 0 6 319 0 936 320 0 937 321 0 938 320 0 939 319 0 940 318 0 941 0 6 321 0 942 322 0 943 323 0 944 322 0 945 321 0 946 320 0 947 0 6 323 0 948 324 0 949 325 0 950 324 0 951 323 0 952 322 0 953 0 6 325 0 954 326 0 955 327 0 956 326 0 957 325 0 958 324 0 959 0 6 327 0 960 328 0 961 329 0 962 328 0 963 327 0 964 326 0 965 0 6 329 0 966 330 0 967 331 0 968 330 0 969 329 0 970 328 0 971 0 6 331 0 972 332 0 973 333 0 974 332 0 975 331 0 976 330 0 977 0 6 333 0 978 334 0 979 335 0 980 334 0 981 333 0 982 332 0 983 0 6 335 0 984 336 0 985 337 0 986 336 0 987 335 0 988 334 0 989 0 6 337 0 990 338 0 991 339 0 992 338 0 993 337 0 994 336 0 995 0 6 339 0 996 340 0 997 341 0 998 340 0 999 339 0 1000 338 0 1001 0 6 341 0 1002 342 0 1003 343 0 1004 342 0 1005 341 0 1006 340 0 1007 0 6 343 0 1008 344 0 1009 345 0 1010 344 0 1011 343 0 1012 342 0 1013 0 6 345 0 1014 346 0 1015 347 0 1016 346 0 1017 345 0 1018 344 0 1019 0 6 347 0 1020 348 0 1021 349 0 1022 348 0 1023 347 0 1024 346 0 1025 0 6 349 0 1026 350 0 1027 351 0 1028 350 0 1029 349 0 1030 348 0 1031 0 6 351 0 1032 352 0 1033 353 0 1034 352 0 1035 351 0 1036 350 0 1037 0 6 353 0 1038 354 0 1039 355 0 1040 354 0 1041 353 0 1042 352 0 1043 0 6 355 0 1044 356 0 1045 357 0 1046 356 0 1047 355 0 1048 354 0 1049 0 6 357 0 1050 358 0 1051 359 0 1052 358 0 1053 357 0 1054 356 0 1055 0 6 359 0 1056 360 0 1057 361 0 1058 360 0 1059 359 0 1060 358 0 1061 0 6 361 0 1062 362 0 1063 363 0 1064 362 0 1065 361 0 1066 360 0 1067 0 6 363 0 1068 364 0 1069 365 0 1070 364 0 1071 363 0 1072 362 0 1073 0 6 365 0 1074 366 0 1075 367 0 1076 366 0 1077 365 0 1078 364 0 1079 0 6 367 0 1080 368 0 1081 369 0 1082 368 0 1083 367 0 1084 366 0 1085 0 6 369 0 1086 370 0 1087 371 0 1088 370 0 1089 369 0 1090 368 0 1091 0 6 372 0 1092 373 0 1093 374 0 1094 373 0 1095 372 0 1096 375 0 1097 0 6 374 0 1098 376 0 1099 377 0 1100 376 0 1101 374 0 1102 373 0 1103 0 6 377 0 1104 378 0 1105 379 0 1106 378 0 1107 377 0 1108 376 0 1109 0 6 379 0 1110 380 0 1111 381 0 1112 380 0 1113 379 0 1114 378 0 1115 0 6 381 0 1116 382 0 1117 383 0 1118 382 0 1119 381 0 1120 380 0 1121 0 6 383 0 1122 384 0 1123 385 0 1124 384 0 1125 383 0 1126 382 0 1127 0 6 385 0 1128 386 0 1129 387 0 1130 386 0 1131 385 0 1132 384 0 1133 0 6 387 0 1134 388 0 1135 389 0 1136 388 0 1137 387 0 1138 386 0 1139 0 6 389 0 1140 390 0 1141 391 0 1142 390 0 1143 389 0 1144 388 0 1145 0 6 391 0 1146 392 0 1147 393 0 1148 392 0 1149 391 0 1150 390 0 1151 0 6 393 0 1152 394 0 1153 395 0 1154 394 0 1155 393 0 1156 392 0 1157 0 6 395 0 1158 396 0 1159 397 0 1160 396 0 1161 395 0 1162 394 0 1163 0 6 397 0 1164 398 0 1165 399 0 1166 398 0 1167 397 0 1168 396 0 1169 0 6 399 0 1170 400 0 1171 401 0 1172 400 0 1173 399 0 1174 398 0 1175 0 6 401 0 1176 402 0 1177 403 0 1178 402 0 1179 401 0 1180 400 0 1181 0 6 403 0 1182 404 0 1183 405 0 1184 404 0 1185 403 0 1186 402 0 1187 0 6 405 0 1188 406 0 1189 407 0 1190 406 0 1191 405 0 1192 404 0 1193 0 6 407 0 1194 408 0 1195 409 0 1196 408 0 1197 407 0 1198 406 0 1199 0 6 409 0 1200 410 0 1201 411 0 1202 410 0 1203 409 0 1204 408 0 1205 0 6 411 0 1206 412 0 1207 413 0 1208 412 0 1209 411 0 1210 410 0 1211 0 6 413 0 1212 414 0 1213 415 0 1214 414 0 1215 413 0 1216 412 0 1217 0 6 415 0 1218 416 0 1219 417 0 1220 416 0 1221 415 0 1222 414 0 1223 0 6 417 0 1224 418 0 1225 419 0 1226 418 0 1227 417 0 1228 416 0 1229 0 6 419 0 1230 420 0 1231 421 0 1232 420 0 1233 419 0 1234 418 0 1235 0 6 421 0 1236 422 0 1237 423 0 1238 422 0 1239 421 0 1240 420 0 1241 0 6 423 0 1242 219 0 1243 216 0 1244 219 0 1245 423 0 1246 422 0 1247 0 486 216 0 1248 1 0 1249 0 0 1250 1 0 1251 216 0 1252 218 0 1253 218 0 1254 4 0 1255 1 0 1256 4 0 1257 218 0 1258 221 0 1259 221 0 1260 6 0 1261 4 0 1262 6 0 1263 221 0 1264 223 0 1265 223 0 1266 8 0 1267 6 0 1268 8 0 1269 223 0 1270 225 0 1271 225 0 1272 10 0 1273 8 0 1274 10 0 1275 225 0 1276 227 0 1277 227 0 1278 12 0 1279 10 0 1280 12 0 1281 227 0 1282 229 0 1283 229 0 1284 14 0 1285 12 0 1286 14 0 1287 229 0 1288 231 0 1289 231 0 1290 16 0 1291 14 0 1292 16 0 1293 231 0 1294 233 0 1295 233 0 1296 18 0 1297 16 0 1298 18 0 1299 233 0 1300 235 0 1301 235 0 1302 20 0 1303 18 0 1304 20 0 1305 235 0 1306 237 0 1307 237 0 1308 22 0 1309 20 0 1310 22 0 1311 237 0 1312 239 0 1313 239 0 1314 24 0 1315 22 0 1316 24 0 1317 239 0 1318 241 0 1319 241 0 1320 26 0 1321 24 0 1322 26 0 1323 241 0 1324 243 0 1325 243 0 1326 28 0 1327 26 0 1328 28 0 1329 243 0 1330 245 0 1331 245 0 1332 30 0 1333 28 0 1334 30 0 1335 245 0 1336 247 0 1337 247 0 1338 32 0 1339 30 0 1340 32 0 1341 247 0 1342 249 0 1343 249 0 1344 34 0 1345 32 0 1346 34 0 1347 249 0 1348 251 0 1349 251 0 1350 36 0 1351 34 0 1352 36 0 1353 251 0 1354 253 0 1355 253 0 1356 38 0 1357 36 0 1358 38 0 1359 253 0 1360 255 0 1361 255 0 1362 40 0 1363 38 0 1364 40 0 1365 255 0 1366 257 0 1367 257 0 1368 42 0 1369 40 0 1370 42 0 1371 257 0 1372 259 0 1373 259 0 1374 44 0 1375 42 0 1376 44 0 1377 259 0 1378 261 0 1379 261 0 1380 46 0 1381 44 0 1382 46 0 1383 261 0 1384 263 0 1385 263 0 1386 48 0 1387 46 0 1388 48 0 1389 263 0 1390 265 0 1391 265 0 1392 50 0 1393 48 0 1394 50 0 1395 265 0 1396 267 0 1397 267 0 1398 52 0 1399 50 0 1400 52 0 1401 267 0 1402 269 0 1403 269 0 1404 54 0 1405 52 0 1406 54 0 1407 269 0 1408 271 0 1409 271 0 1410 56 0 1411 54 0 1412 56 0 1413 271 0 1414 273 0 1415 273 0 1416 58 0 1417 56 0 1418 58 0 1419 273 0 1420 275 0 1421 275 0 1422 60 0 1423 58 0 1424 60 0 1425 275 0 1426 277 0 1427 277 0 1428 62 0 1429 60 0 1430 62 0 1431 277 0 1432 279 0 1433 279 0 1434 64 0 1435 62 0 1436 64 0 1437 279 0 1438 281 0 1439 281 0 1440 66 0 1441 64 0 1442 66 0 1443 281 0 1444 283 0 1445 283 0 1446 68 0 1447 66 0 1448 68 0 1449 283 0 1450 285 0 1451 285 0 1452 70 0 1453 68 0 1454 70 0 1455 285 0 1456 287 0 1457 287 0 1458 72 0 1459 70 0 1460 72 0 1461 287 0 1462 289 0 1463 289 0 1464 74 0 1465 72 0 1466 74 0 1467 289 0 1468 291 0 1469 291 0 1470 76 0 1471 74 0 1472 76 0 1473 291 0 1474 293 0 1475 293 0 1476 78 0 1477 76 0 1478 78 0 1479 293 0 1480 295 0 1481 295 0 1482 80 0 1483 78 0 1484 80 0 1485 295 0 1486 297 0 1487 297 0 1488 82 0 1489 80 0 1490 82 0 1491 297 0 1492 299 0 1493 299 0 1494 84 0 1495 82 0 1496 84 0 1497 299 0 1498 301 0 1499 301 0 1500 86 0 1501 84 0 1502 86 0 1503 301 0 1504 303 0 1505 303 0 1506 88 0 1507 86 0 1508 88 0 1509 303 0 1510 305 0 1511 305 0 1512 90 0 1513 88 0 1514 90 0 1515 305 0 1516 307 0 1517 307 0 1518 92 0 1519 90 0 1520 92 0 1521 307 0 1522 309 0 1523 309 0 1524 94 0 1525 92 0 1526 372 0 1707 166 0 1708 163 0 1709 166 0 1710 372 0 1711 374 0 1712 374 0 1713 168 0 1714 166 0 1715 168 0 1716 374 0 1717 377 0 1718 377 0 1719 170 0 1720 168 0 1721 170 0 1722 377 0 1723 379 0 1724 379 0 1725 172 0 1726 170 0 1727 172 0 1728 379 0 1729 381 0 1730 381 0 1731 174 0 1732 172 0 1733 174 0 1734 381 0 1735 383 0 1736 383 0 1737 176 0 1738 174 0 1739 176 0 1740 383 0 1741 385 0 1742 385 0 1743 178 0 1744 176 0 1745 178 0 1746 385 0 1747 387 0 1748 387 0 1749 180 0 1750 178 0 1751 180 0 1752 387 0 1753 389 0 1754 389 0 1755 182 0 1756 180 0 1757 182 0 1758 389 0 1759 391 0 1760 391 0 1761 184 0 1762 182 0 1763 184 0 1764 391 0 1765 393 0 1766 393 0 1767 186 0 1768 184 0 1769 186 0 1770 393 0 1771 395 0 1772 395 0 1773 188 0 1774 186 0 1775 188 0 1776 395 0 1777 397 0 1778 397 0 1779 190 0 1780 188 0 1781 190 0 1782 397 0 1783 399 0 1784 399 0 1785 192 0 1786 190 0 1787 192 0 1788 399 0 1789 401 0 1790 401 0 1791 194 0 1792 192 0 1793 194 0 1794 401 0 1795 403 0 1796 403 0 1797 196 0 1798 194 0 1799 196 0 1800 403 0 1801 405 0 1802 405 0 1803 198 0 1804 196 0 1805 198 0 1806 405 0 1807 407 0 1808 407 0 1809 200 0 1810 198 0 1811 200 0 1812 407 0 1813 409 0 1814 409 0 1815 202 0 1816 200 0 1817 202 0 1818 409 0 1819 411 0 1820 411 0 1821 204 0 1822 202 0 1823 204 0 1824 411 0 1825 413 0 1826 413 0 1827 206 0 1828 204 0 1829 206 0 1830 413 0 1831 415 0 1832 415 0 1833 208 0 1834 206 0 1835 208 0 1836 415 0 1837 417 0 1838 417 0 1839 210 0 1840 208 0 1841 210 0 1842 417 0 1843 419 0 1844 419 0 1845 212 0 1846 210 0 1847 212 0 1848 419 0 1849 421 0 1850 421 0 1851 214 0 1852 212 0 1853 214 0 1854 421 0 1855 423 0 1856 423 0 1857 0 0 1858 214 0 1859 0 0 1860 423 0 1861 216 0 1862 427 0 1872 162 0 1873 428 0 1874 429 0 1875 162 0 1876 427 0 1877 430 0 1878 163 0 1879 431 0 1880 163 0 1881 162 0 1882 431 0 1883 163 0 1884 430 0 1885 432 0 1886 163 0 1887 432 0 1888 372 0 1889 162 0 1893 429 0 1894 431 0 1895 309 0 2967 540 0 2968 546 0 2969 309 0 2970 546 0 2971 94 0 2972 94 0 2973 546 0 2974 547 0 2975 94 0 2976 547 0 2977 96 0 2978 548 0 2979 96 0 2980 547 0 2981 96 0 2982 548 0 2983 549 0 2984 96 0 2985 549 0 2986 98 0 2987 550 0 2988 98 0 2989 549 0 2990 535 0 2991 98 0 2992 551 0 2993 98 0 3039 550 0 3040 551 0 3041 0 201 100 0 1527 310 0 1528 312 0 1529 312 0 1530 101 0 1531 100 0 1532 101 0 1533 312 0 1534 315 0 1535 315 0 1536 104 0 1537 101 0 1538 104 0 1539 315 0 1540 317 0 1541 317 0 1542 106 0 1543 104 0 1544 106 0 1545 317 0 1546 319 0 1547 319 0 1548 108 0 1549 106 0 1550 108 0 1551 319 0 1552 321 0 1553 321 0 1554 110 0 1555 108 0 1556 110 0 1557 321 0 1558 323 0 1559 323 0 1560 112 0 1561 110 0 1562 112 0 1563 323 0 1564 325 0 1565 325 0 1566 114 0 1567 112 0 1568 114 0 1569 325 0 1570 327 0 1571 327 0 1572 116 0 1573 114 0 1574 116 0 1575 327 0 1576 329 0 1577 329 0 1578 118 0 1579 116 0 1580 118 0 1581 329 0 1582 331 0 1583 331 0 1584 120 0 1585 118 0 1586 120 0 1587 331 0 1588 333 0 1589 333 0 1590 122 0 1591 120 0 1592 122 0 1593 333 0 1594 335 0 1595 335 0 1596 124 0 1597 122 0 1598 124 0 1599 335 0 1600 337 0 1601 337 0 1602 126 0 1603 124 0 1604 126 0 1605 337 0 1606 339 0 1607 339 0 1608 128 0 1609 126 0 1610 128 0 1611 339 0 1612 341 0 1613 341 0 1614 130 0 1615 128 0 1616 130 0 1617 341 0 1618 343 0 1619 343 0 1620 132 0 1621 130 0 1622 132 0 1623 343 0 1624 345 0 1625 345 0 1626 134 0 1627 132 0 1628 134 0 1629 345 0 1630 347 0 1631 347 0 1632 136 0 1633 134 0 1634 136 0 1635 347 0 1636 349 0 1637 349 0 1638 138 0 1639 136 0 1640 138 0 1641 349 0 1642 351 0 1643 351 0 1644 140 0 1645 138 0 1646 140 0 1647 351 0 1648 353 0 1649 353 0 1650 142 0 1651 140 0 1652 142 0 1653 353 0 1654 355 0 1655 355 0 1656 144 0 1657 142 0 1658 144 0 1659 355 0 1660 357 0 1661 357 0 1662 146 0 1663 144 0 1664 146 0 1665 357 0 1666 359 0 1667 359 0 1668 148 0 1669 146 0 1670 148 0 1671 359 0 1672 361 0 1673 361 0 1674 150 0 1675 148 0 1676 150 0 1677 361 0 1678 363 0 1679 363 0 1680 152 0 1681 150 0 1682 152 0 1683 363 0 1684 365 0 1685 365 0 1686 154 0 1687 152 0 1688 154 0 1689 365 0 1690 367 0 1691 367 0 1692 156 0 1693 154 0 1694 156 0 1695 367 0 1696 369 0 1697 369 0 1698 158 0 1699 156 0 1700 158 0 1701 369 0 1702 371 0 1703 371 0 1704 160 0 1705 158 0 1706 371 0 1863 424 0 1864 425 0 1865 371 0 1866 425 0 1867 160 0 1868 160 0 1869 425 0 1870 426 0 1871 433 0 1890 160 0 1891 426 0 1892 543 0 2994 310 0 2995 552 0 2996 100 0 2997 538 0 2998 552 0 2999 100 0 3000 552 0 3001 310 0 3002 0 486 219 0 1896 3 0 1897 2 0 1898 2 0 1899 217 0 1900 219 0 1901 217 0 1902 2 0 1903 5 0 1904 5 0 1905 220 0 1906 217 0 1907 220 0 1908 5 0 1909 7 0 1910 7 0 1911 222 0 1912 220 0 1913 222 0 1914 7 0 1915 9 0 1916 9 0 1917 224 0 1918 222 0 1919 224 0 1920 9 0 1921 11 0 1922 11 0 1923 226 0 1924 224 0 1925 226 0 1926 11 0 1927 13 0 1928 13 0 1929 228 0 1930 226 0 1931 228 0 1932 13 0 1933 15 0 1934 15 0 1935 230 0 1936 228 0 1937 230 0 1938 15 0 1939 17 0 1940 17 0 1941 232 0 1942 230 0 1943 232 0 1944 17 0 1945 19 0 1946 19 0 1947 234 0 1948 232 0 1949 234 0 1950 19 0 1951 21 0 1952 21 0 1953 236 0 1954 234 0 1955 236 0 1956 21 0 1957 23 0 1958 23 0 1959 238 0 1960 236 0 1961 238 0 1962 23 0 1963 25 0 1964 25 0 1965 240 0 1966 238 0 1967 240 0 1968 25 0 1969 27 0 1970 27 0 1971 242 0 1972 240 0 1973 242 0 1974 27 0 1975 29 0 1976 29 0 1977 244 0 1978 242 0 1979 244 0 1980 29 0 1981 31 0 1982 31 0 1983 246 0 1984 244 0 1985 246 0 1986 31 0 1987 33 0 1988 33 0 1989 248 0 1990 246 0 1991 248 0 1992 33 0 1993 35 0 1994 35 0 1995 250 0 1996 248 0 1997 250 0 1998 35 0 1999 37 0 2000 37 0 2001 252 0 2002 250 0 2003 252 0 2004 37 0 2005 39 0 2006 39 0 2007 254 0 2008 252 0 2009 254 0 2010 39 0 2011 41 0 2012 41 0 2013 256 0 2014 254 0 2015 256 0 2016 41 0 2017 43 0 2018 43 0 2019 258 0 2020 256 0 2021 258 0 2022 43 0 2023 45 0 2024 45 0 2025 260 0 2026 258 0 2027 260 0 2028 45 0 2029 47 0 2030 47 0 2031 262 0 2032 260 0 2033 262 0 2034 47 0 2035 49 0 2036 49 0 2037 264 0 2038 262 0 2039 264 0 2040 49 0 2041 51 0 2042 51 0 2043 266 0 2044 264 0 2045 266 0 2046 51 0 2047 53 0 2048 53 0 2049 268 0 2050 266 0 2051 268 0 2052 53 0 2053 55 0 2054 55 0 2055 270 0 2056 268 0 2057 270 0 2058 55 0 2059 57 0 2060 57 0 2061 272 0 2062 270 0 2063 272 0 2064 57 0 2065 59 0 2066 59 0 2067 274 0 2068 272 0 2069 274 0 2070 59 0 2071 61 0 2072 61 0 2073 276 0 2074 274 0 2075 276 0 2076 61 0 2077 63 0 2078 63 0 2079 278 0 2080 276 0 2081 278 0 2082 63 0 2083 65 0 2084 65 0 2085 280 0 2086 278 0 2087 280 0 2088 65 0 2089 67 0 2090 67 0 2091 282 0 2092 280 0 2093 282 0 2094 67 0 2095 69 0 2096 69 0 2097 284 0 2098 282 0 2099 284 0 2100 69 0 2101 71 0 2102 71 0 2103 286 0 2104 284 0 2105 286 0 2106 71 0 2107 73 0 2108 73 0 2109 288 0 2110 286 0 2111 288 0 2112 73 0 2113 75 0 2114 75 0 2115 290 0 2116 288 0 2117 290 0 2118 75 0 2119 77 0 2120 77 0 2121 292 0 2122 290 0 2123 292 0 2124 77 0 2125 79 0 2126 79 0 2127 294 0 2128 292 0 2129 294 0 2130 79 0 2131 81 0 2132 81 0 2133 296 0 2134 294 0 2135 296 0 2136 81 0 2137 83 0 2138 83 0 2139 298 0 2140 296 0 2141 298 0 2142 83 0 2143 85 0 2144 85 0 2145 300 0 2146 298 0 2147 300 0 2148 85 0 2149 87 0 2150 87 0 2151 302 0 2152 300 0 2153 302 0 2154 87 0 2155 89 0 2156 89 0 2157 304 0 2158 302 0 2159 304 0 2160 89 0 2161 91 0 2162 91 0 2163 306 0 2164 304 0 2165 306 0 2166 91 0 2167 93 0 2168 93 0 2169 308 0 2170 306 0 2171 308 0 2172 93 0 2173 95 0 2174 375 0 2355 164 0 2356 167 0 2357 167 0 2358 373 0 2359 375 0 2360 373 0 2361 167 0 2362 169 0 2363 169 0 2364 376 0 2365 373 0 2366 376 0 2367 169 0 2368 171 0 2369 171 0 2370 378 0 2371 376 0 2372 378 0 2373 171 0 2374 173 0 2375 173 0 2376 380 0 2377 378 0 2378 380 0 2379 173 0 2380 175 0 2381 175 0 2382 382 0 2383 380 0 2384 382 0 2385 175 0 2386 177 0 2387 177 0 2388 384 0 2389 382 0 2390 384 0 2391 177 0 2392 179 0 2393 179 0 2394 386 0 2395 384 0 2396 386 0 2397 179 0 2398 181 0 2399 181 0 2400 388 0 2401 386 0 2402 388 0 2403 181 0 2404 183 0 2405 183 0 2406 390 0 2407 388 0 2408 390 0 2409 183 0 2410 185 0 2411 185 0 2412 392 0 2413 390 0 2414 392 0 2415 185 0 2416 187 0 2417 187 0 2418 394 0 2419 392 0 2420 394 0 2421 187 0 2422 189 0 2423 189 0 2424 396 0 2425 394 0 2426 396 0 2427 189 0 2428 191 0 2429 191 0 2430 398 0 2431 396 0 2432 398 0 2433 191 0 2434 193 0 2435 193 0 2436 400 0 2437 398 0 2438 400 0 2439 193 0 2440 195 0 2441 195 0 2442 402 0 2443 400 0 2444 402 0 2445 195 0 2446 197 0 2447 197 0 2448 404 0 2449 402 0 2450 404 0 2451 197 0 2452 199 0 2453 199 0 2454 406 0 2455 404 0 2456 406 0 2457 199 0 2458 201 0 2459 201 0 2460 408 0 2461 406 0 2462 408 0 2463 201 0 2464 203 0 2465 203 0 2466 410 0 2467 408 0 2468 410 0 2469 203 0 2470 205 0 2471 205 0 2472 412 0 2473 410 0 2474 412 0 2475 205 0 2476 207 0 2477 207 0 2478 414 0 2479 412 0 2480 414 0 2481 207 0 2482 209 0 2483 209 0 2484 416 0 2485 414 0 2486 416 0 2487 209 0 2488 211 0 2489 211 0 2490 418 0 2491 416 0 2492 418 0 2493 211 0 2494 213 0 2495 213 0 2496 420 0 2497 418 0 2498 420 0 2499 213 0 2500 215 0 2501 215 0 2502 422 0 2503 420 0 2504 422 0 2505 215 0 2506 3 0 2507 3 0 2508 219 0 2509 422 0 2510 437 0 2520 165 0 2521 438 0 2522 438 0 2523 165 0 2524 439 0 2525 164 0 2526 440 0 2527 441 0 2528 165 0 2529 164 0 2530 441 0 2531 375 0 2532 442 0 2533 440 0 2534 375 0 2535 440 0 2536 164 0 2537 439 0 2541 165 0 2542 441 0 2543 95 0 3003 553 0 3004 542 0 3005 95 0 3006 542 0 3007 308 0 3008 97 0 3009 554 0 3010 553 0 3011 97 0 3012 553 0 3013 95 0 3014 554 0 3015 97 0 3016 555 0 3017 99 0 3018 556 0 3019 555 0 3020 99 0 3021 555 0 3022 97 0 3023 556 0 3024 99 0 3025 557 0 3026 99 0 3027 536 0 3028 558 0 3029 557 0 3042 99 0 3043 558 0 3044 0 201 103 0 2175 311 0 2176 313 0 2177 311 0 2178 103 0 2179 102 0 2180 102 0 2181 314 0 2182 311 0 2183 314 0 2184 102 0 2185 105 0 2186 105 0 2187 316 0 2188 314 0 2189 316 0 2190 105 0 2191 107 0 2192 107 0 2193 318 0 2194 316 0 2195 318 0 2196 107 0 2197 109 0 2198 109 0 2199 320 0 2200 318 0 2201 320 0 2202 109 0 2203 111 0 2204 111 0 2205 322 0 2206 320 0 2207 322 0 2208 111 0 2209 113 0 2210 113 0 2211 324 0 2212 322 0 2213 324 0 2214 113 0 2215 115 0 2216 115 0 2217 326 0 2218 324 0 2219 326 0 2220 115 0 2221 117 0 2222 117 0 2223 328 0 2224 326 0 2225 328 0 2226 117 0 2227 119 0 2228 119 0 2229 330 0 2230 328 0 2231 330 0 2232 119 0 2233 121 0 2234 121 0 2235 332 0 2236 330 0 2237 332 0 2238 121 0 2239 123 0 2240 123 0 2241 334 0 2242 332 0 2243 334 0 2244 123 0 2245 125 0 2246 125 0 2247 336 0 2248 334 0 2249 336 0 2250 125 0 2251 127 0 2252 127 0 2253 338 0 2254 336 0 2255 338 0 2256 127 0 2257 129 0 2258 129 0 2259 340 0 2260 338 0 2261 340 0 2262 129 0 2263 131 0 2264 131 0 2265 342 0 2266 340 0 2267 342 0 2268 131 0 2269 133 0 2270 133 0 2271 344 0 2272 342 0 2273 344 0 2274 133 0 2275 135 0 2276 135 0 2277 346 0 2278 344 0 2279 346 0 2280 135 0 2281 137 0 2282 137 0 2283 348 0 2284 346 0 2285 348 0 2286 137 0 2287 139 0 2288 139 0 2289 350 0 2290 348 0 2291 350 0 2292 139 0 2293 141 0 2294 141 0 2295 352 0 2296 350 0 2297 352 0 2298 141 0 2299 143 0 2300 143 0 2301 354 0 2302 352 0 2303 354 0 2304 143 0 2305 145 0 2306 145 0 2307 356 0 2308 354 0 2309 356 0 2310 145 0 2311 147 0 2312 147 0 2313 358 0 2314 356 0 2315 358 0 2316 147 0 2317 149 0 2318 149 0 2319 360 0 2320 358 0 2321 360 0 2322 149 0 2323 151 0 2324 151 0 2325 362 0 2326 360 0 2327 362 0 2328 151 0 2329 153 0 2330 153 0 2331 364 0 2332 362 0 2333 364 0 2334 153 0 2335 155 0 2336 155 0 2337 366 0 2338 364 0 2339 366 0 2340 155 0 2341 157 0 2342 157 0 2343 368 0 2344 366 0 2345 368 0 2346 157 0 2347 159 0 2348 159 0 2349 370 0 2350 368 0 2351 370 0 2352 159 0 2353 161 0 2354 161 0 2511 434 0 2512 435 0 2513 161 0 2514 435 0 2515 370 0 2516 434 0 2517 161 0 2518 436 0 2519 161 0 2538 443 0 2539 436 0 2540 559 0 3030 313 0 3031 545 0 3032 313 0 3033 559 0 3034 539 0 3035 313 0 3036 539 0 3037 103 0 3038 0 18 160 0 2544 444 0 2545 445 0 2546 160 0 2547 446 0 2548 447 0 2549 161 0 2550 160 0 2551 447 0 2552 446 0 2553 160 0 2554 445 0 2555 160 0 2556 433 0 2557 444 0 2558 443 0 2559 161 0 2560 447 0 2561 0 15 165 0 2562 448 0 2563 449 0 2564 165 0 2565 449 0 2566 162 0 2567 162 0 2568 449 0 2569 450 0 2570 428 0 2571 162 0 2572 450 0 2573 165 0 2574 437 0 2575 448 0 2576 0 18 371 0 2577 451 0 2578 452 0 2579 451 0 2580 371 0 2581 453 0 2582 371 0 2583 370 0 2584 453 0 2585 453 0 2586 370 0 2587 454 0 2588 424 0 2589 371 0 2590 452 0 2591 370 0 2592 435 0 2593 454 0 2594 0 18 455 0 2595 375 0 2596 456 0 2597 375 0 2598 372 0 2599 456 0 2600 375 0 2601 455 0 2602 457 0 2603 456 0 2604 372 0 2605 458 0 2606 442 0 2607 375 0 2608 457 0 2609 372 0 2610 432 0 2611 458 0 2612 0 24 459 0 2613 445 0 2614 452 0 2615 452 0 2616 445 0 2617 444 0 2618 445 0 2619 459 0 2620 451 0 2621 454 0 2622 447 0 2623 460 0 2624 460 0 2625 447 0 2626 446 0 2627 453 0 2628 445 0 2629 451 0 2630 460 0 2631 446 0 2632 453 0 2633 453 0 2634 446 0 2635 445 0 2636 0 18 461 0 2637 449 0 2638 455 0 2639 449 0 2640 448 0 2641 455 0 2642 449 0 2643 461 0 2644 456 0 2645 458 0 2646 450 0 2647 456 0 2648 456 0 2649 450 0 2650 449 0 2651 448 0 2652 457 0 2653 455 0 2654 0 48 452 0 2655 462 0 2656 424 0 2657 462 0 2658 452 0 2659 463 0 2660 464 0 2661 463 0 2662 452 0 2663 433 0 2664 465 0 2665 444 0 2666 465 0 2667 433 0 2668 466 0 2669 426 0 2670 466 0 2671 433 0 2672 467 0 2673 468 0 2674 464 0 2675 464 0 2676 468 0 2677 463 0 2678 469 0 2679 425 0 2680 467 0 2681 467 0 2682 425 0 2683 468 0 2684 425 0 2685 470 0 2686 471 0 2687 425 0 2688 469 0 2689 470 0 2690 425 0 2691 471 0 2692 472 0 2693 473 0 2694 426 0 2695 472 0 2696 472 0 2697 426 0 2698 425 0 2699 426 0 2700 473 0 2701 466 0 2702 0 63 474 0 2703 475 0 2704 476 0 2705 476 0 2706 475 0 2707 477 0 2708 447 0 2709 478 0 2710 443 0 2711 478 0 2712 447 0 2713 479 0 2714 479 0 2715 447 0 2716 480 0 2717 479 0 2718 480 0 2719 474 0 2720 474 0 2721 480 0 2722 475 0 2723 476 0 2724 477 0 2725 481 0 2726 481 0 2727 477 0 2728 482 0 2729 481 0 2730 482 0 2731 436 0 2732 436 0 2733 482 0 2734 483 0 2735 435 0 2736 484 0 2737 485 0 2738 484 0 2739 435 0 2740 486 0 2741 486 0 2742 435 0 2743 487 0 2744 435 0 2745 485 0 2746 454 0 2747 486 0 2748 487 0 2749 488 0 2750 488 0 2751 487 0 2752 434 0 2753 434 0 2754 489 0 2755 488 0 2756 434 0 2757 490 0 2758 489 0 2759 490 0 2760 434 0 2761 483 0 2762 483 0 2763 434 0 2764 436 0 2765 0 93 457 0 2766 491 0 2767 442 0 2768 491 0 2769 457 0 2770 492 0 2771 493 0 2772 494 0 2773 495 0 2774 495 0 2775 494 0 2776 492 0 2777 494 0 2778 493 0 2779 496 0 2780 495 0 2781 492 0 2782 457 0 2783 497 0 2784 498 0 2785 496 0 2786 496 0 2787 498 0 2788 494 0 2789 499 0 2790 437 0 2791 500 0 2792 500 0 2793 437 0 2794 501 0 2795 437 0 2796 499 0 2797 448 0 2798 441 0 2799 502 0 2800 503 0 2801 502 0 2802 441 0 2803 504 0 2804 504 0 2805 441 0 2806 505 0 2807 441 0 2808 503 0 2809 506 0 2810 504 0 2811 505 0 2812 507 0 2813 507 0 2814 505 0 2815 440 0 2816 440 0 2817 508 0 2818 507 0 2819 508 0 2820 440 0 2821 497 0 2822 497 0 2823 440 0 2824 498 0 2825 509 0 2826 510 0 2827 511 0 2828 511 0 2829 510 0 2830 439 0 2831 439 0 2832 512 0 2833 511 0 2834 439 0 2835 513 0 2836 512 0 2837 513 0 2838 439 0 2839 506 0 2840 500 0 2841 501 0 2842 514 0 2843 514 0 2844 501 0 2845 438 0 2846 438 0 2847 515 0 2848 514 0 2849 441 0 2850 506 0 2851 439 0 2852 515 0 2853 438 0 2854 509 0 2855 509 0 2856 438 0 2857 510 0 2858 0 72 516 0 2859 427 0 2860 517 0 2861 517 0 2862 427 0 2863 518 0 2864 517 0 2865 518 0 2866 519 0 2867 519 0 2868 518 0 2869 520 0 2870 450 0 2871 521 0 2872 428 0 2873 521 0 2874 450 0 2875 520 0 2876 430 0 2877 458 0 2878 432 0 2879 427 0 2880 516 0 2881 522 0 2882 519 0 2883 520 0 2884 450 0 2885 430 0 2886 523 0 2887 524 0 2888 523 0 2889 430 0 2890 525 0 2891 525 0 2892 430 0 2893 431 0 2894 430 0 2895 524 0 2896 526 0 2897 430 0 2898 526 0 2899 458 0 2900 429 0 2901 527 0 2902 528 0 2903 427 0 2904 522 0 2905 529 0 2906 530 0 2907 429 0 2908 529 0 2909 529 0 2910 429 0 2911 427 0 2912 531 0 2913 528 0 2914 532 0 2915 532 0 2916 528 0 2917 533 0 2918 528 0 2919 531 0 2920 429 0 2921 532 0 2922 533 0 2923 431 0 2924 431 0 2925 533 0 2926 525 0 2927 429 0 2928 530 0 2929 527 0 2930 0 9 534 0 2931 98 0 2932 535 0 2933 98 0 2934 534 0 2935 536 0 2936 98 0 2937 536 0 2938 99 0 2939 0 9 103 0 2940 537 0 2941 538 0 2942 103 0 2943 538 0 2944 100 0 2945 537 0 2946 103 0 2947 539 0 2948 0 9 540 0 2949 309 0 2950 541 0 2951 308 0 2952 542 0 2953 541 0 2954 308 0 2955 541 0 2956 309 0 2957 0 9 310 0 2958 543 0 2959 544 0 2960 310 0 2961 544 0 2962 313 0 2963 545 0 2964 313 0 2965 544 0 2966 0 24 560 0 3045 538 0 3046 561 0 3047 561 0 3048 538 0 3049 537 0 3050 544 0 3060 538 0 3061 545 0 3062 552 0 3063 538 0 3064 544 0 3065 543 0 3066 552 0 3067 544 0 3068 561 0 3069 537 0 3070 539 0 3071 545 0 3090 538 0 3091 559 0 3092 538 0 3096 560 0 3097 559 0 3098 0 78 562 0 3051 534 0 3052 563 0 3053 563 0 3054 534 0 3055 535 0 3056 541 0 3057 564 0 3058 540 0 3059 534 0 3072 562 0 3073 536 0 3074 563 0 3075 535 0 3076 558 0 3077 558 0 3078 535 0 3079 551 0 3080 564 0 3081 541 0 3082 565 0 3083 565 0 3084 541 0 3085 542 0 3086 565 0 3087 542 0 3088 546 0 3089 566 0 3093 546 0 3094 542 0 3095 546 0 3099 566 0 3100 553 0 3101 547 0 3102 546 0 3103 553 0 3104 547 0 3105 567 0 3106 554 0 3107 548 0 3108 547 0 3109 554 0 3110 567 0 3111 547 0 3112 553 0 3113 548 0 3114 568 0 3115 555 0 3116 549 0 3117 548 0 3118 555 0 3119 568 0 3120 548 0 3121 554 0 3122 550 0 3123 569 0 3124 557 0 3125 549 0 3126 570 0 3127 556 0 3128 550 0 3129 549 0 3130 556 0 3131 570 0 3132 549 0 3133 555 0 3134 557 0 3135 571 0 3136 550 0 3137 571 0 3138 557 0 3139 551 0 3140 569 0 3141 550 0 3142 556 0 3143 558 0 3144 551 0 3145 557 0 3146 0"
			}
		}
		.component NeoAxis.RigidBody2D
		{
			Name = Collision Body
			Transform = "9.36180936794383 6.69150356670892 0; 0 0 0 1; 14.1149504763702 14.1149504763702 0.1"
			.component NeoAxis.CollisionShape2D_Mesh
			{
				CollidesWith = All
				ShapeType = TriangleMesh
				Mesh
				{
					GetByReference = "this:..\\..\\Mesh"
				}
				Vertices
				{
				}
				Indices
				{
				}
			}
		}
	}
	.component NeoAxis.Character2D
	{
		Name = Character 2D 2
		Height = 1.2
		PositionToGroundHeight = 0.75
		EyePosition = 0.05 0.2
		RunSupport = True
		FlyControlSupport = True
		JumpSupport = True
		Animate = True
		Transform
		{
			GetByReference = "this:$Collision Body\\Transform"
		}
		IdleAnimation
		{
			GetByReference = "Content\\2D\\Penguin\\Animation Idle.component"
		}
		WalkAnimation
		{
			GetByReference = "Content\\2D\\Penguin\\Animation Walk.component"
		}
		FlyAnimation
		{
			GetByReference = "Content\\2D\\Penguin\\Animation Fly.component"
		}
		JumpAnimation
		{
			GetByReference = "Content\\2D\\Penguin\\Animation Jump.component"
		}
		.component NeoAxis.RigidBody2D
		{
			Name = Collision Body
			CanBeSelected = False
			Transform = "-7.70199103011987 0.882434492173955 1; 0 0 0 1; 1 1 1"
			MotionType = Dynamic
			Mass = 70
			AngularDamping = 10
			FixedRotation = True
			.component NeoAxis.CollisionShape2D_Capsule
			{
				Name = Capsule Shape
				LocalTransform = "0 0 -0.15; 0 0 0 1; 1 1 1"
				Friction = 0
				CollidesWith = All
				Radius = 0.3
				Height = 0.6
			}
		}
		.component NeoAxis.Sprite
		{
			Name = Sprite
			CanBeSelected = False
			Color = 1 0.6503922 0.5325882
			Transform
			{
				GetByReference = "this:$Transform Offset\\Result"
			}
			ReplaceMaterialSelectively
			{
				Count = 0
			}
			SpecialEffects
			{
				Value
				{
					Count = 0
				}
			}
			.component NeoAxis.SpriteAnimationController
			{
				Name = Sprite Animation Controller
			}
			.component NeoAxis.TransformOffset
			{
				Name = Transform Offset
				PositionOffset = 0 -0.05 0
				ScaleOffset = 1.2 1.2 1.2
				Source
				{
					GetByReference = "this:..\\..\\Transform"
				}
			}
		}
		.component NeoAxis.Character2DInputProcessing
		{
			Name = Character Input Processing
		}
		.component NeoAxis.Character2DAI
		{
			Name = Character AI
			.component NeoAxis.Character2DAITask_MoveToObject
			{
				Name = Move To Object
				Target
				{
					GetByReference = "this:..\\..\\..\\$AI Destination"
				}
			}
			.component NeoAxis.Character2DAITask_MoveToObject
			{
				Name = Move To Object 2
				Target
				{
					GetByReference = "this:..\\..\\..\\$AI Destination 2"
				}
			}
		}
	}
	.component NeoAxis.Text2D
	{
		Name = Text 2D
		Transform = "2.46330644262302 5.0236435208016 4; 0 0 0 1; 1 1 1"
		Text = Weapon 2D
	}
	.component NeoAxis.Text2D
	{
		Name = Text 2D 3
		Transform = "9.40283175537736 9.89239752084664 4; 0 0 0 1; 1 1 1"
		Text = Modeling tools
	}
	.component NeoAxis.Text2D
	{
		Name = Text 2D 2
		Transform = "-4.3931125399902 2.02369647580582 4; 0 0 0 1; 1 1 1"
		Text = Character 2D AI
	}
	.component NeoAxis.Text2D
	{
		Name = Text 2D 4
		Transform = "2.81521829648632 -3.80274628273585 4; 0 0 0 1; 1 1 1"
		Text = Destroying Sensor 2D
	}
	.component NeoAxis.Text2D
	{
		Name = Text 2D 5
		Transform = "11.0247061935846 -0.919558113560584 4; 0 0 0 1; 1 1 1"
		Text = "Button\r\nClick mouse button"
	}
	.component NeoAxis.Text2D
	{
		Name = Text 2D 6
		Transform = "-7.27644487458078 9.75224254040062 4; 0 0 0 1; 1 1 1"
		Text = Regulator Switch
	}
	.component NeoAxis.ObjectInSpace
	{
		Name = AI Destination
		Transform = "-1.08436471439531 0.96252305242882 0; 0 0 0 1; 1 1 1"
	}
	.component NeoAxis.ObjectInSpace
	{
		Name = AI Destination 2
		Transform = "-6.85102938357652 0.96252305242882 0; 0 0 0 1; 1 1 1"
	}
	.component NeoAxis.ButtonInSpace
	{
		Name = Button
		Transform = "11.0682068957314 -1.72044371610927 0; -0.5 -0.5 -0.5 0.5; 2 2 2"
		Color = 0.6784314 0.6784314 0.6784314
		Activated = True
		Mesh
		{
			GetByReference = "this:$Mesh"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.Mesh
		{
			Name = Mesh
			.component NeoAxis.MeshGeometry_Box
			{
				Name = Mesh Geometry
				Dimensions = 0.05 0.3 0.3
				Material
				{
					GetByReference = "Base\\Materials\\White.material"
				}
			}
		}
		.component NeoAxis.MeshInSpace
		{
			Name = Button
			Transform
			{
				GetByReference = "this:$Attach Transform Offset\\Result"
			}
			Mesh
			{
				GetByReference = "this:$Mesh"
			}
			ReplaceMaterialSelectively
			{
				Count = 0
			}
			SpecialEffects
			{
				Value
				{
					Count = 0
				}
			}
			.component NeoAxis.Mesh
			{
				Name = Mesh
				.component NeoAxis.MeshGeometry_Box
				{
					Name = Mesh Geometry
					Dimensions = 0.05 0.15 0.15
					Material
					{
						GetByReference = "Base\\Materials\\White.material"
					}
				}
			}
			.component NeoAxis.TransformOffset
			{
				Name = Attach Transform Offset
				PositionOffset = 0.05 0 0
				Source
				{
					GetByReference = "this:..\\..\\Transform"
				}
			}
		}
		.component NeoAxis.MeshInSpace
		{
			Name = Indicator
			Color = 0 1 0
			Transform
			{
				GetByReference = "this:$Attach Transform Offset\\Result"
			}
			Mesh
			{
				GetByReference = "this:$Mesh"
			}
			ReplaceMaterialSelectively
			{
				Count = 0
			}
			SpecialEffects
			{
				Value
				{
					Count = 0
				}
			}
			.component NeoAxis.Mesh
			{
				Name = Mesh
				.component NeoAxis.MeshGeometry_Cylinder
				{
					Name = Mesh Geometry
					Axis = 0
					Radius = 0.02
					Height = 0.02
					Segments = 16
					Material
					{
						GetByReference = "Base\\Materials\\White.material"
					}
				}
			}
			.component NeoAxis.TransformOffset
			{
				Name = Attach Transform Offset
				PositionOffset = 0.03 0 0.12
				Source
				{
					GetByReference = "this:..\\..\\Transform"
				}
			}
		}
		.component NeoAxis.CSharpScript
		{
			Name = C# Script
			Code = "public void InteractiveObjectButton_UpdateEvent(NeoAxis.Component sender, float delta)\r\n{\r\n\tvar _this = sender as ButtonInSpace;\r\n\tif (_this != null)\r\n\t{\r\n\t\tvar indicator = _this.GetComponent(\"Indicator\") as MeshInSpace;\r\n\t\tif (indicator != null)\r\n\t\t\tindicator.Color = _this.Activated ? new ColorValue(0, 1, 0) : new ColorValue(0.5, 0.5, 0.5);\r\n\r\n\t\tvar buttonOffset = _this.Components.GetByPath(\"Button\\\\Attach Transform Offset\") as TransformOffset;\r\n\t\tif (buttonOffset != null)\r\n\t\t{\r\n\t\t\tvar offsetPushed = 0.01;\r\n\t\t\tvar offsetDefault = 0.05;\r\n\r\n\t\t\tvar coef = 0.0;\r\n\t\t\tif (_this.Clicking && _this.ClickingTotalTime != 0)\r\n\t\t\t{\r\n\t\t\t\tvar timeFactor = MathEx.Saturate(_this.ClickingCurrentTime / _this.ClickingTotalTime);\r\n\r\n\t\t\t\tif(timeFactor < 0.5)\r\n\t\t\t\t\tcoef = timeFactor * 2;\r\n\t\t\t\telse\r\n\t\t\t\t\tcoef = (1.0f - timeFactor) * 2;\r\n\t\t\t}\r\n\r\n\t\t\tvar offset = MathEx.Lerp(offsetDefault, offsetPushed, coef);\r\n\t\t\tbuttonOffset.PositionOffset = new Vector3(offset, 0, 0);\r\n\t\t}\r\n\t}\r\n}"
			__parameter_Delta = 0
			Exit
			{
			}
			.component NeoAxis.EventHandlerComponent
			{
				Name = Event Handler UpdateEvent
				WhenEnable = Editor, Simulation, Instance
				Event
				{
					GetByReference = "this:..\\..\\event:UpdateEvent"
				}
				HandlerMethod
				{
					GetByReference = "this:..\\method:InteractiveObjectButton_UpdateEvent(NeoAxis.Component,System.Single)"
				}
				HandlerFlow
				{
				}
			}
		}
		.component NeoAxis.CSharpScript
		{
			Name = C# Script
			Code = "public void Button_Click(NeoAxis.ButtonInSpace sender)\r\n{\r\n\tvar scene = sender.ParentScene;\r\n\r\n\tvar light = scene.GetComponent(\"Ambient Light\") as Light;\r\n\tif (light != null)\r\n\t\tlight.Enabled = sender.Activated;\t\r\n}\r\n"
			Exit
			{
			}
			.component NeoAxis.EventHandlerComponent
			{
				Name = Event Handler Click
				Event
				{
					GetByReference = "this:..\\..\\event:Click"
				}
				HandlerMethod
				{
					GetByReference = "this:..\\method:Button_Click(NeoAxis.ButtonInSpace)"
				}
				HandlerFlow
				{
				}
			}
		}
	}
	.component NeoAxis.RegulatorSwitchInSpace
	{
		Name = Regulator Switch
		Transform = "-7.23294134109314 8.87126837759707 0; -0.5 -0.5 -0.5 0.5; 2 2 2"
		Color = 0.6784314 0.6784314 0.6784314
		Mesh
		{
			GetByReference = "this:$Mesh"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.Mesh
		{
			Name = Mesh
			.component NeoAxis.MeshGeometry_Box
			{
				Name = Mesh Geometry
				Dimensions = 0.05 0.3 0.3
				Material
				{
					GetByReference = "Base\\Materials\\White.material"
				}
			}
		}
		.component NeoAxis.MeshInSpace
		{
			Name = Button
			Transform
			{
				GetByReference = "this:$Attach Transform Offset\\Result"
			}
			Mesh
			{
				GetByReference = "this:$Mesh"
			}
			ReplaceMaterialSelectively
			{
				Count = 0
			}
			SpecialEffects
			{
				Value
				{
					Count = 0
				}
			}
			.component NeoAxis.Mesh
			{
				Name = Mesh
				.component NeoAxis.MeshGeometry_Cylinder
				{
					Name = Mesh Geometry
					Axis = 0
					Radius = 0.08
					Height = 0.08
					Material
					{
						GetByReference = "Base\\Materials\\White.material"
					}
				}
			}
			.component NeoAxis.TransformOffset
			{
				Name = Attach Transform Offset
				PositionOffset = 0.05 0 0
				RotationOffset = 0.923879532511287 0 -0 0.38268343236509
				Source
				{
					GetByReference = "this:..\\..\\Transform"
				}
			}
		}
		.component NeoAxis.MeshInSpace
		{
			Name = Indicator Min
			Color = 1 0 0
			Transform
			{
				GetByReference = "this:$Attach Transform Offset\\Result"
			}
			Mesh
			{
				GetByReference = "this:$Mesh"
			}
			ReplaceMaterialSelectively
			{
				Count = 0
			}
			SpecialEffects
			{
				Value
				{
					Count = 0
				}
			}
			.component NeoAxis.Mesh
			{
				Name = Mesh
				.component NeoAxis.MeshGeometry_Cylinder
				{
					Name = Mesh Geometry
					Axis = 0
					Radius = 0.02
					Height = 0.02
					Segments = 16
					Material
					{
						GetByReference = "Base\\Materials\\White.material"
					}
				}
			}
			.component NeoAxis.TransformOffset
			{
				Name = Attach Transform Offset
				PositionOffset = 0.03 -0.11 0.11
				Source
				{
					GetByReference = "this:..\\..\\Transform"
				}
			}
		}
		.component NeoAxis.MeshInSpace
		{
			Name = Indicator Max
			Color = 0.5 0.5 0.5
			Transform
			{
				GetByReference = "this:$Attach Transform Offset\\Result"
			}
			Mesh
			{
				GetByReference = "this:$Mesh"
			}
			ReplaceMaterialSelectively
			{
				Count = 0
			}
			SpecialEffects
			{
				Value
				{
					Count = 0
				}
			}
			.component NeoAxis.Mesh
			{
				Name = Mesh
				.component NeoAxis.MeshGeometry_Cylinder
				{
					Name = Mesh Geometry
					Axis = 0
					Radius = 0.02
					Height = 0.02
					Segments = 16
					Material
					{
						GetByReference = "Base\\Materials\\White.material"
					}
				}
			}
			.component NeoAxis.TransformOffset
			{
				Name = Attach Transform Offset
				PositionOffset = 0.03 0.11 0.11
				Source
				{
					GetByReference = "this:..\\..\\Transform"
				}
			}
		}
		.component NeoAxis.MeshInSpace
		{
			Name = Marker Min
			Color = 1 0 0
			Transform
			{
				GetByReference = "this:$Attach Transform Offset\\Result"
			}
			Mesh
			{
				GetByReference = "this:$Mesh"
			}
			ReplaceMaterialSelectively
			{
				Count = 0
			}
			SpecialEffects
			{
				Value
				{
					Count = 0
				}
			}
			.component NeoAxis.Mesh
			{
				Name = Mesh
				.component NeoAxis.MeshGeometry_Box
				{
					Name = Mesh Geometry
					Dimensions = 0.05 0.14 0.01
					Material
					{
						GetByReference = "Base\\Materials\\White.material"
					}
				}
			}
			.component NeoAxis.TransformOffset
			{
				Name = Attach Transform Offset
				PositionOffset = 0.01 -0.0282842712474619 0.0282842712474619
				RotationOffset = 0.923879532511287 0 -0 0.38268343236509
				Source
				{
					GetByReference = "this:..\\..\\Transform"
				}
			}
		}
		.component NeoAxis.MeshInSpace
		{
			Name = Marker Max
			Color = 0 1 0
			Transform
			{
				GetByReference = "this:$Attach Transform Offset\\Result"
			}
			Mesh
			{
				GetByReference = "this:$Mesh"
			}
			ReplaceMaterialSelectively
			{
				Count = 0
			}
			SpecialEffects
			{
				Value
				{
					Count = 0
				}
			}
			.component NeoAxis.Mesh
			{
				Name = Mesh
				.component NeoAxis.MeshGeometry_Box
				{
					Name = Mesh Geometry
					Dimensions = 0.05 0.14 0.01
					Material
					{
						GetByReference = "Base\\Materials\\White.material"
					}
				}
			}
			.component NeoAxis.TransformOffset
			{
				Name = Attach Transform Offset
				PositionOffset = 0.01 0.0282842712474619 0.0282842712474619
				RotationOffset = 0.38268343236509 0 -0 0.923879532511287
				Source
				{
					GetByReference = "this:..\\..\\Transform"
				}
			}
		}
		.component NeoAxis.MeshInSpace
		{
			Name = Marker Current
			Transform
			{
				GetByReference = "this:$Attach Transform Offset\\Result"
			}
			Mesh
			{
				GetByReference = "this:$Mesh"
			}
			ReplaceMaterialSelectively
			{
				Count = 0
			}
			SpecialEffects
			{
				Value
				{
					Count = 0
				}
			}
			.component NeoAxis.Mesh
			{
				Name = Mesh
				.component NeoAxis.MeshGeometry_Box
				{
					Name = Mesh Geometry
					Dimensions = 0.05 0.14 0.01
					Material
					{
						GetByReference = "Base\\Materials\\White.material"
					}
				}
			}
			.component NeoAxis.TransformOffset
			{
				Name = Attach Transform Offset
				PositionOffset = 0.06 -0.0282842712474619 0.0282842712474619
				RotationOffset = 0.923879532511287 0 -0 0.38268343236509
				Source
				{
					GetByReference = "this:..\\..\\Transform"
				}
			}
		}
		.component NeoAxis.CSharpScript
		{
			Name = C# Script
			Code = "public void InteractiveObjectButton_UpdateEvent(NeoAxis.Component sender, float delta)\r\n{\r\n\tvar _this = sender as RegulatorSwitchInSpace;\r\n\tif (_this != null)\r\n\t{\r\n\t\tvar indicatorMin = _this.GetComponent(\"Indicator Min\") as MeshInSpace;\r\n\t\tif (indicatorMin != null)\r\n\t\t\tindicatorMin.Color = _this.Value.Value <= _this.ValueRange.Value.Minimum ? new ColorValue(1, 0, 0) : new ColorValue(0.5, 0.5, 0.5);\r\n\r\n\t\tvar indicatorMax = _this.GetComponent(\"Indicator Max\") as MeshInSpace;\r\n\t\tif (indicatorMax != null)\r\n\t\t\tindicatorMax.Color = _this.Value.Value >= _this.ValueRange.Value.Maximum ? new ColorValue(0, 1, 0) : new ColorValue(0.5, 0.5, 0.5);\r\n\r\n\t\tvar button = _this.GetComponent(\"Button\");\r\n\t\tif (button != null)\r\n\t\t{\r\n\t\t\tvar offset = button.GetComponent<TransformOffset>();\r\n\t\t\tif (offset != null)\r\n\t\t\t{\r\n\t\t\t\tvar angle = _this.GetValueAngle() - 90;\r\n\t\t\t\toffset.RotationOffset = new Angles(angle, 0, 0).ToQuaternion();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar markerMin = _this.GetComponent(\"Marker Min\");\r\n\t\tif (markerMin != null)\r\n\t\t{\r\n\t\t\tvar offset = markerMin.GetComponent<TransformOffset>();\r\n\t\t\tif (offset != null)\r\n\t\t\t{\r\n\t\t\t\tvar angle = _this.AngleRange.Value.Minimum - 90;\r\n\t\t\t\tvar angleR = MathEx.DegreeToRadian(angle);\r\n\t\t\t\toffset.PositionOffset = new Vector3(0.01, Math.Cos(angleR) * 0.04, Math.Sin(-angleR) * 0.04);\r\n\t\t\t\toffset.RotationOffset = new Angles(angle, 0, 0).ToQuaternion();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar markerMax = _this.GetComponent(\"Marker Max\");\r\n\t\tif (markerMax != null)\r\n\t\t{\r\n\t\t\tvar offset = markerMax.GetComponent<TransformOffset>();\r\n\t\t\tif (offset != null)\r\n\t\t\t{\r\n\t\t\t\tvar angle = _this.AngleRange.Value.Maximum - 90;\r\n\t\t\t\tvar angleR = MathEx.DegreeToRadian(angle);\r\n\t\t\t\toffset.PositionOffset = new Vector3(0.01, Math.Cos(angleR) * 0.04, Math.Sin(-angleR) * 0.04);\r\n\t\t\t\toffset.RotationOffset = new Angles(angle, 0, 0).ToQuaternion();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar markerCurrent = _this.GetComponent(\"Marker Current\");\r\n\t\tif (markerCurrent != null)\r\n\t\t{\r\n\t\t\tvar offset = markerCurrent.GetComponent<TransformOffset>();\r\n\t\t\tif (offset != null)\r\n\t\t\t{\r\n\t\t\t\tvar angle = _this.GetValueAngle() - 90;\r\n\t\t\t\tvar angleR = MathEx.DegreeToRadian(angle);\r\n\t\t\t\toffset.PositionOffset = new Vector3(0.06, Math.Cos(angleR) * 0.04, Math.Sin(-angleR) * 0.04);\r\n\t\t\t\toffset.RotationOffset = new Angles(angle, 0, 0).ToQuaternion();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}"
			__parameter_Delta = 0
			Exit
			{
			}
			.component NeoAxis.EventHandlerComponent
			{
				Name = Event Handler UpdateEvent
				WhenEnable = Editor, Simulation, Instance
				Event
				{
					GetByReference = "this:..\\..\\event:UpdateEvent"
				}
				HandlerMethod
				{
					GetByReference = "this:..\\method:InteractiveObjectButton_UpdateEvent(NeoAxis.Component,System.Single)"
				}
				HandlerFlow
				{
				}
			}
		}
		.component NeoAxis.CSharpScript
		{
			Name = C# Script
			Code = "public void RegulatorSwitch_ValueChanged(NeoAxis.RegulatorSwitchInSpace obj)\r\n{\r\n\tvar scene = obj.ParentScene;\r\n\r\n\tvar meshInSpace = scene.GetComponent(\"Ground\") as MeshInSpace;\r\n\tif (meshInSpace != null)\r\n\t\tmeshInSpace.Color = new ColorValue(1.0 - obj.Value, 1.0, 1.0 - obj.Value);\r\n}\r\n"
			Exit
			{
			}
			.component NeoAxis.EventHandlerComponent
			{
				Name = Event Handler ValueChanged
				Event
				{
					GetByReference = "this:..\\..\\event:ValueChanged"
				}
				HandlerMethod
				{
					GetByReference = "this:..\\method:RegulatorSwitch_ValueChanged(NeoAxis.RegulatorSwitchInSpace)"
				}
				HandlerFlow
				{
				}
			}
		}
	}
}
