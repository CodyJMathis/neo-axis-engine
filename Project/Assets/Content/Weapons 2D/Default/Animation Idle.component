// Made with NeoAxis Engine 2023.1.

.component NeoAxis.SpriteAnimation
{
	EditorDocumentConfiguration = "\xfeff<?xml version=\"1.0\" encoding=\"utf-16\"?><KD V=\"1\"><DGD /><DM N=\"DockingManager\" C=\"2\"><DW N=\"DockingWorkspace\" O=\"0\" S=\"1145, 842\"><KW V=\"1\" A=\"3D33E6A4FC334E527E9B1D317EEE4300\"><CGD /><WS UN=\"4A87E34386084E14BC81ED10FBED4D99\" S=\"T,0,50:T,0,50\" D=\"Horizontal\"><WC UN=\"1EB2D0EFFF1C43ACFDA79430446C7E46\" S=\"T,0,50:T,0,50\" NM=\"BarTabGroup\" AR=\"True\" SP=\"3D33E6A4FC334E527E9B1D317EEE4300\"><KP UN=\"68B5BAC1371946E42E9E97630BF2EF88\" S=\"False\"><CPD ObjPath=\"\" /></KP><KP UN=\"3D33E6A4FC334E527E9B1D317EEE4300\" S=\"False\"><CPD ObjPath=\"$Frame 1\\$Material\\$Shader graph\" /></KP></WC></WS></KW></DW><DF N=\"DockingFloating\" C=\"0\"></DF></DM></KD>"
	Length = 0
	.component NeoAxis.SpriteAnimationFrame
	{
		Name = Frame 1
		Material
		{
			GetByReference = "root:$Frame 1\\$Material"
		}
		.component NeoAxis.Material
		{
			Name = Material
			BlendMode = Transparent
			TwoSided = True
			ShadingModel = Unlit
			BaseColor
			{
				GetByReference = "this:$Shader graph\\$Node Texture Sample 1\\$Texture Sample\\RGBA"
			}
			Opacity
			{
				GetByReference = "this:$Shader graph\\$Node Texture Sample 1\\$Texture Sample\\A"
			}
			.component NeoAxis.FlowGraph
			{
				Name = Shader graph
				EditorScrollPosition = 0 0
				Specialization
				{
					GetByReference = NeoAxis.FlowGraphSpecialization_Shader|Instance
				}
				.component NeoAxis.FlowGraphNode
				{
					Name = Node Material
					Position = 10 -7
					ControlledObject
					{
						GetByReference = "this:..\\.."
					}
				}
				.component NeoAxis.FlowGraphNode
				{
					Name = Node Texture Sample 1
					Position = -16 -9
					ControlledObject
					{
						GetByReference = "this:$Texture Sample"
					}
					.component NeoAxis.ShaderTextureSample
					{
						Name = Texture Sample
						Location2 = 0 0
						Location3 = 0 0 0
						Texture
						{
							GetByReference = "Content\\Weapons 2D\\Default\\Weapon.png"
						}
					}
				}
			}
		}
	}
}
