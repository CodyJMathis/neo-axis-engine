// Made with NeoAxis Engine 2023.1.

.component NeoAxis.Import3D
{
	EditorDocumentConfiguration = "\xfeff<?xml version=\"1.0\" encoding=\"utf-16\"?><KD V=\"1\"><DGD /><DM N=\"DockingManager\" C=\"2\"><DW N=\"DockingWorkspace\" O=\"0\" S=\"1146, 842\"><KW V=\"1\" A=\"D041A97B28B34BC03FADD13D4E682C84\"><CGD /><WS UN=\"FC235BEE9A5B43FC25A508F9653B0ADB\" S=\"T,0,50:T,0,50\" D=\"Horizontal\"><WC UN=\"5F70DE1187AE442DAA851736C7027B9F\" S=\"T,0,50:T,0,50\" NM=\"BarTabGroup\" AR=\"True\" SP=\"D041A97B28B34BC03FADD13D4E682C84\"><KP UN=\"09113BA3023449E1E486EB9BA688AFC1\" S=\"False\"><CPD ObjPath=\"\" /></KP><KP UN=\"D041A97B28B34BC03FADD13D4E682C84\" S=\"False\"><CPD ObjPath=\"$Mesh\" /></KP><KP UN=\"993002E18A5649460EBEBF8C3363E32B\" S=\"False\"><CPD ObjPath=\"$Materials\\$Planks_MAT.003\\$Planks_MAT.003 shader graph\" /></KP></WC></WS></KW></DW><DF N=\"DockingFloating\" C=\"0\"></DF></DM></KD>"
	Scale = 1.03627
	LODLevels = 2
	.component NeoAxis.Component
	{
		Name = Materials
		.component NeoAxis.Material
		{
			Name = Planks_MAT.003
			.component NeoAxis.FlowGraph
			{
				Name = Planks_MAT.003 shader graph
				EditorScrollPosition = 0 0
				Specialization
				{
					GetByReference = NeoAxis.FlowGraphSpecialization_Shader|Instance
				}
				.component NeoAxis.FlowGraphNode
				{
					Name = Node Planks_MAT.003
					Position = 10 -7
					ControlledObject
					{
						GetByReference = "this:..\\.."
					}
				}
			}
		}
	}
	.component NeoAxis.Mesh
	{
		Name = Mesh
		EditorCameraTransform = "1.42545484335533 -1.17613116384532 1.38767960420159; -0.2191854566202 0.0785722056997891 0.915470996498287 0.328172208860071; 1 1 1"
		.component NeoAxis.MeshGeometry
		{
			Name = Fence1_Post_Gate_Left
			VertexStructure
			{
				Value
				{
					Length = 4
					0
					{
						Offset = 0
						Type = Float3
						Semantic = Position
					}
					1
					{
						Offset = 12
						Type = Float3
						Semantic = Normal
					}
					2
					{
						Offset = 24
						Type = Half4
						Semantic = Tangent
					}
					3
					{
						Offset = 32
						Type = Half2
						Semantic = TextureCoordinate0
					}
				}
			}
			Vertices
			{
				Value
				{
					Length = 11880
					.elements = "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"
					.elementsZip = True
				}
			}
			Indices
			{
				Value
				{
					Length = 972
					.elements = "0 1 2 1 3 2 4 0 2 3 5 2 6 4 2 5 7 2 8 6 2 7 8 2 9 10 11 10 12 11 13 9 11 12 14 11 15 13 11 14 16 11 17 15 11 16 17 11 18 19 20 19 18 21 22 20 19 20 22 23 24 23 22 23 24 25 26 25 24 25 26 27 28 29 26 28 26 30 31 32 33 33 32 34 31 35 32 36 32 35 35 37 36 38 36 37 37 39 38 40 38 39 41 40 39 40 41 42 43 44 45 44 43 46 47 48 49 49 50 47 51 52 53 53 54 51 55 56 57 56 55 58 59 55 57 60 55 59 59 61 60 61 59 62 63 64 65 65 64 66 67 68 69 69 68 70 71 72 73 73 72 74 75 76 77 77 76 78 79 80 81 81 82 79 83 84 85 85 86 83 87 88 89 89 88 90 87 91 88 92 91 87 93 94 95 95 94 96 93 97 94 98 97 93 99 100 101 101 100 102 99 103 100 104 103 99 105 106 107 107 106 108 107 108 109 109 108 110 105 111 106 112 111 105 113 111 112 111 113 114 115 116 117 116 115 118 117 119 115 119 117 120 121 119 120 122 119 121 123 122 121 124 115 119 122 124 119 125 122 123 126 125 123 126 127 125 125 128 122 128 124 122 127 129 125 129 128 125 129 127 130 130 131 129 131 130 132 129 133 128 131 133 129 128 134 124 133 134 128 134 135 124 115 124 135 135 136 115 136 135 137 138 137 135 135 134 138 137 138 139 133 140 134 140 138 134 141 139 138 138 140 141 139 141 142 143 142 141 142 143 144 141 145 143 145 141 140 146 140 133 146 145 140 131 146 133 147 145 146 148 146 131 148 147 146 132 148 131 149 147 148 148 132 150 150 149 148 150 151 149 152 153 154 153 152 155 154 156 152 156 154 157 158 156 157 159 156 158 160 159 158 161 152 156 159 161 156 162 159 160 163 162 160 163 164 162 162 165 159 165 161 159 164 166 162 166 165 162 166 164 167 167 168 166 168 167 169 166 170 165 168 170 166 165 171 161 170 171 165 171 172 161 152 161 172 172 173 152 173 172 174 175 174 172 172 171 175 174 175 176 170 177 171 177 175 171 178 176 175 175 177 178 176 178 179 180 179 178 179 180 181 178 182 180 182 178 177 183 177 170 183 182 177 168 183 170 184 182 183 185 183 168 185 184 183 169 185 168 186 184 185 185 169 187 187 186 185 187 188 186 189 190 191 190 189 192 192 193 190 193 192 194 194 195 193 195 194 196 196 197 195 198 193 195 198 190 193 195 197 199 200 199 197 199 200 201 202 195 199 198 195 202 202 199 203 204 203 199 203 204 205 205 206 203 206 205 207 208 202 203 208 203 206 209 198 202 209 202 208 209 210 198 190 198 210 190 210 211 212 211 210 210 213 212 210 209 213 214 212 213 215 209 208 215 213 209 214 213 216 213 215 216 217 214 216 218 216 215 216 218 219 215 208 220 220 218 215 220 208 206 218 220 221 222 223 216 223 222 224 220 206 225 220 225 221 221 225 226 207 225 206 225 207 227 227 228 225 228 227 229 230 231 232 231 230 233 233 234 231 234 233 235 236 234 235 234 236 237 236 238 237 239 231 234 239 234 237 231 239 240 231 240 241 242 241 240 237 238 243 244 243 238 243 244 245 246 237 243 239 237 246 240 247 242 248 240 239 248 239 246 240 248 247 249 242 247 246 243 250 251 250 243 250 251 252 253 246 250 248 246 253 252 254 250 253 250 254 254 252 255 256 248 253 256 247 248 257 253 254 256 253 257 255 258 254 257 254 258 258 255 259 259 260 258 260 259 261 257 258 262 262 258 263 264 257 262 257 264 256 264 265 256 247 256 265 265 264 266 249 247 265 267 249 265 268 269 265 269 268 270 271 272 273 272 271 274 275 276 277 276 275 278 279 280 281 280 279 282 283 284 285 284 283 286 287 288 289 289 288 290 287 291 288 292 288 291 291 293 292 294 292 293 293 295 294 296 294 295 297 296 295 296 297 298 299 300 301 300 299 302 303 301 300 301 303 304 305 304 303 304 305 306 307 306 305 306 307 308 309 310 307 309 307 311 312 313 314 313 315 314 316 312 314 315 317 314 318 316 314 317 319 314 320 318 314 319 320 314 321 322 323 322 324 323 325 321 323 324 326 323 327 325 323 326 328 323 329 327 323 328 329 323"
				}
			}
			Material
			{
				GetByReference = "Content\\Fences\\Authors\\NeoAxis\\Wood fence\\Data\\Brown\\Planks.material"
			}
		}
		.component NeoAxis.MeshLevelOfDetail
		{
			Name = LOD 1
			Distance = 0
			Mesh
			{
				GetByReference = "root:$Mesh\\$LOD 1\\$Mesh"
			}
			.component NeoAxis.Mesh
			{
				Name = Mesh
				.component NeoAxis.MeshGeometry
				{
					Name = Fence1_Post_Gate_Left
					VertexStructure
					{
						Value
						{
							Length = 1
							0
							{
								Offset = 0
								Type = Float3
								Semantic = Position
							}
						}
					}
					Vertices
					{
						Value
						{
							Length = 96
							.elements = "UX/IPZJjs72yC2c+UX/IPXvVmr1zLnc/UX/IPZJjs71zLnc/UX/IPXvVmr2yC2c+Nui3PHvVmr2yC2c+Nui3PJJjs72yC2c+Nui3PHvVmr1zLnc/Nui3PJJjs71zLnc/"
						}
					}
					Indices
					{
						Value
						{
							Length = 36
							.elements = 0 1 2 0 3 1 1 3 4 5 3 0 5 4 3 2 5 0 1 4 6 2 1 6 5 6 4 2 6 7 5 7 6 7 5 2
						}
					}
					Material
					{
						GetByReference = "Content\\Fences\\Authors\\NeoAxis\\Wood fence\\Data\\Brown\\Planks.material"
					}
					VoxelData
					{
						Value
						{
							Length = 5260
							.elements = "UEsDBBQAAAAIAOs9K1b1i/jxygQAAIwUAAAEAAAAZmlsZe2YX2xTVRzHz/4EzEjIGcSJC8pNwDF1sKFuve1ZRxMKiVkMPvhk9jD5N4SKVTuoOrSA/BlOHKhMhUnZg5IYEoJBQzaxiQ/bjKI+4csSk76giaIP80HE6+fcnt7d21gTE6Mk7uGTX779/b7nfO/p6dKuSggxFyohBm1XP2o/tvGDj8/P6+k4sD3azktiC3zx+cBqYXXHhfUYbIgLYeVilZnxHMSqMuOMfCJEDqyc19tLbx89ayOeTbAZtkAPbIXH4zHBHMQqqKB9wtpGbzsk4AnYAU9CEp6Cp+OWEBPdkIVvwaoQE8J6hl4KemEn7II0PAvPwfP4Yvhi+GL4Yvhi+Pro7YYX4MW4kJm4GAS5hwpyb1yKzEQLPAxJGAQxuJfePmZAvkQFuZ8K8gD1AL4sviy+LL4svuyEkAfpgTxEBdkfL/bOwVcgRQ5fDl/O852z6FnBnqacz+uV8WnK+dzeTeTTlPO5vZvIp/mnfbO92XOZvRP/7eehUmz6bA7U/Amzvdlzmb0T/4/PQ73YWr5X/Re9m8RXh6ecrw7Pv+VbwHw5n9szPjHYz3fkw3xXPhz/Wz75Mh6QA1SQr1BBHolXMjcHamA+aJ8YPELvVWZADlJBHqWCPEY9hi+BL4EvgS+BL8E+r9ED+ToV5BtUkMepIIfwJfEl8SXxJfEl2W+I3pvMgHyLCvJtKsgT1BP4UvhS+FL4UvhS7HeSHshhKsh3qCBPUUFm8aXxpfGl8aXxpdkvS+80MyBHqCPxYq8O6qFS9OHrw9fn+eqq6YETFvY1NT8ixoRYkxHtTijVPK3O2Pz24xWtr6+cVqdmtDvf7M7HmRcRJ3TZ6AeNPmv0Yne9aNO02uFb73TjtHrI0xeWCLsl/OmKnQ3OqNZTIWFvQHcsd5TWtayXDR98wFEdy7X+KeyERlzd+67WN9SovTAyfteP9x7O/KaKeda7+6/w8hT0YlHQA0YvMf2E0UuN7jR6eaaYZ3JlMM/akjxrvTxC3GiLRq4vc399txfzJAPrnzV6gdEDRi/z8hT0LV6ego56eb5sDuapLslT7csz0PYI5/P1+xW+8znqrrfKy1PQe7w8BV1tzith9EKjO41e471f21qCefbfH8yjtclD/5o67/objb5sdNTos0av03ns3WpaHQ8V74uwL6KvePpD9/780FK8P1fJsxH96zJ/nqqSPFUzeexvItNqsm1m/UWs3+Db7w50k6ed0MmWvGr13edoc17Ntck+VuHqBeiqGc3n5ZL6XlXpf7qM6efTelJn8+kzapHRTujWprwa9u23uTGvugLP2x0Z4lkq3Hn9vN2Rn+8R4m5X17LeSPhKizMafa/wvMI+7erehsLn5aKdV5Ot85i+ZPINk6fWl2eYPFZAHwrkHVY9JXqdp3We1W6eBl+eR1c5ox2+PFoX8gjRGvpOLW7jfMb63Pun33H/+Tih3eQJan8erf15tA7mudPNs9SXZ6okz5QvT39bXnW696Hf5Okqeb+6Anm0Dp5PV8n5dJXk+T2s83DCXp7u+4J5tDZ56Cvuz22+9VQhT2ZGu3kK2k6rX9TF1sKzaH0BvcvT+v5MhfX9qXHndZ4pNw9/Hb08+ZI8WhfzOKF68txezGPXsn6TPi+zn4Wu9/QfUEsBAhQAFAAAAAgA6z0rVvWL+PHKBAAAjBQAAAQAAAAAAAAAAAAAAAAAAAAAAGZpbGVQSwUGAAAAAAEAAQAyAAAA7AQAAAAA"
							.elementsZip = True
						}
					}
				}
			}
		}
	}
}
