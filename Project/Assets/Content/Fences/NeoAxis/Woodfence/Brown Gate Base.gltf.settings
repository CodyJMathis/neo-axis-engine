// Made with NeoAxis Engine 2024.1.

.component NeoAxis.Import3D
{
	EditorDocumentConfiguration = "\xfeff<?xml version=\"1.0\" encoding=\"utf-16\"?><KD V=\"1\"><DGD /><DM N=\"DockingManager\" C=\"2\"><DW N=\"DockingWorkspace\" O=\"0\" S=\"1144, 842\"><KW V=\"1\" A=\"9A6E14643810424081BE1E67C1275DAD\"><CGD /><WS UN=\"4A87E34386084E14BC81ED10FBED4D99\" S=\"T,0,50:T,0,50\" D=\"Horizontal\"><WC UN=\"A683094FBA994FC7F8B3BC8902908966\" S=\"T,0,50:T,0,50\" NM=\"BarTabGroup\" AR=\"True\" SP=\"9A6E14643810424081BE1E67C1275DAD\"><KP UN=\"1B696F27E4D04A32A2A0C5358EFBBB20\" S=\"False\"><CPD ObjPath=\"\" /></KP><KP UN=\"9A6E14643810424081BE1E67C1275DAD\" S=\"False\"><CPD ObjPath=\"$Mesh\" /></KP><KP UN=\"EB44E9F09CE64BBF4599029863301269\" S=\"False\"><CPD ObjPath=\"$Materials\\$Planks_MAT\\$Planks_MAT shader graph\" /></KP></WC></WS></KW></DW><DF N=\"DockingFloating\" C=\"0\"></DF></DM></KD>"
	EditorCameraTransform = "1.37704294775239 -1.13284101713683 0.905772570758137; -0.2191854566202 0.0785722056997891 0.915470996498287 0.328172208860071; 1 1 1"
	.component NeoAxis.Component
	{
		Name = Materials
		.component NeoAxis.Material
		{
			Name = Planks_MAT
			BaseColor
			{
				GetByReference = "this:$Planks_MAT shader graph\\$Node Texture Sample Base Color\\$Shader Texture Sample\\RGBA"
			}
			Roughness
			{
				GetByReference = "this:$Planks_MAT shader graph\\$Node Texture Sample Metallic\\$Shader Texture Sample\\G"
			}
			Normal
			{
				GetByReference = "this:$Planks_MAT shader graph\\$Node Texture Sample Normal\\$Shader Texture Sample\\RGBA"
			}
			.component NeoAxis.FlowGraph
			{
				Name = Planks_MAT shader graph
				EditorScrollPosition = 0 0
				Specialization
				{
					GetByReference = NeoAxis.FlowGraphSpecialization_Shader|Instance
				}
				.component NeoAxis.FlowGraphNode
				{
					Name = Node Planks_MAT
					Position = 10 -7
					ControlledObject
					{
						GetByReference = "this:..\\.."
					}
				}
				.component NeoAxis.FlowGraphNode
				{
					Name = Node Texture Sample Base Color
					Position = -20 -13
					ControlledObject
					{
						GetByReference = "this:$Shader Texture Sample"
					}
					.component NeoAxis.ShaderTextureSample
					{
						Name = Shader Texture Sample
						Location2 = 0 0
						Location3 = 0 0 0
						Texture
						{
							GetByReference = "Content\\Fences\\NeoAxis\\Woodfence\\Textures\\Planks_MAT_baseColor.jpg"
						}
					}
				}
				.component NeoAxis.FlowGraphNode
				{
					Name = Node Texture Sample Metallic
					Position = -20 -4
					ControlledObject
					{
						GetByReference = "this:$Shader Texture Sample"
					}
					.component NeoAxis.ShaderTextureSample
					{
						Name = Shader Texture Sample
						Location2 = 0 0
						Location3 = 0 0 0
						Texture
						{
							GetByReference = "Content\\Fences\\NeoAxis\\Woodfence\\Textures\\Planks_MAT_metallicRoughness.jpg"
						}
					}
				}
				.component NeoAxis.FlowGraphNode
				{
					Name = Node Texture Sample Normal
					Position = -20 5
					ControlledObject
					{
						GetByReference = "this:$Shader Texture Sample"
					}
					.component NeoAxis.ShaderTextureSample
					{
						Name = Shader Texture Sample
						Location2 = 0 0
						Location3 = 0 0 0
						Texture
						{
							GetByReference = "Content\\Fences\\NeoAxis\\Woodfence\\Textures\\Planks_MAT_normal.jpg"
						}
					}
				}
			}
		}
	}
	.component NeoAxis.Mesh
	{
		Name = Mesh
		EditorCameraTransform = "3.34154288818866 -1.94160027228113 2.01319689185881; -0.217404565864622 0.083834889701673 0.907350115917495 0.349889601380823; 1 1 1"
		.component NeoAxis.MeshGeometry
		{
			Name = Fence1_Post_Gate_Left_Planks_MAT_0.001 + 1 merged
			VertexStructure
			{
				Value
				{
					Length = 6
					0
					{
						Offset = 0
						Type = Float3
						Semantic = Position
					}
					1
					{
						Offset = 12
						Type = Float3
						Semantic = Normal
					}
					2
					{
						Offset = 24
						Type = Half4
						Semantic = Tangent
					}
					3
					{
						Offset = 32
						Type = Half2
						Semantic = TextureCoordinate0
					}
					4
					{
						Offset = 36
						Type = Half2
						Semantic = TextureCoordinate1
					}
					5
					{
						Offset = 40
						Type = Half2
						Semantic = TextureCoordinate2
					}
				}
			}
			Vertices
			{
				Value
				{
					Length = 25696
					.elements = ""
					.elementsZip = True
				}
			}
			Indices
			{
				Value
				{
					Length = 1944
					.elements = "0 1 2 0 2 3 4 2 1 4 5 2 6 5 4 6 7 5 8 7 6 8 9 7 8 10 9 8 11 10 12 13 14 12 14 15 16 14 13 16 17 14 18 17 16 18 19 17 20 19 18 20 21 19 20 22 21 20 23 22 24 25 26 24 26 27 28 27 26 28 26 29 30 28 29 30 29 31 32 30 31 32 31 33 32 33 34 32 34 35 36 37 38 36 38 39 40 39 38 40 38 41 42 40 41 42 41 43 44 42 43 44 43 45 44 45 46 44 46 47 48 49 50 49 51 50 52 48 50 51 53 50 54 52 50 53 55 50 56 54 50 55 56 50 57 58 59 59 58 60 61 58 57 60 58 62 63 58 61 62 58 64 65 58 63 64 58 65 66 67 68 67 69 68 70 66 68 69 71 68 72 70 68 71 73 68 74 72 68 73 74 68 75 76 77 77 76 78 79 76 75 78 76 80 81 76 79 80 76 82 83 76 81 82 76 83 84 85 86 84 86 87 88 86 85 88 89 86 90 89 88 90 91 89 92 91 90 92 93 91 92 94 93 92 95 94 96 97 98 96 98 99 100 98 97 100 101 98 102 101 100 102 103 101 104 103 102 104 105 103 104 106 105 104 107 106 108 109 110 108 110 111 112 111 110 112 110 113 114 112 113 114 113 115 116 114 115 116 115 117 116 117 118 116 118 119 120 121 122 120 122 123 124 123 122 124 122 125 126 124 125 126 125 127 128 126 127 128 127 129 128 129 130 128 130 131 132 133 134 132 134 135 133 136 134 133 137 136 137 138 136 137 139 138 139 140 138 139 141 140 142 143 144 142 144 145 143 146 144 143 147 146 147 148 146 147 149 148 149 150 148 149 151 150 152 153 154 152 154 155 155 154 156 155 156 157 157 156 158 157 158 159 159 158 160 159 160 161 162 163 164 162 164 165 165 164 166 165 166 167 167 166 168 167 168 169 169 168 170 169 170 171 172 173 174 172 174 175 176 175 174 172 175 177 176 178 175 178 177 175 172 177 179 180 178 176 180 181 178 182 181 180 178 183 177 181 183 178 179 177 184 183 184 177 179 184 185 182 186 181 186 182 187 186 187 188 186 188 189 185 184 190 185 190 191 192 191 190 192 190 193 186 189 194 194 189 195 186 196 181 186 194 196 181 196 183 197 193 190 197 198 193 199 190 184 183 199 184 199 197 190 196 199 183 196 200 199 200 197 199 194 200 196 201 198 197 200 201 197 201 202 198 194 203 200 203 201 200 194 195 203 203 195 204 203 205 201 205 202 201 203 204 205 205 206 202 206 205 204 206 204 207 208 209 210 209 211 210 209 212 211 208 210 213 214 208 213 214 213 215 216 214 215 216 215 217 218 219 220 218 220 221 222 221 220 218 221 223 222 224 221 224 223 221 218 223 225 226 224 222 226 227 224 228 227 226 224 229 223 227 229 224 225 223 230 229 230 223 225 230 231 228 232 227 232 228 233 232 233 234 232 234 235 231 230 236 231 236 237 238 237 236 238 236 239 232 235 240 240 235 241 232 242 227 232 240 242 227 242 229 243 239 236 243 244 239 245 236 230 229 245 230 245 243 236 242 245 229 242 246 245 246 243 245 240 246 242 247 244 243 246 247 243 247 248 244 240 249 246 249 247 246 240 241 249 249 241 250 249 251 247 251 248 247 249 250 251 251 252 248 252 251 250 252 250 253 254 255 256 255 257 256 255 258 257 254 256 259 260 254 259 260 259 261 262 260 261 262 261 263 264 265 266 264 266 267 268 266 265 264 269 265 268 265 270 270 265 269 264 271 269 272 268 270 272 270 273 274 272 273 270 269 275 273 270 275 271 276 269 275 269 276 271 277 276 274 273 278 278 279 274 278 280 279 278 281 280 277 282 276 277 283 282 284 282 283 284 285 282 278 286 281 286 287 281 278 273 288 278 288 286 273 275 288 289 282 285 289 285 290 291 276 282 275 276 291 291 282 289 288 275 291 288 291 292 292 291 289 286 288 292 293 289 290 292 289 293 293 290 294 286 292 295 295 292 293 286 295 287 295 296 287 295 293 297 297 293 294 295 297 296 297 294 298 298 296 297 298 299 296 300 301 302 303 301 300 300 302 304 304 302 305 304 305 306 303 307 301 308 307 303 308 309 307 310 311 312 310 312 313 314 312 311 310 315 311 314 311 316 316 311 315 310 317 315 318 314 316 318 316 319 320 318 319 316 315 321 319 316 321 317 322 315 321 315 322 317 323 322 320 319 324 324 325 320 324 326 325 324 327 326 323 328 322 323 329 328 330 328 329 330 331 328 324 332 327 332 333 327 324 319 334 324 334 332 319 321 334 335 328 331 335 331 336 337 322 328 321 322 337 337 328 335 334 321 337 334 337 338 338 337 335 332 334 338 339 335 336 338 335 339 339 336 340 332 338 341 341 338 339 332 341 333 341 342 333 341 339 343 343 339 340 341 343 342 343 340 344 344 342 343 344 345 342 346 347 348 349 347 346 346 348 350 350 348 351 350 351 352 349 353 347 354 353 349 354 355 353 356 357 358 356 358 359 356 359 360 357 356 361 357 361 362 356 360 363 363 361 356 363 360 364 362 361 365 362 365 366 363 367 361 367 365 361 363 364 368 368 367 363 368 364 369 366 365 370 366 370 371 372 371 370 372 373 371 374 370 365 367 374 365 372 370 375 374 375 370 372 375 376 377 374 367 368 377 367 378 375 374 377 378 374 376 375 379 378 379 375 376 379 380 381 377 368 368 369 381 382 381 369 382 369 383 381 382 384 381 385 377 381 384 385 385 378 377 385 384 386 385 387 378 385 386 387 387 379 378 387 386 388 387 389 379 387 388 389 380 379 389 390 389 388 380 389 391 390 391 389 392 393 394 392 394 395 392 395 396 393 392 397 393 397 398 392 396 399 399 397 392 399 396 400 398 397 401 398 401 402 399 403 397 403 401 397 399 400 404 404 403 399 404 400 405 402 401 406 402 406 407 408 407 406 408 409 407 410 406 401 403 410 401 408 406 411 410 411 406 408 411 412 413 410 403 404 413 403 414 411 410 413 414 410 412 411 415 414 415 411 412 415 416 417 413 404 404 405 417 418 417 405 418 405 419 417 418 420 417 421 413 417 420 421 421 414 413 421 420 422 421 423 414 421 422 423 423 415 414 423 422 424 423 425 415 423 424 425 416 415 425 426 425 424 416 425 427 426 427 425 428 429 430 428 431 429 428 430 432 428 433 431 433 434 431 432 435 428 433 428 435 432 436 435 433 437 434 437 438 434 433 435 439 437 433 439 436 440 435 439 435 440 436 441 440 442 443 438 442 438 444 437 444 438 444 445 442 437 439 446 444 437 446 444 447 445 444 446 447 447 448 445 446 439 449 439 440 449 447 446 450 446 449 450 447 451 448 447 450 451 451 452 448 449 440 453 441 453 440 441 454 453 455 453 454 455 454 456 449 453 457 455 457 453 450 449 457 455 458 457 450 457 459 458 459 457 451 450 459 458 460 459 451 459 461 460 461 459 451 461 452 460 462 461 463 452 461 463 461 462 464 465 466 464 467 465 464 466 468 464 469 467 469 470 467 468 471 464 469 464 471 468 472 471 469 473 470 473 474 470 469 471 475 473 469 475 472 476 471 475 471 476 472 477 476 478 479 474 478 474 480 473 480 474 480 481 478 473 475 482 480 473 482 480 483 481 480 482 483 483 484 481 482 475 485 475 476 485 483 482 486 482 485 486 483 487 484 483 486 487 487 488 484 485 476 489 477 489 476 477 490 489 491 489 490 491 490 492 485 489 493 491 493 489 486 485 493 491 494 493 486 493 495 494 495 493 487 486 495 494 496 495 487 495 497 496 497 495 487 497 488 496 498 497 499 488 497 499 497 498 500 501 502 501 503 502 504 500 502 503 505 502 506 504 502 505 507 502 508 506 502 507 508 502 509 510 511 510 512 511 513 509 511 512 514 511 515 513 511 514 516 511 517 515 511 516 517 511 518 519 520 520 519 521 522 519 518 521 519 523 524 519 522 523 519 525 526 519 524 525 519 526 527 528 529 529 528 530 531 528 527 530 528 532 533 528 531 532 528 534 535 528 533 534 528 535 536 537 538 536 538 539 540 538 537 540 541 538 542 541 540 542 543 541 544 543 542 544 545 543 544 546 545 544 547 546 548 549 550 548 550 551 552 551 550 552 550 553 554 552 553 554 553 555 556 554 555 556 555 557 556 557 558 556 558 559 560 561 562 560 562 563 564 562 561 564 565 562 566 565 564 566 567 565 568 567 566 568 569 567 568 570 569 568 571 570 572 573 574 572 574 575 576 575 574 576 574 577 578 576 577 578 577 579 580 578 579 580 579 581 580 581 582 580 582 583"
				}
			}
			Material
			{
				GetByReference = "root:$Materials\\$Planks_MAT"
			}
		}
		.component NeoAxis.MeshLevelOfDetail
		{
			Name = LOD 1
			Distance = 0
			Mesh
			{
				GetByReference = "root:$Mesh\\$LOD 1\\$Mesh"
			}
			.component NeoAxis.Mesh
			{
				Name = Mesh
				.component NeoAxis.MeshGeometry
				{
					Name = Fence1_Post_Gate_Left_Planks_MAT_0.001 + 1 merged
					VertexStructure
					{
						Value
						{
							Length = 6
							0
							{
								Offset = 0
								Type = Float3
								Semantic = Position
							}
							1
							{
								Offset = 12
								Type = Float3
								Semantic = Normal
							}
							2
							{
								Offset = 24
								Type = Half4
								Semantic = Tangent
							}
							3
							{
								Offset = 32
								Type = Half2
								Semantic = TextureCoordinate0
							}
							4
							{
								Offset = 36
								Type = Half2
								Semantic = TextureCoordinate1
							}
							5
							{
								Offset = 40
								Type = Half2
								Semantic = TextureCoordinate2
							}
						}
					}
					Vertices
					{
						Value
						{
							Length = 18964
							.elements = ""
							.elementsZip = True
						}
					}
					Indices
					{
						Value
						{
							Length = 1110
							.elements = "0 1 2 0 2 3 4 2 1 4 5 2 6 5 4 6 7 5 8 7 6 8 9 7 8 10 9 8 11 10 12 13 14 12 14 15 16 14 13 16 17 14 18 17 16 18 19 17 20 19 18 20 21 19 20 22 21 20 23 22 24 25 26 24 26 27 28 27 26 28 26 29 30 28 29 30 29 31 32 30 31 32 31 33 32 33 34 32 34 35 36 37 38 36 38 39 40 39 38 40 38 41 42 40 41 42 41 43 44 42 43 44 43 45 44 45 46 44 46 47 48 49 50 49 51 50 49 52 51 48 50 53 54 48 53 54 53 55 56 57 58 57 59 58 57 60 59 56 58 61 62 56 61 62 61 63 64 65 66 66 65 67 67 65 68 69 65 64 70 65 69 71 72 73 73 72 74 75 72 76 77 72 75 78 72 77 79 80 81 79 81 82 83 80 79 83 84 80 85 86 87 85 87 88 89 86 85 89 90 86 91 92 93 91 93 94 95 94 93 95 93 96 97 95 96 97 96 98 99 97 98 99 98 100 99 100 101 99 101 102 103 104 105 104 106 105 106 107 105 107 108 105 108 109 105 110 111 112 110 112 113 114 113 112 114 112 115 116 114 115 116 115 117 118 116 117 118 117 119 118 119 120 118 120 121 122 123 124 123 125 124 125 126 124 126 127 124 127 128 124 129 130 131 129 131 132 133 131 130 133 134 131 135 134 133 135 136 134 137 136 135 137 138 136 137 139 138 137 140 139 141 142 143 141 143 144 145 143 142 145 146 143 147 146 145 147 148 146 149 148 147 149 150 148 149 151 150 149 152 151 153 154 155 153 156 154 153 155 157 153 158 156 157 159 153 153 160 158 159 161 153 153 161 160 159 162 161 162 163 161 164 163 165 164 161 163 164 166 161 166 167 161 167 168 161 169 161 168 169 170 161 161 170 171 161 171 172 161 172 173 173 160 161 173 174 160 175 176 177 175 178 176 175 177 179 175 180 178 179 181 175 175 182 180 181 183 175 175 183 182 181 184 183 184 185 183 186 185 187 186 183 185 186 188 183 188 189 183 189 190 183 191 183 190 191 192 183 183 192 193 183 193 194 183 194 195 195 182 183 195 196 182 197 198 199 197 199 200 201 199 198 197 202 198 203 201 198 202 204 198 204 205 198 206 198 205 207 203 198 206 208 198 209 198 208 209 208 210 209 210 211 198 209 211 198 211 212 212 213 198 212 214 213 198 213 215 207 198 216 216 198 215 216 217 207 216 215 218 216 219 217 216 218 219 220 221 222 220 222 223 224 222 221 220 225 221 226 224 221 225 227 221 228 226 221 227 229 221 221 230 228 231 221 229 221 232 230 231 233 221 221 234 232 221 233 235 221 236 234 221 235 237 221 238 236 238 221 237 238 239 236 238 237 240 240 239 238 240 241 239 242 243 244 243 242 245 242 244 246 245 242 247 242 246 248 242 248 249 247 242 250 242 249 251 252 253 250 252 250 242 252 242 254 254 242 255 255 242 256 257 256 242 257 242 258 242 259 258 242 260 259 242 261 260 261 242 251 261 251 262 263 264 265 263 265 266 267 266 265 263 266 268 269 266 267 268 266 270 271 266 269 270 266 272 266 271 273 274 272 266 266 273 275 274 266 276 266 275 277 266 278 276 266 277 279 266 280 278 266 279 281 266 282 280 282 266 281 282 281 283 284 285 286 285 284 287 284 286 288 287 284 289 284 288 290 284 290 291 289 284 292 284 291 293 294 295 292 294 292 284 294 284 296 296 284 297 297 284 298 299 298 284 299 284 300 284 301 300 284 302 301 284 303 302 303 284 293 303 293 304 305 306 307 305 307 308 309 308 307 305 308 310 311 308 309 310 308 312 313 308 311 312 308 314 308 313 315 316 314 308 308 315 317 316 308 318 308 317 319 308 320 318 308 319 321 308 322 320 308 321 323 308 324 322 324 308 323 324 323 325 326 327 328 328 327 329 330 327 326 331 327 332 333 327 331 334 335 336 336 335 337 338 335 334 339 335 338 340 335 339 341 342 343 341 343 344 344 343 345 344 345 346 346 345 347 346 347 348 349 350 351 352 350 349 352 353 350 349 351 354 354 351 355 354 355 356 357 358 359 357 359 360 361 357 360 361 360 362 363 364 365 363 365 366 367 363 366 367 366 368 369 370 371 369 371 372 373 372 371 373 371 374 375 373 374 375 374 376 377 375 376 377 376 378 377 378 379 377 379 380 381 382 383 381 383 384 385 384 383 385 383 386 387 385 386 387 386 388 389 387 388 389 388 390 389 390 391 389 391 392 393 394 395 394 396 395 396 397 395 397 398 395 398 399 395 400 401 402 401 403 402 403 404 402 404 405 402 405 406 402 407 408 409 407 409 410 411 409 408 411 412 409 413 412 411 413 414 412 415 414 413 415 416 414 415 417 416 415 418 417 419 420 421 419 421 422 423 421 420 423 424 421 425 424 423 425 426 424 427 426 425 427 428 426 427 429 428 427 430 429"
						}
					}
					Material
					{
						GetByReference = "root:$Materials\\$Planks_MAT"
					}
				}
			}
		}
		.component NeoAxis.MeshLevelOfDetail
		{
			Name = LOD 2
			Distance = 0
			Mesh
			{
				GetByReference = "root:$Mesh\\$LOD 2\\$Mesh"
			}
			.component NeoAxis.Mesh
			{
				Name = Mesh
				.component NeoAxis.MeshGeometry
				{
					Name = Fence1_Post_Gate_Left_Planks_MAT_0.001 + 1 merged
					VertexStructure
					{
						Value
						{
							Length = 6
							0
							{
								Offset = 0
								Type = Float3
								Semantic = Position
							}
							1
							{
								Offset = 12
								Type = Float3
								Semantic = Normal
							}
							2
							{
								Offset = 24
								Type = Half4
								Semantic = Tangent
							}
							3
							{
								Offset = 32
								Type = Half2
								Semantic = TextureCoordinate0
							}
							4
							{
								Offset = 36
								Type = Half2
								Semantic = TextureCoordinate1
							}
							5
							{
								Offset = 40
								Type = Half2
								Semantic = TextureCoordinate2
							}
						}
					}
					Vertices
					{
						Value
						{
							Length = 12848
							.elements = "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"
							.elementsZip = True
						}
					}
					Indices
					{
						Value
						{
							Length = 771
							.elements = "0 1 2 3 0 2 4 5 2 6 7 8 9 6 8 10 11 8 12 13 14 12 14 15 16 17 18 19 18 17 20 21 22 20 22 23 24 22 21 25 24 21 26 25 21 20 27 21 26 21 28 29 28 21 28 29 30 29 31 30 29 21 31 32 33 34 32 35 33 36 33 35 36 35 37 32 38 35 39 35 38 38 32 40 41 39 38 41 38 40 42 43 44 45 44 43 42 44 46 45 47 44 46 44 48 47 48 44 46 48 49 49 48 50 51 50 48 51 48 52 48 53 52 54 53 48 55 48 47 56 55 47 57 55 56 57 58 55 58 48 55 59 54 48 58 59 48 60 61 54 59 60 54 59 62 60 63 60 62 63 62 64 59 65 62 59 66 65 58 66 59 58 67 66 58 68 67 69 70 71 69 71 72 72 71 73 21 74 31 21 75 74 75 76 77 75 21 76 21 78 76 21 79 78 21 80 79 81 79 80 81 80 82 21 83 80 84 80 83 21 27 83 85 84 83 85 83 27 86 87 88 86 88 89 90 91 92 91 90 93 91 93 94 94 93 95 95 93 96 97 98 96 97 96 93 97 93 99 99 93 100 101 93 90 90 102 101 101 102 103 101 103 104 104 93 101 104 105 93 105 100 93 104 106 105 107 105 106 105 107 108 105 108 109 105 109 110 105 111 100 105 110 111 112 100 111 113 111 110 113 114 111 115 116 117 118 117 116 115 117 119 118 120 117 119 117 121 120 121 117 119 121 122 123 121 120 122 121 124 125 121 123 126 124 121 126 121 127 128 127 121 125 129 121 130 128 121 129 130 121 131 132 128 130 131 128 129 133 130 129 134 133 129 135 134 130 133 136 137 131 130 130 136 137 137 138 131 137 136 139 137 140 138 140 137 139 140 139 141 142 143 144 142 145 143 146 147 145 146 145 148 142 148 145 142 149 148 142 150 149 148 149 151 149 150 152 149 152 151 153 154 155 156 157 155 158 32 159 158 159 160 161 159 32 162 161 32 163 162 32 158 40 32 163 32 164 164 165 166 164 32 165 32 167 165 32 168 167 169 168 32 169 170 171 169 32 170 32 34 170 172 173 174 172 174 175 176 177 178 176 178 179 180 181 142 181 182 142 182 183 142 184 142 183 184 185 142 180 142 186 150 142 185 187 188 186 187 186 142 189 187 142 189 142 190 191 190 192 192 190 142 192 144 193 192 142 144 194 195 196 195 194 197 195 197 198 198 197 199 199 197 200 201 200 197 201 202 200 201 197 203 204 197 194 204 203 197 194 205 204 204 205 206 204 206 207 208 204 207 208 203 204 207 209 208 210 208 209 208 210 211 208 211 212 208 212 213 208 214 203 215 203 214 208 213 216 208 216 214 217 216 213 218 214 216 217 219 216 218 216 219 220 221 222 223 222 221 224 225 226 225 227 226 227 228 226 229 226 228 229 230 226 224 226 231 232 226 230 233 231 226 234 231 233 235 234 233 235 233 236 236 233 226 237 235 236 237 236 238 238 236 226 238 239 240 238 226 239 226 241 239 226 242 241 243 244 242 243 242 245 226 245 242 226 246 245 226 232 246 245 246 247 246 232 248 246 248 247 249 250 251 252 253 250 252 254 253 255 256 257 258 259 256 258 260 259 261 262 263 264 262 261 265 262 264 266 267 268 268 267 269 270 267 266 271 272 273 271 273 274 274 275 276 277 278 279 280 278 281 282 283 284 285 283 286 287 288 289 290 291 289"
						}
					}
					Material
					{
						GetByReference = "root:$Materials\\$Planks_MAT"
					}
				}
			}
		}
		.component NeoAxis.MeshLevelOfDetail
		{
			Name = LOD 3
			Distance = 0
			Mesh
			{
				GetByReference = "root:$Mesh\\$LOD 3\\$Mesh"
			}
			.component NeoAxis.Mesh
			{
				Name = Mesh
				.component NeoAxis.MeshGeometry
				{
					Name = Fence1_Post_Gate_Left_Planks_MAT_0.001 + 1 merged
					VertexStructure
					{
						Value
						{
							Length = 1
							0
							{
								Offset = 0
								Type = Float3
								Semantic = Position
							}
						}
					}
					Vertices
					{
						Value
						{
							Length = 96
							.elements = "KlD1PwVKjz05Kl0+KlD1P4PLpj3PpWw/KlD1PwVKjz3PpWw/KlD1P4PLpj05Kl0+Q50CPYPLpj05Kl0+Q50CPQVKjz05Kl0+Q50CPYPLpj3PpWw/Q50CPQVKjz3PpWw/"
						}
					}
					Indices
					{
						Value
						{
							Length = 36
							.elements = 0 1 2 0 3 1 1 3 4 5 3 0 5 4 3 2 5 0 1 4 6 2 1 6 5 6 4 2 6 7 5 7 6 7 5 2
						}
					}
					Material
					{
						GetByReference = "root:$Materials\\$Planks_MAT"
					}
					VoxelData
					{
						Value
						{
							Length = 7660
							.elements = "UEsDBBQAAAAIADcA/ViHPGIobQMAAOwdAAAEAAAAZmlsZe2VT2gUVxzHv7PZ2FRa9leaFkUxHmwFS8imrsnse2MN9NdL6SlCTxUSyK2U3Ly1DF4VBI9CweNeCimFIuQdEkHcSRP7v03/JFVr22hSMdGTGFK+M/tc3d5nL8PyZb9vP/vefH9v3vymB8AYgADAXgBvf1o63vvu+eP1I6feGrObEX9/HcDS4rkTkKZCEoUsKHBwLn+dvgLkLPlKIYsKWVLIdYV8rZBvdCyIr+WtuQPxtbwF+VYh3ynke4X8oJAfFfKTXgKaeWuigmbegvyskGWF/KIHgeZEF+r2+5x37f56lypo3qigWdRf3P/i/Off94rnP9tz34/y/i76X9H/i/cfmmU0khfQSPq7pI2gkXRDD4NG8jhoJEX9xf0vzn/x/Bf9rztnoBu9n9cs+n/x/uP7H/KrQn5TyO/ajR7QjfMPWVHIqkL+UMgNhdxUyC3tx0yStzaCmSRvQf5UyG2F/KWQvxXyj0LWtB+Xk7y1EVxO8hbkjkLuKmRdIRtaxlzudft9zrt2f73HwVwC+Vd36jujztyvIirFw4Cjz8aI+CHfavGTgKPPxhkfDhFO1o/Z5erabB/g6KmMIrpuyWt2eWZtti9GRE95DoNwy9yrwgVxDxDRp+P06ojIXYsbIKJPxy2e5T88xPxvxMx/eIjy65O/bE+m9b0POPps/HT+VdPOv2om66vGz8/yr5h2/hUzWV95wrP8h4aY/1TM/IeGKD8/yz+e1rcnzT9edWa86jnzXTT3Bpn/oxiOPhu3/hHO2wdWwhIQ9cVw9JSff9Zs2yXzoR34csqS01Oe33+zxUem7HNA1Ml3Y95u2UoYxIj6uP+2ElJ+fpZ/fZD19cbc//VByvOd0avVm/bj0ZeAKIjh6Kk23zt42w6E7wDRi4Cjpzx/9VgJH5gJO2UHRhDD0VOeu3qLzw6MBEDUybftK+n6p2NErwFR5/rbdr56y34y6uujp/z63P9NM137jNU5OHrqWV6ulbCrxcu1TVN+wnn+3zMX7PMYTjk95efz/OwzF2xPvJ88oqc85/5umjNHA+wCOT31LJ+utfn/8100X9T2t/LRU34+61swZ476/PSU58z/sN7OT095zvwc98R70vydnPm5ns/XuX7Gmb83rW/BTNcovz7CRfPIfh6WYjj2D3rK8xIyHgCO/aOT/wdQSwECFAAUAAAACAA3AP1YhzxiKG0DAADsHQAABAAAAAAAAAAAAAAAAAAAAAAAZmlsZVBLBQYAAAAAAQABADIAAACPAwAAAAA="
							.elementsZip = True
						}
					}
				}
			}
		}
	}
}
