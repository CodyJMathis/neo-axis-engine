// Made with NeoAxis Engine 2023.1.

.component NeoAxis.Import3D
{
	EditorDocumentConfiguration = "\xfeff<?xml version=\"1.0\" encoding=\"utf-16\"?><KD V=\"1\"><DGD /><DM N=\"DockingManager\" C=\"2\"><DW N=\"DockingWorkspace\" O=\"0\" S=\"1145, 842\"><KW V=\"1\" A=\"AAF0EAA235B04CE6B2B7BCAB21CFA3E3\"><CGD /><WS UN=\"3C57D7FE952F4AED1BA7F2B69E7C41CE\" S=\"T,0,50:T,0,50\" D=\"Horizontal\"><WC UN=\"FD5D0F3E2FEC4FF60F8B12B2095B74AB\" S=\"T,0,50:T,0,50\" NM=\"BarTabGroup\" AR=\"True\" SP=\"AAF0EAA235B04CE6B2B7BCAB21CFA3E3\"><KP UN=\"4005A183C2DB45853FAF5146111F7AFD\" S=\"False\"><CPD ObjPath=\"\" /></KP><KP UN=\"AAF0EAA235B04CE6B2B7BCAB21CFA3E3\" S=\"False\"><CPD ObjPath=\"$Mesh\" /></KP></WC></WS></KW></DW><DF N=\"DockingFloating\" C=\"0\"></DF></DM></KD>"
	.component NeoAxis.Mesh
	{
		Name = Mesh
		EditorCameraTransform = "2.75408614173924 -2.26568223684143 1.41154529752057; -0.2191854566202 0.0785722056997891 0.915470996498287 0.328172208860071; 1 1 1"
		EditorDisplayCollision = True
		.component NeoAxis.MeshGeometry
		{
			Name = Cube.002
			VertexStructure
			{
				Value
				{
					Length = 4
					0
					{
						Offset = 0
						Type = Float3
						Semantic = Position
					}
					1
					{
						Offset = 12
						Type = Float3
						Semantic = Normal
					}
					2
					{
						Offset = 24
						Type = Float4
						Semantic = Tangent
					}
					3
					{
						Offset = 40
						Type = Float2
						Semantic = TextureCoordinate0
					}
				}
			}
			Vertices
			{
				Value
				{
					Length = 13536
					.elements = "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"
					.elementsZip = True
				}
			}
			Indices
			{
				Value
				{
					Length = 816
					.elements = "0 1 2 3 4 5 6 7 8 9 6 10 3 11 12 3 5 13 14 3 15 16 3 17 1 0 6 7 6 18 6 0 18 19 6 20 6 8 21 6 21 22 6 22 20 6 19 23 6 23 24 6 24 25 6 25 10 6 9 26 6 26 27 6 27 11 11 3 6 3 12 28 3 28 4 15 3 29 29 3 13 17 3 30 31 3 14 32 3 31 30 3 32 33 3 34 35 3 16 34 3 35 33 34 36 37 38 39 38 37 40 41 42 43 44 45 46 47 48 49 50 47 51 44 52 53 44 46 54 55 44 56 57 44 58 42 41 47 48 47 59 47 41 59 60 47 61 47 49 62 47 62 63 47 63 61 47 60 64 47 64 65 47 65 66 47 66 51 47 50 67 47 67 68 47 68 52 52 44 47 44 53 69 44 69 45 56 44 70 70 44 54 58 44 71 72 44 55 73 44 72 71 44 73 74 44 75 76 44 57 75 44 76 74 75 77 78 79 80 79 78 81 82 83 84 82 84 85 86 87 88 88 87 89 90 91 92 90 92 93 94 95 96 94 96 97 98 99 100 98 100 101 102 103 104 103 102 105 106 107 108 107 106 109 110 111 112 110 112 113 114 115 116 114 116 117 109 118 107 118 109 119 120 121 122 121 120 123 124 125 126 124 126 127 128 129 130 128 130 131 132 133 134 132 134 135 136 108 137 108 136 106 138 139 140 138 140 141 142 143 144 142 144 145 146 147 148 146 148 149 150 151 147 150 147 146 117 116 151 117 151 150 152 153 154 153 152 155 156 157 158 157 156 159 160 161 162 160 162 163 164 122 165 122 164 120 166 167 168 166 168 169 170 171 172 171 170 173 174 175 176 174 176 177 92 178 93 178 92 179 157 159 180 157 180 181 182 166 183 166 182 167 184 185 186 184 186 187 188 189 190 189 188 191 192 193 194 193 192 195 196 184 197 184 196 185 198 199 200 198 200 201 96 202 97 202 96 203 145 144 204 145 204 205 189 191 164 189 164 165 206 74 207 74 77 208 42 209 210 211 74 212 42 213 214 42 210 215 216 74 217 74 208 218 74 218 217 74 216 219 74 219 220 74 220 221 74 221 207 74 206 222 74 222 223 74 223 224 74 224 212 225 42 74 42 226 227 42 214 228 42 228 229 42 229 226 42 227 230 42 230 231 42 231 209 232 42 215 233 42 232 234 42 233 43 42 234 74 235 225 236 42 225 235 74 211 42 236 213 171 173 133 171 133 132 101 100 111 101 111 110 169 168 125 169 125 124 131 130 99 131 99 98 141 140 237 141 237 238 237 194 238 194 237 192 135 134 239 135 239 240 203 154 202 154 203 152 163 162 196 163 196 197 241 242 199 241 199 198 113 112 139 113 139 138 195 114 193 114 195 115 240 239 175 240 175 174 119 200 118 200 119 201 243 33 244 33 36 245 1 246 247 248 33 249 1 250 251 1 247 252 253 33 254 33 245 255 33 255 254 33 253 256 33 256 257 33 257 258 33 258 244 33 243 259 33 259 260 33 260 261 33 261 249 262 1 33 1 263 264 1 251 265 1 265 266 1 266 263 1 264 267 1 267 268 1 268 246 269 1 252 270 1 269 271 1 270 2 1 271 33 272 262 273 1 262 272 33 248 1 273 250 181 180 274 181 274 275 105 276 103 276 105 277 155 104 153 104 155 102 205 204 129 205 129 128 95 94 278 95 278 279 149 148 182 149 182 183 279 278 91 279 91 90 177 176 280 177 280 281 127 126 242 127 242 241 277 137 276 137 277 136 179 190 178 190 179 188 123 158 121 158 123 156 275 274 161 275 161 160 186 172 187 172 186 170"
				}
			}
			Material
			{
				GetByReference = "Content\\Materials\\Basic Library\\Concrete\\Concrete Floor 01.material"
			}
		}
		.component NeoAxis.RigidBody
		{
			Name = Collision Definition
			Transform = "0 0 0; 0 0 0 1; 1 1 1"
			.component NeoAxis.CollisionShape_Box
			{
				LocalTransform = "0 0 -0.400000005960464; 0 0 0 1; 1 1 1"
				Dimensions = 0.800000011920929 1.20000040531158 2.00000017881393
			}
		}
	}
}
