.component NeoAxis.Component_RegulatorSwitchInSpace
{
	EditorDocumentConfiguration = "\xfeff<?xml version=\"1.0\" encoding=\"utf-16\"?><KD V=\"1\"><DGD /><DM N=\"DockingManager\" C=\"2\"><DW N=\"DockingWorkspace\" O=\"0\" S=\"1147, 842\"><KW V=\"1\" A=\"B091970CB04047999188588069A76D7D\"><CGD /><WS UN=\"4A87E34386084E14BC81ED10FBED4D99\" S=\"T,0,50:T,0,50\" D=\"Horizontal\"><WC UN=\"D794BE03C8C24FA6F08D735B8BDFEEC0\" S=\"T,0,50:T,0,50\" NM=\"BarTabGroup\" AR=\"True\" SP=\"B091970CB04047999188588069A76D7D\"><KP UN=\"B091970CB04047999188588069A76D7D\" S=\"False\"><CPD ObjPath=\"\" /></KP><KP UN=\"898A370845744B9AB9BD751AA6AFA331\" S=\"False\"><CPD ObjPath=\"$C# Script\" /></KP></WC></WS></KW></DW><DF N=\"DockingFloating\" C=\"0\"></DF></DM></KD>"
	Transform = "0 0 0; 0 0 0 1; 1 1 1"
	AngleRange = 0 540
	ChangeSpeed = 0.2
	ValveOffset = 0.25
	ValveRadius = 0.15
	TypeSettingsPrivateObjects
	{
		Length = 2
		0 = $Marker Current
		1 = $C# Script
	}
	Mesh
	{
		GetByReference = "Content\\Pipes\\Authors\\NeoAxis\\Copper pipe 10 cm\\Data\\Valve base.fbx|$Mesh"
	}
	ReplaceMaterialSelectively
	{
		Count = 0
	}
	SpecialEffects
	{
		Value
		{
			Count = 0
		}
	}
	.component NeoAxis.Component_MeshInSpace
	{
		Name = Marker Current
		CanBeSelected = False
		Transform
		{
			GetByReference = "this:$Attach Transform Offset\\Result"
		}
		Mesh
		{
			GetByReference = "Content\\Pipes\\Authors\\NeoAxis\\Copper pipe 10 cm\\Data\\Valve handle.fbx|$Mesh"
		}
		ReplaceMaterialSelectively
		{
			Count = 0
		}
		SpecialEffects
		{
			Value
			{
				Count = 0
			}
		}
		.component NeoAxis.Component_Mesh
		{
			Name = Mesh
			.component NeoAxis.Component_MeshGeometry_Box
			{
				Name = Mesh Geometry
				Dimensions = 0.05 0.14 0.01
				Material
				{
					GetByReference = "Base\\Materials\\White.material"
				}
			}
		}
		.component NeoAxis.Component_TransformOffset
		{
			Name = Attach Transform Offset
			Source
			{
				GetByReference = "this:..\\..\\Transform"
			}
		}
	}
	.component NeoAxis.Component_CSharpScript
	{
		Name = C# Script
		Code = "public void InteractiveObjectButton_UpdateEvent(NeoAxis.Component sender, float delta)\r\n{\r\n\tvar _this = sender as RegulatorSwitchInSpace;\r\n\tif (_this != null)\r\n\t{\r\n\t\tvar markerCurrent = _this.GetComponent(\"Marker Current\");\r\n\t\tif (markerCurrent != null)\r\n\t\t{\r\n\t\t\tvar offset = markerCurrent.GetComponent<TransformOffset>();\r\n\t\t\tif (offset != null)\r\n\t\t\t{\r\n\t\t\t\tvar angle = _this.GetValueAngle() - 90;\r\n\t\t\t\tvar angleR = MathEx.DegreeToRadian(angle);\r\n\t\t\t\toffset.RotationOffset = new Angles(angle, 0, 0).ToQuaternion();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}"
		__parameter_Delta = 0
		Exit
		{
		}
		.component NeoAxis.EventHandlerComponent
		{
			Name = Event Handler UpdateEvent
			WhenEnable = Editor, Simulation, Instance
			Event
			{
				GetByReference = "this:..\\..\\event:UpdateEvent"
			}
			HandlerMethod
			{
				GetByReference = "this:..\\method:InteractiveObjectButton_UpdateEvent(NeoAxis.Component,System.Single)"
			}
			HandlerFlow
			{
			}
		}
	}
}
