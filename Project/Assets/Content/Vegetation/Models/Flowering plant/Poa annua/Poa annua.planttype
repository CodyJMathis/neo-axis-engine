// Made with NeoAxis Engine 2023.1.

.component NeoAxis.PlantType
{
	EditorDocumentConfiguration = "\xfeff<?xml version=\"1.0\" encoding=\"utf-16\"?><KD V=\"1\"><DGD /><DM N=\"DockingManager\" C=\"2\"><DW N=\"DockingWorkspace\" O=\"0\" S=\"1145, 842\"><KW V=\"1\" A=\"D311CF077AC34E5CA4A1B5195DBA745E\"><CGD /><WS UN=\"4A87E34386084E14BC81ED10FBED4D99\" S=\"T,0,50:T,0,50\" D=\"Horizontal\"><WC UN=\"8631A922B9E64C763C9DB8903868FA34\" S=\"T,0,50:T,0,50\" NM=\"BarTabGroup\" AR=\"True\" SP=\"D311CF077AC34E5CA4A1B5195DBA745E\"><KP UN=\"746481D48F8041BE96BE35BCEF36BA7F\" S=\"False\"><CPD ObjPath=\"\" /></KP><KP UN=\"D311CF077AC34E5CA4A1B5195DBA745E\" S=\"False\"><CPD ObjPath=\"$C# Script\" /></KP></WC></WS></KW></DW><DF N=\"DockingFloating\" C=\"0\"></DF></DM></KD>"
	MatureAge = 0.25
	MatureHeight = 0.2 0.3
	GenerateIndividuals = False
	GenerateGroups = True
	GroupSize = 15
	GroupRadius = 0.6
	GroupMaxIncline = 45
	GroupMaxInclineFromCenter = 5
	Variations = 1
	Ages = Young, Mature
	SegmentsByMeter = 30
	SegmentsByCircle = 6
	LODLevels = 2
	LODDistance = 30
	LODVoxelThinFactor = 0.25
	.component NeoAxis.PlantMaterial
	{
		Name = Bark Material
		PartType = BranchWithLeaves
		RealLength = 0.2
		UVMode = Point
		UVFrontPosition = 0.496 0.97
		UVFrontDirection = 270
		UVLengthRange = -0.015 0.333
		UVWidth = 0.935
		Material
		{
			GetByReference = "Content\\Vegetation\\Models\\Flowering plant\\Poa annua\\Data\\Material.material"
		}
	}
	.component NeoAxis.CSharpScript
	{
		Name = C# Script
		Code = "public void _GenerateStage(NeoAxis.PlantType sender, NeoAxis.PlantGenerator generator, NeoAxis.PlantGenerator.ElementTypeEnum stage)\r\n{\r\n#if !DEPLOY\r\n\t\r\n\t//here is a script for the plant generator to specialize our plant type\r\n\t\r\n\tswitch( stage )\r\n\t{\r\n\tcase PlantGenerator.ElementTypeEnum.Trunk:\r\n\t\t{\r\n\t\t\tvar material = generator.FindSuitableMaterial( PlantMaterial.PartTypeEnum.BranchWithLeaves );\r\n\t\t\tvar length = generator.Height;\r\n\r\n\t\t\t{\r\n\t\t\t\tvar transform = new Transform( Vector3.Zero, Matrix3.LookAt( Vector3.ZAxis, Vector3.XAxis ).ToQuaternion() );\r\n\t\t\t\tgenerator.Trunks.Add( generator.CreateElementRibbon( null, material, transform, length, 0, false, 0 ) );\r\n\t\t\t}\r\n\r\n\t\t\t{\r\n\t\t\t\tvar transform = new Transform( Vector3.Zero, Matrix3.LookAt( Vector3.ZAxis, Vector3.YAxis ).ToQuaternion() );\r\n\t\t\t\tgenerator.Trunks.Add( generator.CreateElementRibbon( null, material, transform, length, 0, false, 0 ) );\r\n\t\t\t}\r\n\t\t}\r\n\t\tbreak;\r\n\t}\r\n\t\r\n#endif\r\n}\r\n"
		__parameter_Stage = Trunk
		Exit
		{
		}
		__parameter_Generator
		{
		}
		.component NeoAxis.EventHandlerComponent
		{
			Name = Event Handler GenerateStage
			WhenEnable = Editor, Simulation, Instance
			Event
			{
				GetByReference = "this:..\\..\\event:GenerateStage"
			}
			HandlerMethod
			{
				GetByReference = "this:..\\method:_GenerateStage(NeoAxis.PlantType,NeoAxis.PlantGenerator,NeoAxis.PlantGenerator.ElementTypeEnum)"
			}
			HandlerFlow
			{
			}
		}
	}
}
